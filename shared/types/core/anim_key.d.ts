export default class AnimKey {
    static cubicSpline(perc: any, key1: any, key2: any): number;
    static easeCubicSpline(perc: any, key2: any): number;
    static linear(perc: any, key1: any, key2: any): number;
    static easeLinear(perc: any, key2: any): number;
    static easeAbsolute(perc: any, key2: any): any;
    static easeExpoIn(t: any): number;
    static easeExpoOut(t: any): any;
    static easeExpoInOut(t: any): any;
    static easeSinIn(t: any, key2: any): number;
    static easeSinOut(t: any, key2: any): number;
    static easeSinInOut(t: any, key2: any): number;
    static easeCubicIn(t: any): any;
    static easeInQuint(t: any, key2: any): number;
    static easeOutQuint(t: any, key2: any): number;
    static easeInOutQuint(t: any, key2: any): number;
    static easeInQuart(t: any, key2: any): number;
    static easeOutQuart(t: any, key2: any): number;
    static easeInOutQuart(t: any, key2: any): number;
    static bounce(t: any): any;
    static easeInBounce(t: any, key2: any): number;
    static easeOutBounce(t: any, key2: any): number;
    static easeInElastic(t: any, key2: any): number;
    static easeOutElastic(t: any, key2: any): number;
    static easeInBack(t: any, key2: any): number;
    static easeOutBack(t: any, key2: any): number;
    static easeInOutBack(t: any, key2: any): number;
    static easeCubicOut(t: any, key2: any): number;
    static easeCubicInOut(t: any): any;
    static easeSmoothStep(perc: any, key2: any): number;
    static easeSmootherStep(perc: any, key2: any): number;
    constructor(obj: any);
    time: number;
    value: number;
    selected: boolean;
    onChange: any;
    _easing: number;
    cb: any;
    cbTriggered: boolean;
    setEasing(e: any): void;
    ease: any;
    trigger(): void;
    setValue(v: any): void;
    set(obj: any): void;
    getSerialized(): {
        t: number;
        v: number;
        e: number;
    };
    getEasing(): number;
}
