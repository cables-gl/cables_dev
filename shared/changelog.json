{
    "items": [
        {
            "text": "current dev changelog\r\n\r\n#### Ops\r\n\r\n- bugfix: Ops.Devices.Mobile.ScreenOrientation_v2 - Update op to work with current API\r\n- bugfix: Ops.Sidebar.SidebarText_v3 - use correct string input for id\r\n- feature: Ops.Gl.Performance - Added active toggle to completly disable calculation of performance data\r\n- improvement: Ops.Devices.Midi.MidiInputDevice_v2 - reduced loglevel when device connection errors\r\n- improvement: Ops.Sidebar.Incrementor_v3 - Removed values-array input\r\n- improvement: Ops.WebAudio.FFTAreaAverage_v3 - fixed display problem when having the op multiple times on the patch\r\n- improvement: Ops.WebAudio.FFTAreaAverage_v3 - outputed texture is not flipped anymore\r\n- new op: Ops.Color.ColorArraySort -\r\n- new op: Ops.Color.HuePalettes - Generate Human friendly color palettes using the HCL space\r\n- new op: Ops.Dev.RGBMaxValues - \r\n- new op: Ops.Html.AlignElement - get html element absolute position and size in pixels on screen\r\n- new op: Ops.Math.RandomNumbersFromString - Random number generator from a string seed\r\n- new op: Ops.Sidebar.SidebarDateTime - date or datetime picker in the sidebar\r\n\r\n#### Editor\r\n\r\n- editor: added new commands for existing functionality, e.g. code a new op\r\n- editor: fix bug with op-create/clone dialog jumping to end of input\r\n- editor: easily search for variables from the param panel\r\n- editor: improve snapping of lower ops to port positions in resized parent ops\r\n- editor: removed \"tab\" as opselect hotkey (if you need it, add it via userpreferences hotkey for opselect: e.g. set to \"escape,tab\")\r\n- editor: basic improved keyboard support, html forms and buttons can be focussable via tab key and executable by pressing enter\r\n- editor: optimize op search, less lags\r\n- editor: remote client will open console and show errors and exceptions\r\n- editor: subpatch ops do not break when setting default values containing line breaks\r\n- editor: make asset uploads \"case aware\" (assets with different upper/lower-case will overwite content but keep original file case)\r\n- editor: remove warning about \"new namespace creation\" if not core-namespace\r\n- editor: show buildinfo for shared code in debug console\r\n\r\n#### Core\r\n\r\n- core: fix order of shadermodules\r\n\r\n#### Website\r\n\r\n- website: limit activities per user per block to 3 entries\r\n- website: dev page: op page shows, if op does not exists on live environment\r\n\r\n#### Standalone\r\n\r\n- standalone: add command to copy op-dir to clipboard\r\n- standalone: add command to open op directory in finder/explorer\r\n- standalone: improve support for npm modules using import/require and other node-versions\r\n- standalone: improve errormessages for cases where npm modules still do not/cannot work\r\n- standalone: change default namespace to Ops.Local.\r\n- standalone: change default op location to ./ops relative to .cables-file\r\n- standalone: fix error when loading initial empty layout of new op\r\n- standalone: fix adding attachments to ops\r\n- standalone: fix external editing of opcode, remove duplicate code\r\n- standalone: fix cloning op into new directory\r\n- standalone: speed up updating of opcode when editing with external editor\r\n- standalone: update electron version to 31.7.3\r\n- standalone: add \"services\" and \"hide\" options to about-menu on osx\r\n- standalone: remember \"allow pasting\" in devtools\r\n- standalone: add runtime info (nodeversion, chromeversion, ...) to \"About Cables\"\r\n- standalone: show \"open op dir\" button in editor\r\n- standalone: fix asset export for html export on windows\r\n- standalone: remove usless info about creating a new namespace\r\n- standalone: fix numbers in manage op directories tab\r\n- standalone: change default setting for preventing idlemode to true\r\n- standalone: set new empty patch as unsaved\r\n- standalone: set current patchname as default filename in save windows\r\n- standalone: development version: add https option to install_local.sh",
            "date": 1732542698332,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Array.ArrayNumberRamp - Create an array that contains X numbers between start and end values\r\n- new op: Ops.Color.HSLtoRGB - Convert HSL to RGB\r\n- new op: Ops.Color.LuminanceContrast - Calculate the luminance contrast between two colors\r\n- new op: Ops.Color.RGBLuminance - Calculate the luminance of a RGB color\r\n- new op: Ops.Color.RGBToCMYK - Output the CMYK value of a RGB color\r\n- new op: Ops.Color.RGBtoHSL - Convert RGB color to HSL values\r\n- new op: Ops.Extension.Standalone.Ffmpeg - FFmpeg video converter toolbox op\r\n- new op: Ops.Extension.Standalone.Files.CreateFile - Create a new empty file on your local harddrive\r\n- new op: Ops.Extension.Standalone.Files.Exist - Check if a file exists on the local file system\r\n- new op: Ops.Extension.Standalone.Files.FileUrlToPath - Convert file-url to path\r\n- new op: Ops.Extension.Standalone.Files.Makedir - Create a directory on the local file system\r\n- new op: Ops.Extension.Standalone.Files.OpenFileManager - Open the native file manager application using that path\r\n- new op: Ops.Extension.Standalone.Files.PathToFileUrl - Convert local path to file-url\r\n- new op: Ops.Extension.Standalone.Files.ReadDir - Read all entries in a directory\r\n- new op: Ops.Extension.Standalone.Files.ResolvePath - Resolves a paths into an absolute path\r\n- new op: Ops.Extension.Standalone.Files.SelectDir - Choose a directory on your hard drive\r\n- new op: Ops.Extension.Standalone.Files.SelectFile - Choose a file on your hard drive\r\n- new op: Ops.Extension.Standalone.Files.Stat - Get statistics about a file on the local file system\r\n- new op: Ops.Extension.Standalone.Files.SystemDirs - Get Default System Directories Paths\r\n- new op: Ops.Extension.Standalone.Files.Watch - Watch a directory, get a trigger when a file changes\r\n- new op: Ops.Extension.Standalone.Files.WriteBinaryFileFromBase64 - Create a binary file on the local file system from a base64 string\r\n- new op: Ops.Extension.Standalone.Files.WriteTextFile - Write a string to a text file on the local file system\r\n- new op: Ops.Extension.Standalone.Net.HttpServer - Create a Web/Http server locally\r\n- new op: Ops.Extension.Standalone.Net.HttpServerHttpServerResponse - Answer http requests by sending string to the browser/client\r\n- new op: Ops.Extension.Standalone.Net.IpAddress - Outputs your local IP Adress\r\n- new op: Ops.Extension.Standalone.Net.Osc - OSC Connection\r\n- new op: Ops.Extension.Standalone.Net.OscSend - Send data to a OSC device\r\n- new op: Ops.Extension.Standalone.Net.ReadTextFile - Read a text file as string from the local file system\r\n- new op: Ops.Gl.ImageCompose.Noise.GaborNoise - Render \"gabor noise\" into a texture\r\n- new op: Ops.Gl.ImageCompose.Noise.Shardnoise - Render \"shard noise\" into a texture\r\n- new op: Ops.Html.CSS.ElementCss3DTransform - 3d Transform a HTML element by using CSS3D properties\r\n- new op: Ops.Html.CSS.SetCssVariableUrl - Set CSS variable URL value\r\n- new op: Ops.Ui.VizArrayGraph - Visualize Arraty as line graph\r\n\r\n#### Op Improvements\r\n\r\n- feature: Ops.Cables.UIMode - Added output \"Is Standalone\" is true if we are in cables electron standalone\r\n- feature: Ops.Gl.GradientTexture - Add XX and YY option to have a one axis gradient that is size*size pixels big and not size*1 pixels (e.g. needed to add dithering)\r\n- feature: Ops.Gl.GradientTexture - Added option to add dithering to reduce color banding\r\n- feature: Ops.Gl.ImageCompose.ImageCompose_v4 - Added clear checkbox parameter, uncheck for feedbacking\r\n- feature: Ops.Gl.ImageCompose.PixelDisplacement_v4 - Added pixel mapping mode: e.g. in case the displacement texture is smaller than the texture to displace. useful for displacing with smaller noise textures\r\n- feature: Ops.Gl.Pbr.PbrMaterial - Added toggle for double sided, which will flip normals when the face is not front-facing \r\n- feature: Ops.Gl.Textures.MontageTextures_v2 - Added X/Y overlap mode, e.g. for comparing images visually to each other\r\n- feature: Ops.Html.QuerySelectorAll - Catch errors and show them to the user\r\n- feature: Ops.Ui.VizArrayTable - Added stride input. Force a stride for display. Default value 0 will not change stride at all. Will display an error if the stride is not compatible with the arrays length\r\n- feature: Ops.Ui.VizArrayTable_v2 - Added stride input. Force a stride for display. Default value 0 will not change stride at all. Will display an error if the stride is not compatible with the arrays length\r\n\r\n- improvement: Ops.Anim.RandomAnim_v2 - New version: remove not correctly working seed\r\n- improvement: Ops.Devices.Midi.MidiOutputDevice - Retry getting midi devices when midi api silently fails\r\n- improvement: Ops.Extension.SocketCluster.SocketCluster_v2 - Print error message, remove connection on op delete, return error string\r\n- improvement: Ops.Extension.Standalone.Net.Osc - Fixed port input / fixed status output not resetting /  fixed problems with reconnecting after deleting op\r\n- improvement: Ops.Gl.GradientTexture - Opening the gradient editor at the bottom edge of the window will now move the gradient editor up so it is fully visible\r\n- improvement: Ops.Gl.MediaRecorder_v2 - Add default canvas option to use the current WebGL canvas, which also works better with popout canvas\r\n- improvement: Ops.Gl.Shader.MatCapMaterial_v3 - Double sided toggle\r\n- improvement: Ops.Gl.TextureToColorArray_v3 - Add option to not always output floating point numbers\r\n- improvement: Ops.Html.BackgroundImage_v2 - Fixed cache problems\r\n- improvement: Ops.Html.Element_v2 - V2: Interactivity is now a switch between True,False or pointer-events:none\r\n- improvement: Ops.Html.ImageElement - Can now be ctrl-hover picked as all html elements\r\n- improvement: Ops.Html.ImageElement_v2 - V2: Can now be ctrl-hover picked as all html elements\r\n- improvement: Ops.Html.QuerySelector_v2 - Catch and show errors to the user\r\n- improvement: Ops.Sidebar.Toggle_v4 - CSS classes are applied correctly now on init\r\n- improvement: Ops.Trigger.TriggerReceive - Trigger names in dropdown are sorted alphabetically\r\n- improvement: Ops.Trigger.TriggerSend - Trigger names in dropdown are sorted alphabetically\r\n- improvement: Ops.Ui.Area - Added delete button: removes area without deleting operators inside\r\n- improvement: Ops.Ui.VizArrayTable_v2 - New version v2: will now show scrollbars and a slider for scrolling\r\n- improvement: Ops.Ui.VizObject - Can now also visualize complex objects with functions etc.\r\n\r\n- bugfix: Ops.Gl.FontMSDF_v2 - Only set library default values when in UI/Editor\r\n- bugfix: Ops.Gl.Meshes.GeometryToTexture_v3 - Fixed rounding errors with some texture sizes resulting in transparent pixels\r\n- bugfix: Ops.Gl.Meshes.PointCloudFromArray_v2 - New Version v2: An array with the length of 0 will now draw nothing. (was: was still drawing the last valid pointcloud)\r\n- bugfix: Ops.Gl.Meshes.SimpleSpline_v2 - New Version v2: An array with the length of 0 will now draw nothing. (was: was still drawing the last valid spline)\r\n- bugfix: Ops.Gl.Shader.PointMaterial_v6 - New version v6: Fixed problems with HDPI, high pixel ratio displays - Multiply pixel ratio with point size in vertex shader\r\n- bugfix: Ops.Gl.TextureToColorArray_v2 - Fix outputing wrong amount of values\r\n- bugfix: Ops.Html.ElementCssTransform_v2 - Fixed zindex parameter was not working\r\n- bugfix: Ops.WebAudio.MicrophoneIn_v2 - Fix listening state output was outputing the wrong value\r\n\r\n\r\n#### Editor/UI\r\n\r\n\r\n\r\n\r\n- editor: Add VizArrayGraph to default vizualisation suggestions\r\n- editor: Alt+tab on mac can now cycle through open tabs\r\n- editor: Better contrast+readability for text editor search results and selected text background color\r\n- editor: Bugfix: rightclick drag a cable onto another cable to replace it, works again\r\n- editor: Clicking the bar below the canvas will focus the canvas\r\n- editor: Console: don't open console on socket timeout errors\r\n- editor: Console: stacktrace lines only clickable when starting with valid protocols\r\n- editor: Disable chrome default gestures when two finger panning and zooming\r\n- editor: Don't let network errors open error console, show connection problem icon\r\n- editor: File manager clear filter when selecting file\r\n- editor: Fix bug with black tabs when activating same tab again\r\n- editor: Fix bug with op parameter changes where setting an unsaved state for a wrong subpatch\r\n- editor: Fix bug with op search dialog not showing documentation after creating a new op\r\n- editor: Fix crash when saving recursive subpatch ops\r\n- editor: Fix file not being uploaded in rare cases when dragged file in internal filemamnager before\r\n- editor: Fix flickering progressbar when uploading files\r\n- editor: Fix problem with editor not creating a tab when editing ops with the same basename\r\n- editor: Fixed/improved height of text editor when opening the first time or when toggline log console\r\n- editor: Handle non-text characters when checking for opname in create/rename dialog\r\n- editor: Improved syntax highlighting in viz ops\r\n- editor: Keep patch-ops unique when cloning patches and copying ops over\r\n- editor: Less modals when saving ops\r\n- editor: Logging console better multiline logs\r\n- editor: Logging console divide lines by time difference\r\n- editor: Logging console higher contrast\r\n- editor: Manage op: fix bug where manage op did not show the port editor for subpatch ops\r\n- editor: Manage op: subpatch ops: hide libs and attachment files from\r\n- editor: New command for re-executing a selected op: \"reload op\"\r\n- editor: Op rename: do not show initial errormessage\r\n- editor: Patch outline: remove html from comments and limit length\r\n- editor: Prevent saving of recursive subpatch ops\r\n- editor: Remove old backup system from export, because it does not support subpatchops\r\n- editor: Rework \"op not found\" error-window to link to dev/live and directly to editor\r\n- editor: Rework dialogs for create/patch/clone op\r\n- editor: String ports will show an op warning when they contain \"unusual\" utf8 characters,e.g. line separator, that can break js minify functionality.....\r\n- editor: Subpatch ops: creating subpatches is faster/smoother animation\r\n- editor: Subpatch ops: creation: re-link all linked ops to a single port\r\n- editor: Subpatch ops: fix async timing problems\r\n- editor: Subpatch ops: improve link creation/auto linking\r\n- editor: Subpatch ops: less saving of subpatches needed\r\n- editor: Text editor tabs, will focus on activate\r\n- editor: To rename an operator, you can now just click its title in the parameter panel (if you have write access)\r\n- editor: Try to resolve ops that do not exist against other environments (dev.cables.gl/cables.gl)\r\n- editor: Unlinked ops are now again behind cables\r\n- editor: Update patchtitle in editor also when publishing failed\r\n- editor: User preferences now have an option to wrap the text editor lines\r\n- editor: User preferences: added modes for scroll events: choose between mousewheel zoom or touchpad/tablet+pen panning mode, or auto\r\n\r\n#### Op Renames\r\n\r\n- rename: Ops.Gl.Meshes.ParametricSurface - Deprecated.ParametricSurface renamed to Ops.Gl.Meshes.ParametricSurface\r\n- rename: Ops.Gl.TextureToArray_v3 - .TextureToColorArray_v3 renamed to Ops.Gl.TextureToArray_v3\r\n- rename: Ops.Gl.TextureToRandomPoints - Gl.TextureToPoints renamed to Ops.Gl.TextureToRandomPoints\r\n- rename: renamed CSS ops to new namespace Ops.Html.CSS\r\n\r\n#### Website\r\n\r\n- website: Automatically register op namespace for newly created team\r\n- website: Docs: add section about standalone features\r\n- website: Fix bug in creation of patchlists\r\n- website: Fix importing project in zip with local assets\r\n- website: Fix severial issues with importing backups and standalone projects\r\n- website: Include export-type in downloaded zip-name (e.g. cables_pro_html_12.zip)\r\n- website: Show error when uploading user- or team-avatar fails\r\n- website: Show npm packages on op page\r\n- website: Three-dot-menu contains \"view big\" link\r\n- website: Try to find op in other environments (dev.cables.gl/cables.gl) then not found\r\n\r\n",
            "date": 1730280487620,
            "youtubeid": ""
        },
        {
            "text": "#### Read more in out blogpost: \r\nhttps://blog.cables.gl/2024/08/27/august-2024-update/\r\n\r\n#### New ops\r\n\r\n- new op: Ops.Array.PointArray.Array3RepeatTransform - Repeat an array by transforming it x times\r\n- new op: Ops.Debug.CrashOp - Crash the editor in many ways\r\n- new op: Ops.Html.Element - A more convinient version of div element op, that can be used for creating html without writing much css code\r\n- new op: Ops.Html.ElementCssBorder - Set CSS border properties of a HTML element\r\n- new op: Ops.Html.ElementCssColor - Set text and background colors of an HTML element\r\n- new op: Ops.Html.ElementCssFont - Set font and text properties of a html element\r\n- new op: Ops.Html.ElementCssPadding - Set css padding of a html element\r\n- new op: Ops.Html.ElementCssString - Add shadows to html elements\r\n- new op: Ops.Html.ScrollIntoView - Scroll an area, so the html element is visible/in view\r\n\r\n#### Op Enhancements\r\n\r\n- feature: Ops.Devices.Keyboard.CursorKeys - Added output for directional degree and if any button is pressed\r\n- feature: Ops.Gl.Meshes.Cross - Added toggles for left/right/top/bottom parts\r\n- feature: Ops.Gl.Meshes.TextMesh_v2 - Text scale parameter: scale the whole text\r\n- feature: Ops.Html.FontFile_v2 - Added active toggle to completly unloaded a font, or even never load it in the first place\r\n\r\n- improvement: Ops.Ui.VizArrayTable - it will now also visualize arrays of arrays and objects \r\n- improvement: Ops.Anim.LFO_v3 - Adjusted amplitudes\r\n- improvement: Ops.Array.SortArray - make sorting work with array of strings\r\n- improvement: Ops.Boolean.ToggleBool_v2 - Add output trigger which is triggered after any input was triggered\r\n- improvement: Ops.Devices.Midi.MidiInputDevice_v2 - Workaround browser does not return midi access: try again many times \r\n- improvement: Ops.Gl.GradientTexture - Fix problems with flickering because texture was generated not early enough\r\n- improvement: Ops.Gl.Meshes.PointCloudFromTexture - Only modifies PSMUL pointsize multiplier when POINTMATERIAL is defined / fixes crashes with non pointmaterials\r\n- improvement: Ops.Gl.Textures.NoiseTexture - Texture creation will create a loading job and only run before rendering a frame\r\n- improvement: Ops.Html.CSSPropertyString - Added active toggle to temporary remove property from element\r\n- improvement: Ops.Html.ImageElement - Disable caching when uploading a new version of image to the editor\r\n- improvement: Ops.Html.ImageElement - Show filename in extended op title\r\n- improvement: Ops.Json.HttpRequest_v3 - JSON parse errors will not throw an exception but show an uiError\r\n- improvement: Ops.Json.HttpRequest_v3 - Show warning if url is empty\r\n- improvement: Ops.Net.WebSocket.WebSocket_v2 - Show error messages from websocket API and check for correct protocol\r\n- improvement: Ops.String.Base64.Base64Encode_v3 - new Version 3: Default value for mimetype input, when no mimetype is provided, the output is not a dataUrl\r\n\r\n- bugfix: Ops.Boolean.ToggleBool_v2 - fixed bug when default value true needed two trigger to become false\r\n- bugfix: Ops.Gl.Matrix.OrbitControls_v3 - fix with active toggle not working when value is false and it was never triggered before\r\n- bugfix: Ops.Gl.Meshes.MeshInstancerFromTexture_v3 - Fix bug not rendering correctly on the first frame\r\n- bugfix: Ops.Gl.TextMeshMSDF_v2 - fix: correctly discard Pixels when fully transparent\r\n- bugfix: Ops.Gl.TextureToColorArray_v2 - Fix problem with floating point textures\r\n- bugfix: Ops.Gl.Textures.TextureToBase64_v5 - Fixed bug: was not updating output in all cases\r\n- bugfix: Ops.Html.FullscreenMode - Fix null pointer exception happening even if everything worked fine\r\n\r\n- rename: Ops.Array.PointArray.Array3AreaRemove - Ops.Array.Array3AreaRemove renamed to Ops.Array.PointArray.Array3AreaRemove\r\n- rename: Ops.Array.PointArray.Array3FlipAxis - Ops.Array.Array3FlipAxis renamed to Ops.Array.PointArray.Array3FlipAxis\r\n- rename: Ops.Array.PointArray.Array3PointEditor - Ops.Array.Array3PointEditor renamed to Ops.Array.PointArray.Array3PointEditor\r\n- rename: Ops.Array.PointArray.Array3VectorDistance - Ops.Array.Array3VectorDistance renamed to Ops.Array.PointArray.Array3VectorDistance\r\n- rename: Ops.Array.PointArray.SortArray3ByDistance - Ops.Array.SortArray3ByDistance renamed to Ops.Array.PointArray.SortArray3ByDistance\r\n- rename: Ops.Array.PointArray.SplinePositionAtDistanceArray3 - Ops.Array.SplinePositionAtDistanceArray3 renamed to Ops.Array.PointArray.SplinePositionAtDistanceArray3\r\n- rename: Ops.Array.PointArray.SubdivideArray3_v2 - Ops.Array.SubdivideArray3_v2 renamed to Ops.Array.PointArray.SubdivideArray3_v2\r\n- rename: Ops.Array.PointArray.TransformArray3 - Ops.Array.TransformArray3 renamed to Ops.Array.PointArray.TransformArray3\r\n\r\n#### Editor\r\n\r\n- editor: inspect or port value editor tabs, that refer a deleted(e.g. reloaded) op, will be closed automatically\r\n- editor: also use horizontal scroll when incrementing port values (shift+wheel)\r\n- editor: better storing and restoring of patch view, e.g. after loading the patch or maximizing canvas\r\n- editor: create backup before exporting patch, for cables-supporters\r\n- editor: create/claim Ops.Extension.Standalone a team and namespace for native standalone electron operators\r\n- editor: error report sending improved and error reports are public\r\n- editor: escape html results in search results\r\n- editor: fix links in \"recent patches\" to be actual hyperlinks and middle-clickable\r\n- editor: fix op text and port rendering precision problems when scrolling/zooming\r\n- editor: html overlay inspect click was not showing op params\r\n- editor: improve loading speed by reducing filesize of used gui libs by 50%\r\n- editor: improve speed by avoiding useless request when coppy-pasting newly created op\r\n- editor: improved error catching and handling\r\n- editor: improved error catching and reporting\r\n- editor: improved error display, automatic display of error source code when possible\r\n- editor: improved showing loading indicator when loading data from server\r\n- editor: less creation of duplicate input/ouput ops in subpatche\r\n- editor: less modal error dialogs, but error console opening automaticall\r\n- editor: less network requests when editing ops\r\n- editor: make sure op version suffix (e.g. _v2) can only contain numbers in clone and rename\r\n- editor: new logging console\r\n- editor: ops can now be renamed directly in the editor\r\n- editor: patch outline treeview now has filter options\r\n- editor: port suggestion dialogs now will show the portcolors (e.g. when creating ports by dragging)\r\n- editor: reduced number of requests to load op data from server\r\n- editor: rename op: automatically select last part of op name to overwrite\r\n- editor: renaming of ops in editor directly\r\n- editor: reupload file button: quickly replace existing files with a new version\r\n- editor: show big fat red warning when deleting assets in public patch\r\n- editor: show comments in bookmark treeview\r\n- editor: show manage op button in op search dialog doc panel (e.b. for editing ops even when they crash on create)\r\n- editor: speed up checking validity of opname in clone and rename\r\n- editor: store last saved version as automatic backup\r\n- editor: when clicking title in a subpatch the outer op will be centered and focusssed\r\n- editor: show all patchops in opselect, even if not used\r\n- editor: offer oldschool form upload to upload big files in chrome, on error\r\n\r\n#### Website\r\n\r\n- website: fix bug on opspage when entering invalid example patch id\r\n- website: improve opengraph/share information for teams and patchlists\r\n- website: fix sorting and filtering on /ops namespace pages\r\n- website: fix caching of team- and user-avatars, update after uploading\r\n- website: protection against spammers / no public user profiles anymore if the user is not really active\r\n- website: search engine optimization / better indexing \r\n- website: fix bug in regeneration of small/mini avatar images when uploading\r\n- website: fix link to op namespace on op-page for non-existing op\r\n- website: show deprecated ops in namespaces on /ops/ page\r\n- website: for spam protection reasons: user profiles are only shown when when fulfilling \r\ncertain rules\r\n- website: fix overlapping html elements when clicking patch maximize button\r\n- website: export unminifed code when minifying fails, show info on export page\r\n- website: fix bug when deleting nested team namespace\r\n- website: fix wrong errordisplay when registering with already registered email\r\n- website: speed up checking patch dependencies during delete (also from editor)\r\n- website: set default date for op-changelog entries to \"now\" when sending empty data or 0\r\n- website: hand over queryparameters to iframe on patch view page\r\n- website: show namespace name and link on op thumbnails\r\n- website: do not add \"new op\" changelog entry when cloning to a new version\r\n- website: add entry to changelog when renaming op\r\n- website: search private patches input on mypatches page\r\n- website: fix bug in backup of project created after export\r\n- website: update exe-export version of electron to match up with standalone\r\n- website: add basic re-import of standalone projects to /mydata\r\n\r\n#### Docs\r\n\r\n- docs: rework nightly creation of jsdocs for cables/cables_ui/cables_electron\r\n- docs: fix links to \"continue below\" on standalone docs\r\n\r\n#### misc\r\n\r\n- cables-cli: show log entries of level info/warning/error on console\r\n- cables-cli: add option do supply/override api-key via command-line\r\n- cables-cli: add option to export patch to use in standalone version\r\n- misc: archive \"cables daplaya\" repository, move to cables standalone or exe export \r\n",
            "date": 1724839853783,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Graphics.Geometry.GeometryFromArrays - create a geometry from arrays\r\n- new op: Ops.Date.TimestampToIsoDate - convert a timestamp to an ISO date string\r\n- new op: Ops.Gl.Textures.TextureInfo_v2 - Outputs information about the connected texture\r\n- new op: Ops.Html.ElementChildsMultiPort - add child elements to another HTML Element\r\n- new op: Ops.Html.ElementCssShadow - Add shadows to html elements\r\n- new op: Ops.Website.InIframe - Outputs true if the patch is inside of an iframe\r\n\r\n#### Op Enhancements\r\n\r\n- feature: Ops.Cables.UIMode - Added output port: Is overlay mode activated right now ? (hotkey \"o\")\r\n- feature: Ops.String.NumberToString_v2 - Added Input for max number of decimal places\r\n- improvement: Ops.Array.ArrayReverse - Added active toggle\r\n- improvement: Ops.Gl.GlInfo_v2 - Add Number output for WebGl Version\r\n- improvement: Ops.Html.ElementCssTransform - Added pass through element output port\r\n- improvement: Ops.Html.ElementCssTransform - Show error when element is not positioned absolute\r\n- improvement: Ops.String.StringToNumber - Added output if string is not a number\r\n- improvement: Ops.Ui.VizLogger - Performance optimization with very long lines\r\n\r\n#### Deprecated Ops\r\n\r\n- deprecation: Ops.Extension.Deprecated.ArrayTranslate - op was deprecated\r\n- deprecation: Ops.Extension.Deprecated.IfEqualsThen - op was deprecated - please use ifTrueThen\r\n- deprecation: Ops.Extension.Deprecated.LetterBox - op was deprecated\r\n- deprecation: Ops.Extension.Deprecated.RemoveAllClasses - op was deprecated\r\n- deprecation: Ops.Extension.Deprecated.Trace - op was deprecated\r\n- deprecation: Ops.Extension.Deprecated.WebGlVersion - op was deprecated\r\n- deprecation: Ops.Extension.Deprecated.GetStringFromObject - op was deprecated\r\n\r\n#### Editor\r\n\r\n- editor: changed extended title color to grey\r\n- editor: fix bug where changing the title in patch settings did not propagate to editor fields\r\n- editor: op extended titles are shortened if too long\r\n- editor: changed extended title color to grey\r\n- editor: overlay mode: now also highlights selected html element ops\r\n- editor: new command \"set patch title\"\r\n- editor: fix inconsistencies on handling patch title changes\r\n\r\n#### Website\r\n\r\n- website: fix texture/asset refresh on uploaded files\r\n- website: show basic file info and link to original patch on asset page for \"orphaned assets\"\r\n- website: redirect do namespace page when calling /ops/ with full op-name\r\n- website: add deletion of assets to patch-log\r\n- wesbite: show error message when exporting patch with ops from different environment\r\n- website: store original patch-creator in database on create/clone\r\n- website: warnings when renaming from an op that do not exist\r\n\r\n#### Standalone\r\n\r\n- standalone: change patchname on save of new project and save as\r\n- standalone: fix npm errors on windows and in packaged version\r\n- standalone: show missing npm packages for ops as ui-error\r\n- standalone: add zooming to the ui via cmd-- and cmd-+\r\n- standalone: fix errors when project is not initialized before editor loads\r\n- standalone: run \"build\" before \"package\" in build-process\r\n- standalone: make ui zoomable with cmd/ctrl-+-\r\n- standalone: fix error when loading local video files\r\n",
            "date": 1721045870908,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Array.ArrayLookup -  Create an array that is filled with values looked up by index from another array\r\n- new op: Ops.Array.ArraySetString - set a string at index in an array\r\n- new op: Ops.Array.NumbersToArrayMultiPort - Create an array from multiple number inputs\r\n- new op: Ops.Array.SwitchArrayMultiPort - Switch between multiple input arrays\r\n- new op: Ops.Cables.GetSubPatchName - Outputs the current subpatch op name\r\n- new op: Ops.Data.Compose.Object.CompObjectFromObject - Set key/values to the current ObjectCompose from an existing object\r\n- new op: Ops.Gl.Textures.SwitchTextureMultiPort - Switch between multiple textures\r\n- new op: Ops.Json.SwitchObjectMultiPort - Switch between multiple object inputs\r\n- new op: Ops.Number.SwitchNumberMultiPort - Switch between multiple number inputs\r\n- new op: Ops.String.ConcatMultiPort - concatinate/join multiple string inputs\r\n- new op: Ops.String.StringsToArrayMultiPort - create an array from multiple string input ports\r\n- new op: Ops.String.SwitchStringMultiPort - switch between multiple string inputs\r\n- new op: Ops.Trigger.NumberByTriggerMultiPort - output a number by triggering an index port \r\n- new op: Ops.Trigger.RouteTriggerMultiPort - Triggers one of the out ports - value index switch case (was SwitchTrigger)\r\n- new op: Ops.Trigger.SequenceMultiPort - sequence trigger\r\n- new op: Ops.Ui.Debug.PatchUiCoords - Output the current patch coordinates\r\n- new op: Ops.Ui.Routing.RouteTrigger - Patchfield cable routing helper for trigger cables\r\n- new op: Ops.Ui.Routing.RouteString - Patchfield cable routing helper for string cables\r\n- new op: Ops.Ui.Routing.RouteNumber - Patchfield cable routing helper for number cables\r\n- new op: Ops.Ui.Routing.RouteObject - Patchfield cable routing helper for object cables\r\n- new op: Ops.Ui.Routing.RouteArray - Patchfield cable routing helper for array cables\r\n- new op: Ops.Ui.VizTrigger - Visualize triggering for debugging reasons\r\n\r\n\r\n#### Op Improvements\r\n\r\n- feature: Ops.Array.Array3PointEditor - Added functionality to copy coordinates from index to the current point\r\n- feature: Ops.Array.PointArray.CircularPoints_v2 - Added Loop option to close the gap to the first point again\r\n- feature: Ops.Gl.Textures.NoiseTexture - Added random parameters for alpha channel\r\n- feature: Ops.Html.CompareImages_v2 - Trigger to start comparing images\r\n- feature: Ops.Html.CSS_v3 - added nesting parameter\r\n- feature: Ops.Json.HttpRequest_v3 - Add option to output binary base64 string\r\n- bugfix: Ops.Anim.InOutInAnim - fixed crash when duration was 0 row\r\n- bugfix: Ops.Anim.Timer_v2 - fix timer not pausing correctly\r\n- bugfix: Ops.Gl.GLTF.GltfScene_v4 - Fix bug: GLTF meshes were not rendering the first time it was executed\r\n- bugfix: Ops.Gl.Matrix.OrbitControls_v3 - Fixed bug with initial \"axis x\" default value not being used properly\r\n- bugfix: Ops.Gl.Meshes.Cylinder_v2 - fix crash when op.patch.cg not set\r\n- bugfix: Ops.Gl.Meshes.Icosahedron_v2 - Smooth toggle works again\r\n- bugfix: Ops.Gl.Textures.TextTexture_v6 - Fix bug with text not rendered on first frame\r\n- bugfix: Ops.String.NumberFormatter - Fixed but with boolean grouping parameter\r\n- improvement: Ops.Cables.UploadAsset - Fix problems with data urls\r\n- improvement: Ops.Gl.Meshes.Icosahedron_v2 - Added \"Render Mesh\" toggle\r\n- improvement: Ops.Gl.Texture_v2 - Cachebuster option default value is now false. turn on to force a reload of the image every time\r\n- improvement: Ops.Gl.Textures.TextureToBase64_v5 - Update only after texture has changed\r\n- improvement: Ops.Gl.Textures.VideoTexture_v3 - catch and display errors with negative playback rate on some browsers\r\n- improvement: Ops.Gl.Textures.WebcamTexture_v3 - Set parentelement to non canvas so popout/external canvas can continue to work\r\n- improvement: Ops.Json.HttpRequest_v3 - Fixed loading status for binary requests\r\n- improvement: Ops.Sidebar.Incrementor_v2 - Added Increment/Decrement trigger inputs\r\n- improvement: Ops.Sidebar.Incrementor_v2 - Added reset button\r\n- improvement: Ops.Sidebar.Incrementor_v2 - Added toggle to greyout \r\n- improvement: Ops.Sidebar.Presets_v2 - add op title to preset json\r\n- improvement: Ops.Sidebar.Presets_v2 - add op title to preset json\r\n- improvement: Ops.String.Base64.Base64Encode_v2 - Add mime input port, e.g. \"image/svg+xml\" or \"image/jpeg\"\r\n- improvement: Ops.String.Base64.Base64Encode_v2 - Always output data url\r\n- improvement: Ops.Ui.VizTextureTable - show coordinates of each pixel color table \r\n- improvement: Ops.Ui.VizTextureTable - show coordinates of each pixel color table row\r\n\r\n#### Op Renames\r\n\r\n- deprecation: Ops.Deprecated.Gl.ShaderEffects.ColorizeInstancedMeshes - op was deprecated\r\n\r\n#### Editor\r\n\r\n- editor: add \"copy to clipboard\" button to file details section in files-tab\r\n- editor: added more conversion suggestions when connecting incompatible port types\r\n- editor: added multiport/longport functionality\r\n- editor: added trigger-&gt;number port conversion suggestions\r\n- editor: allow ops in extension namespace to contain other extension ops\r\n- editor: better contrast in editor search dialog\r\n- editor: check link time warnings when gui finished loading...\r\n- editor: clicking into a cables now gives you an option to rerouting the cables\r\n- editor: close warning about editing subpatch-reference after navigating to changed subpatch\r\n- editor: creating area will give more spacing/padding to the top\r\n- editor: creating new cable with default string op will copy over the original value \r\n- editor: file/url input parameter now shows a hint whether the file source is an external asset, lib, current or other patch etc.\r\n- editor: fix bug where shift clicking ops would not show the correct multi selected panel\r\n- editor: fix loading libraries of copypasted ops\r\n- editor: fix positioning of operators when creating subpatch ops\r\n- editor: fix problem with transform gizmos on HDPI screens in some cases\r\n- editor: fix problems with zombie error indicators \r\n- editor: fix sawtooth rendering artifacts on cables in some subpatches\r\n- editor: fix warning for missing sourcemap of packaged \"markedjs\"\r\n- editor: fixed rendering cable residue after moving operators\r\n- editor: fixed: patchfield font character database could not display a backslash\r\n- editor: hide empty team list on patch settings page\r\n- editor: hide old versions and deprecated ops in teamnamespaces and extension preview in opselect\r\n- editor: hovering cable still show portname when hovering\r\n- editor: jobs view: if loadings job was initiated by an op you can click it to focus op\r\n- editor: make opcode editor not show a warning when using \"modern javascript\" (es11)\r\n- editor: new command \"clear op titles\"\r\n- editor: newly created ops will have \"MIT\" as a default license\r\n- editor: op editor is greyed out in untrusted patches\r\n- editor: patch summary now shows a no write access icon next to the patch title\r\n- editor: port type conversion now can show multiple options (e.g. numberToString and boolToString)\r\n- editor: remove intro-tour step for old tabs in parampanel\r\n- editor: several menu options are greyed out, if you don't have write access\r\n- editor: show selected background color like normal ops also on comment and area ops\r\n- editor: string and number ports now have a context menu helper to create basic default op, e.g.\"create number op\"\r\n\r\n#### Website\r\n\r\n- website: add \"todo\" page to teams, if they have op-namespaces to show todos for ops of team\r\n- website: add button to put \"rename\" to op-changelog to rename result page\r\n- website: add export-option to minify shadercode in .att and .frag attachments\r\n- website: add seperate tab for op-example-patches in \"my patches\"\r\n- website: filter duplicate information in activityfeed (e.g. \"liked a patch\" and \"liked YOUR patch\")\r\n- website: filter own actions from activityfeed\r\n- website: prevent moving a patch op to illegal namespaces\r\n- website: remove redundant library loading from patch-view page\r\n- website: show opauthor for team-ops in /mydata#ops\r\n- website: show warning and basic file information for asset not in database\r\n\r\n#### Standalone\r\n\r\n- standalone: add \"add op directory\" to cables menu\r\n- standalone: add backslach to op-title font to display filenames correctly on windows\r\n- standalone: add command to copy used assets into project dir\r\n- standalone: add command to copy used ops into project dir\r\n- standalone: automatically create a \".cables\" file when opening an exported project\r\n- standalone: change confising wording of \"toggle fullscreen\", use command palette to toggle app fullscreen\r\n- standalone: cleanup handling of keyboard shortcuts, reduce menu\r\n- standalone: clone a new op and code a new op (also) in non-saved projects\r\n- standalone: cmd-shift-s opens native save dialog\r\n- standalone: creating empty patch does not ask of a name anymore\r\n- standalone: do not open last project, open welcome modal with recent patches\r\n- standalone: do not show offline indicator in standalone\r\n- standalone: early version for testing download page: https://cables.gl/downloads\r\n- standalone: fix \"patch has been updated\" showing when saving subpatchops\r\n- standalone: fix a bug where path to index.html was undefined on startup\r\n- standalone: fix assetpath explorer opening on windows\r\n- standalone: fix assetpaths of library files and file urls on windows\r\n- standalone: fix bug where \"open patch\" in welcome tab didn't do anything\r\n- standalone: fix crash when adding op directory\r\n- standalone: fix crash when going fullscreen on linux\r\n- standalone: fix crash when running \"npm install\" on new patch\r\n- standalone: fix file extensions in windows when saving patch\r\n- standalone: fix filename extensions duplicate dot after save on windows\r\n- standalone: fix missing opimage for extension overview in opselect\r\n- standalone: fix op being executed twice when working with cables-editor\r\n- standalone: fix permissions in editoriframe (webcam, midi, ...) and osx \"entitlements\"\r\n- standalone: fix popout canvas and ExternalCanvas\r\n- standalone: fix popout-canvas\r\n- standalone: fix problem with closing app on windows/linux\r\n- standalone: hide offline indicator\r\n- standalone: link cables icon to welcome tab\r\n- standalone: make changed patches closable on windows and linux\r\n- standalone: make httprequest work with fileurls and use as default fallback op\r\n- standalone: make native node modules (like \"path\" and \"fs\") work in ops\r\n- standalone: move \"goto op directory\" button to \"manage op\" tab\r\n- standalone: open native file dialog when uploading asset via files tab\r\n- standalone: open opdir instead of texteditor when clicking on folder icon\r\n- standalone: reference assets in project dir by relative url/path\r\n- standalone: set assetpath to relative path if next to cables-project-file\r\n- standalone: show nodejs and npm version in buildinfo tab\r\n- standalone: show preview image and asset info for files and library files\r\n- standalone: show used assets and locations in files-tab\r\n- standalone: speed up reaction time of code- and assetwatchers\r\n- standalone: store all patchinfo on one \".cables\" file, ignore \".cables.json\"\r\n- standalone: store assetpaths as relative when next to projectfile\r\n- standalone: store screenshots in project file\r\n- standalone: unify handling of asset-urls, always use file://\r\n- standalone: use fileurls for assetports\r\n- standalone: warn when opening export when project file exists already\r\n- standalone: watch assets for changes from external tools/editors\r\n- standalone: watch opcode for changes from external editors/IDEs\r\n- standalone: welcome tab shows cables events\r\n- standalone: welcome tab shows current version and newest downloadable release version\r\n- standalone: write console.log to logfile\r\n\r\n\r\n#### Misc\r\n\r\n- cables-cli: add option to minify shadercode in \".att\" and \".frag\" attachments\r\n",
            "date": 1719996676505,
            "youtubeid": ""
        },
        {
            "text": "\r\n#### Editor\r\n\r\n- editor: port type conversion now can show multiple options (e.g. numberToString and boolToString)\r\n- editor: show selected background color like normal ops also on comment and area ops\r\n- editor: fix problems with zombie error indicators \r\n- editor: check link time warnings when gui finished loading...\r\n\r\n#### Core\r\n\r\n- fix problems with fractional DPR multipliers/framebuffer sizes \r\n\r\n#### Op Enhancements\r\n\r\n- improvement: Ops.Gl.Textures.WebcamTexture_v3 - Fixed problem with loading status not finishing the loading\r\n- improvement: Ops.Html.TransformCSS3DElement - Fix problems with HDPI/Retina displays\r\n- improvement: Ops.String.StringToNumber - Renamed Ops.String.ParseFloat to Ops.String.StringToNumber\r\n\r\n#### New Ops\r\n\r\n- new op: Ops.Gl.GateTexture - cloned op from Ops.Json.GateObject\r\n- new op: Ops.Vars.VarTriggerTexture - cloned op from Ops.Vars.VarTriggerObject\r\n\r\n",
            "date": 1715928294873,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Array.Array3SetNumber - Set three numbers at index in an array\r\n- new op: Ops.Array.Array4 - create an array of num quadruples set to default values xyz\r\n- new op: Ops.Array.Array4SetNumber - set four numbers at index in an array\r\n- new op: Ops.Devices.Browser.UserActivation - detect if the user interacted with or activated the page\r\n- new op: Ops.Gl.DownloadTexture_v3 - Download a texture as an image file\r\n- new op: Ops.Gl.Shader.MinifyGlsl - Minify GLSL shader source code\r\n- new op: Ops.Graphics.Intersection.IntersectTestBody - Test one body against all bodies in the world\r\n- new op: Ops.Html.CSS.CssFile - Load a css asset file\r\n- new op: Ops.Ui.CablesEditorEvents - Cables UI Event Triggers\r\n\r\n#### Op Enhancements\r\n\r\n- feature: Ops.Array.ArrayGetNumber - Added input vor value when index is invalid (negative or too big)\r\n- feature: Ops.Array.GateArray_v2 - Added option to set output to null if passThrough is false\r\n- feature: Ops.Array.PointArray.CircularPoints - Added axis/plane switch\r\n- feature: Ops.Array.PointArray.CircularPoints - Added direction clockwise/anti-clockwise toggle\r\n- feature: Ops.Array.PointArray.PointsRectangle_v2 - New Version: Correct number of vertices when having e.g. 1 segment , added loop parameter to repeat first vertex.\r\n- feature: Ops.Devices.Keyboard.CursorKeys - Added trigger outputs for each directional key\r\n- feature: Ops.Gl.CanvasToTexture - Add trigger input to force an update of the texture, needed for video elements\r\n- feature: Ops.Gl.ImageCompose.ClampTexture_v2 - Add clamp paramegters for RGB color channels\r\n- feature: Ops.Gl.MainLoop_v2 - New version: Max pixel density / DPR to have better control over rendering on HDPI/retina screens, cleanup\r\n- feature: Ops.Gl.Textures.VideoTexture_v3 - Using automatic new frame callback if available for faster/smoother updates\r\n- feature: Ops.Json.GateObject - Added option to set output to null if passThrough is false\r\n- feature: Ops.Number.GateNumber - Added option to set output to custom value if passThrough is false\r\n- feature: Ops.Sidebar.Incrementor_v2 - Added trigger output, triggered on change\r\n- feature: Ops.Sidebar.SideBarSwitch - Added trigger output, triggered on change\r\n- feature: Ops.Sidebar.Toggle_v3 - Added trigger output, triggered on change\r\n- feature: Ops.Sidebar.Toggle_v4 - Added trigger output, triggered on change\r\n- feature: Ops.String.GateString - Added option to set output to custom value if passThrough is false\r\n- feature: Ops.Trigger.RouteTrigger - Added output for highest connected index\r\n- feature: Ops.Trigger.Sequence - Op is now resizable on the x axis and ports are gonna stretched out on the whole width\r\n- feature: Ops.Ui.VizString - Added options to text-wrap to the bounds of the oprator\r\n- feature: Ops.Ui.VizString - white space param to visualize linebreaks,spaces and tabs\r\n- improvement: Ops.Array.ArraySubtract - Copy over array stride information\r\n- improvement: Ops.Array.ArraySum - Copy over array stride information\r\n- improvement: Ops.Array.ReverseArray3 - Copy over array stride information\r\n- improvement: Ops.Array.SubdivideArray3_v2 - Copy over array stride information\r\n- improvement: Ops.Gl.CanvasToTexture - Added workaround for detecting correct size of video elements\r\n- improvement: Ops.Gl.ExternalCanvas - Clear background every frame\r\n- improvement: Ops.Gl.GLTF.GltfMeshSequence_v2 - new version: fix bug with name detection\r\n- improvement: Ops.Gl.ImageSequenceAnim_v2 - Added parameter option to flip Y coordinate\r\n- improvement: Ops.Gl.Meshes.TextMesh_v2 - Removed confusing texture output\r\n- improvement: Ops.Gl.Shader.PointMaterial_v5 - Added minimum pointsize parameter, e.g. set to 1 to make points always visible\r\n- improvement: Ops.Graphics.Intersection.IntersectWorld - Removed render toggle, can be toggled with overlay hotkey\r\n- improvement: Ops.Html.VideoElement - Added outputs for video width/height\r\n- improvement: Ops.Html.VideoElement - Fixed problem with assets from other patches\r\n- improvement: Ops.Json.HttpRequest_v3 - 404 Error will be shown as a warning, not an error anymore\r\n- improvement: Ops.Json.HttpRequest_v3 - add option to allow sending credentials with request\r\n- improvement: Ops.Json.Object - Became simple passthrough op, old object op is now called \"emptyobject\"\r\n- improvement: Ops.Sidebar.Toggle_v4 - Current value is no longer saved in the patch. Default value will be set on patch load\r\n- improvement: Ops.String.StringToNumber - Renamed Ops.String.ParseFloat to Ops.String.StringToNumber\r\n- bugfix: Ops.Devices.Keyboard.CursorKeys - Fixed: Active toggle was not working\r\n- bugfix: Ops.Gl.InteractiveRectangle_v2 - Fix problems with positioning when using forceCanvasSize\r\n- bugfix: Ops.Gl.Matrix.ArrayTranslate - Index output is now set correctly\r\n- bugfix: Ops.Gl.Matrix.OrbitControls_v2 - Fix bug with zooming in was stopping too soon\r\n- bugfix: Ops.Html.TransformElement - Fix problems with positioning when using forceCanvasSize\r\n\r\n#### Ops Renaming \r\n\r\n- rename ops: recklesshtml to Ops.Extension.HtmlElementArray.HtmlElementArrays\r\n- rename ops: json-byBath ops to Ops.Data.JsonPath\r\n- deprecation: Ops.Deprecated.Anim.ArraySmooth - op was deprecated - use Ops.Array.SmoothArray\r\n- deprecation: Ops.Deprecated.Array.Array1To3 - op was deprecated - use Ops.Array.ArraySwizzle\r\n- deprecation: Ops.Deprecated.Array.PointArray.PointsCircle - op was deprecated - use Ops.Array.PointArray.CircularPoints\r\n- deprecation: Ops.Deprecated.Boolean.ToggleBoolValue - op was deprecated - use op \"NOT\"\r\n- deprecation: Ops.Deprecated.Cables.LoadingStatusTask - op was deprecated\r\n- deprecation: Ops.Deprecated.Gl.Meshes.ParametricSurface - op was deprecated\r\n- deprecation: Ops.Deprecated.Ui.Subpatch2Temp - op was deprecated\r\n- deprecation: Ops.Deprecated.Ui.VizString - op was deprecated\r\n\r\n#### Core\r\n\r\n- core: textures - fix problems with 32bit fallback modes when 16bit textures are not supported\r\n- core: most timers now rely on the request animation frame timstamp\r\n- core: bool values internally are always 0 or 1\r\n- core: index ports of dropdown/switch input ports now have the correct value when not connected\r\n- core: string ports can have uiAttribs minLength:x and stringTrim:true attributes\r\n\r\n#### Website\r\n\r\n- website: display of upcoming cables IRL events\r\n- website: add \"like\" to patchlists, notifiy in activitiyfeed on added patch, add to \"my patchlists\"\r\n- website: do not show private and unlisted teams below patches for non-members\r\n- website: fix patchlist screenshots in navigation menu\r\n- website: fix bug when editing/deleting op changelog entries with 0 as a timestamp\r\n- website: fix docs page layout on mobile\r\n- website: fix inconsisten navigation sorting on examples page\r\n- website: fix javascript error in console with patches using locationhash\r\n- website: fix op page permissions for ops of public and unlisted teams\r\n- website: iframe focus mode / no scrolling when iframe is focussed but all other elements outside are still clickable\r\n- website: op-list in /mydata now selects first tab with content\r\n- website: remove all code related to blueprints (Ops.Deprecated.Dev.Blueprint), use subpatches\r\n- website: remove randomids from team-namespaces, pick teamname if possible, otherwise enumerate\r\n\r\n#### Editor/UI\r\n\r\n- editor: fix bug in netlify export\r\n- editor: fix bug where patchops werent loaded when user in associated with the patch only via team\r\n- editor: fix op search dialog not disappearing when another modal dialog opens\r\n- editor: fixed bug with timeline easing tab not opening after closing once\r\n- editor: fixed several problame with clicking output ports value will copy the current value into the clipboard\r\n- editor: link to docs in export for macos\r\n- editor: more op suggestions for specific port types\r\n- editor: new command: \"clone selected ops to patch ops\"\r\n- editor: new command: \"upgrade selected ops\" (to newest version)\r\n- editor: opselect - hide internal subpatch ops from list\r\n- editor: overlays - fix positioning problems with transform gizmos when using forceCanvasSize\r\n- editor: overlays - fix problems with HDPI displays\r\n- editor: overlays - new hotkey \"o\" to toggle overlays, overlay menu simplified\r\n- editor: overlays - translatable ops are always shown in overlays\r\n- editor: overlays - translatable ops can be clicked multiple times to cycle through overlapping ops with similar positions\r\n- editor: reduce stored data in opdocs, remove empty fields\r\n- editor: remove all code related to blueprints (Ops.Deprecated.Dev.Blueprint), use subpatches\r\n- editor: scss assets are automatically converted to css asset file\r\n- editor: search user interface improved: toggle buttons for filtering ops\r\n- editor: subpatch ops port editor: added string types dropdown and switch \r\n- editor: tweaked flowmode visualization to be more reactive in big patches\r\n- editor: viz ops only need a mainloop if the op is related to webGl topics (e.g. textures)\r\n\r\n#### misc\r\n\r\n- other: update github issue templates and usage descriptions to include \"how to share\" FAQ\r\n- other: reduce filesize of exported patches when using subpatchops\r\n\r\n\r\n",
            "date": 1715768219114,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Anim.ArraySmooth - Smooths out jumps in values in an array\r\n- new op: Ops.Array.Array3PointEditor - Visually edit positions in an array  of point coordinates\r\n- new op: Ops.Array.EmptyArray - An Empty Array\r\n- new op: Ops.Array.PointArray.PointsRectangle - Generate an array of XYZ coordinates of an rectangle\r\n- new op: Ops.Cables.UploadAsset - Upload a file into the cables patch assets using a base64 string\r\n- new op: Ops.Devices.Browser.JsExpression - Evaluate a javascript expression\r\n- new op: Ops.Gl.GlBlendFunc - Set gl blendmodes directly\r\n- new op: Ops.Graphics.Intersection.IntersectTestPoint - Test intersect bodies collision against a point/coordinate\r\n- new op: Ops.Html.CompareImages - Compares two images and shows the difference as a pink color\r\n- new op: Ops.Html.ImageElement - Create an image(img) html element\r\n- new op: Ops.Json.TriggerObjectSetNumber - Set a number value of an object using trigger\r\n- new op: Ops.Json.TriggerObjectSetString - Set a string value of an object using trigger\r\n- new op: Ops.Math.Normalize - Normalize a vector\r\n- new op: Ops.String.Base64.DownloadBase64File - Trigger a download of a base64 binary file\r\n- new op: Ops.String.HandleBarsHtml - String conversion using handlebars template engine\r\n- new op: Ops.String.Md5 - Create a md5 hash of a string\r\n- new op: Ops.String.StartsWith - Does a string starts with another string?\r\n- new op: Ops.String.StringSortLines - Sort each line of a string alphabetically \r\n- new op: Ops.String.StringSwitchByString - Switch between multiple strings by a string index\r\n- new op: Ops.Trigger.RouteTriggerAnimated - Animated switching between things\r\n\r\n#### Op Enhancements\r\n\r\n- Ops.Anim.LFO_v2 - New Feature: Added range min/max inputs \r\n- Ops.Array.ShuffleArray3_v3 - Improvement: More random random numbers\r\n- Ops.Array.ShuffleArray_v3 - Improvement: More random random numbers\r\n- Ops.Data.Compose.String.CompStringAppend - New Feature: Added option do add a linebreak at the end of the new string \r\n- Ops.Gl.CanvasInfo_v3 - New Feature: Fixed HDPI/Retina calculation of pixel numbers\r\n- Ops.Gl.FontMSDF_v2 - Improvement: Set default values to libaray example files for quicker setup\r\n- Ops.Gl.GradientTexture - Bugfix: Fixed radial mode: Flip option was ignored / default gradient was not shown without making changes\r\n- Ops.Gl.GradientTexture - Improvement: Added XY and YX mode to generate diagonal color gradients\r\n- Ops.Gl.GradientTexture - Improvement: Optimized/reduced unnecessary recreation \r\n- Ops.Gl.GradientTexture - Improvement: Radial mode is more compatible/same colors like the simple gradient\r\n- Ops.Gl.ImageCompose.Dither_v2 - New Feature: Added mask texture input to control where dithering is applied and mask source paramter to select the colorchannel\r\n- Ops.Gl.ImageCompose.Math.RgbMathExpression - New Feature: Add parameter to set alpha channel\r\n- Ops.Gl.ImageCompose.RandomNumberTexture - Bugfix: Fixed: Seed parameter was not changing anything\r\n- Ops.Gl.ImageCompose.RectangleTexture_v5 - New Feature: Add mapping coordinates position and size to map parts of an image onto the rectangle\r\n- Ops.Gl.ImageCompose.RectangleTexture_v5 - New Feature: Added \"inner\" parameter to create an transparent inner hole in the rectangle\r\n- Ops.Gl.ImageCompose.RectangleTexture_v5 - New Feature: Added switch to change coordinates system, e.g. pixel based\r\n- Ops.Gl.ImageCompose.RectangleTexture_v5 - New Feature: Added texturemapping for the rectangle and masking\r\n- Ops.Gl.ImageCompose.ZoomBlur_v2 - Bugfix: Fixed problem with masks\r\n- Ops.Gl.Matrix.Camera_v2 - Bugfix: Added identity toggle to reset the viewmatrix to 0,0,0 - Bugfix: Expected coordinates are used and not influenced by default viewMatrix transform\r\n- Ops.Gl.Matrix.Scale - New Feature: Added non uniform axis scaling parameters for convinience\r\n- Ops.Gl.Meshes.GeometryToTexture_v2 - New Feature: Added \"vertex color\" output option\r\n- Ops.Gl.Meshes.MeshInstancerFromTexture_v3 - New Feature: Added options for billboarding\r\n- Ops.Gl.Meshes.PointCloudFromTexture - Bugfix: Fixed positioning problems when using the current pointmaterial for pointCloudFromTexture and with other operators\r\n- Ops.Gl.MeshInstancer_v4 - New Feature: Added options for billboarding\r\n- Ops.Gl.RenderToTextures_v3 - Bugfix: Fixed bug: Output textures where not updated correctly every frame\r\n- Ops.Gl.Shader.BasicMaterial_v3 - Bugfix: Texture transform is now usable with only an opacity/mask texture connected\r\n- Ops.Gl.Shader.PointMaterial_v5 - New Feature: Added rotation texture input: Will 2d rotate the texture coordinates of the billboard by the red color channel value (1==360 degrees)\r\n- Ops.Gl.Texture_v2 - Bugfix: Typing in the url input will not blur element\r\n- Ops.Gl.Textures.CopyTexture_v3 - New Feature: Added option to fllip the image on Axis X/Y \r\n- Ops.Gl.Textures.MontageTextures_v2 - New Feature: Added arrangement parameter \r\n- Ops.Gl.Textures.MontageTextures_v2 - New Feature: Added option to flip order \r\n- Ops.Gl.Textures.MontageTextures_v2 - New Feature: Added Size Parameter to adjust final image sizing strategy\r\n- Ops.Gl.Textures.TextureToBase64_v4 - New Feature: Added Binary size output number\r\n- Ops.Graphics.Intersection.IntersectBody - Bugfix: Can now be used in repeat loops/randomcluster etc.\r\n- Ops.Graphics.Intersection.IntersectBody - New Feature: Added point shape\r\n- Ops.Graphics.Intersection.IntersectRaycast - New Feature: Will now pick the clostst body to the camera, not the very first one found\r\n- Ops.Html.CSS_v2 - New Feature: Added option to activate/deactivate style\r\n- Ops.Html.Cursor_v2 - New Feature: Added option to also add that cursor to the parent element of canvas, e.g. for using this with forceCanvasSize op\r\n- Ops.Html.ElementClientRect - New Feature: Added parameter to switch between CSS pixels or Display pixels\r\n- Ops.Html.ElementsPositionsByClass - New Feature: Added output: Total number of elements that were analyzed\r\n- Ops.Html.ImageElement - New Feature: Added class input and style attribute editor\r\n- Ops.Html.ImageElement - New Feature: Added CSS Display parameter option\r\n- Ops.Math.MapRange - New Feature: Added option to turn off clamping, so values can be bigger then the specified min/max input range\r\n- Ops.Sidebar.LocalFileToDataUrl - New Feature: Added Accept input to filter accepable files by extension\r\n- Ops.Sidebar.LocalFileToDataUrl - New Feature: Added Option to select multiple files at the same time\r\n- Ops.Sidebar.LocalFileToDataUrl - New Feature: File Select Button now shows Filename when a file was selected\r\n- Ops.Sidebar.SideBarImage - New Feature: Added Image Element output\r\n- Ops.Sidebar.XYPad - New Feature: Added HTML element output of the canvas. can be used to listen to more events\r\n- Ops.String.RandomString_v3 - New Feature: Added seed, removed trigger \r\n- Ops.Ui.VizTexture - Improvement: Show pixel grid when zoomed in \r\n- Ops.Ui.VizTextureTable - New Feature: Add row parameter to scroll through texture rows\r\n\r\n#### Ops Renaming/Deprecation\r\n\r\n- deprecated: Deprecate.Sidebar.LocalTextureFile \r\n- deprecated: Dev.Debug.CablesEvents \r\n- deprecated: Gl.Matrix.ScaleXYZ - Use the normal scale op, now has nonscalar scaling\r\n- deprecated: Gl.Meshes.SuperShape - Use supershapes ops from the supershapes extension\r\n- deprecated: Html.ElementSize - Use: Ops.Html.ElementClientRect\r\n- rename: Canvas2texture - CanvasToTexture\r\n- rename: Extension.SocketCluster.SocketClusterRecieveArray to SocketClusterReceiveArray\r\n- rename: Extension.SocketCluster.SocketClusterRecieveBoolean to SocketClusterReceiveBoolean\r\n- rename: Extension.SocketCluster.SocketClusterRecieveNumber to SocketClusterReceiveNumber\r\n- rename: Extension.SocketCluster.SocketClusterRecieveObject to SocketClusterReceiveObject\r\n- rename: Extension.SocketCluster.SocketClusterRecieveString to SocketClusterReceiveString\r\n- rename: Extension.SocketCluster.SocketClusterRecieveTrigger to SocketClusterReceiveTrigger\r\n- rename: Graphics.Intersection.IntersectRaycast to Graphics.Intersection.IntersectTestRaycast\r\n- rename: MatcapmaterialNew - Remove New\r\n- rename: Move base64 stuff to Ops.String.Base64\r\n- rename: Texture2ColorArray to TextureToColorArray\r\n\r\n#### Editor/UI\r\n\r\n- editor: Update dropdown with available libs for op after uploading library to patch (no reload required anymore)\r\n- editor: Fix cache update when op is onknows (fixes \"no op by id\"-error when switching between live/dev)\r\n- editor: Allow editing (sub)patchops for team members with full access\r\n- editor: Create new op: Default example code now contains ports etc. should be easier\r\n- editor: Edit op tab: New help button added linking to documentation\r\n- editor: New command to create a new version of an existing op, will fail if user has no access to current namespace\r\n- editor: Better positioning of new ops, that where dragged from an existing port, are nor positioned above the linked port on the same x position\r\n- editor: Animated dropdown/switch parameter should not slow down everything anymore\r\n- editor: Should now be impossible to save negative sized renderers\r\n- editor: Hold ctrl to snap y position when turned of \"snap to grid\"\r\n- editor: Fixed problem with clicking into background when modal dialogs where showing\r\n- editor: Do not save disabled state after an op has crashed\r\n- client side op layout svg rendering respecting the theme colors in op select search\r\n- editor: Show a hint in the patch summary panel, if the patch was saved on a different environment, e.g. saved on dev.cables.gl but opened on cables.gl\r\n- editor: More tabs are re-opened after reloading the editor\r\n- editor: Filemanager: More filetype icons \r\n- editor: Filemanager can now open text file assets in the text editor\r\n- editor: Fixed problem with subpatch ops could not dropped on to cables to insert/autolink \r\n- editor: Improved patchfield rendering quality, pixel perfect positioning/no subpixels for patchfield rectangles\r\n- editor: Added option to continue to load the patch on missing op\r\n- editor: Better positioning of input/output ops in subpatchOps, position is now set automatically only if the y position is \"wrong\"\r\n- editor: Better simulation of a long scrolling page\r\n- editor: Check for - And duplicate _v in opnames on creation\r\n- editor: Creating ops fixed bug with asynch check name\r\n- editor: Fix bug with weird behaviour after deleting and adding viz ops\r\n- editor: Math ops automatically has an expression title, e.g: 1+X when the first port is 1 and the second port is connected\r\n- editor: New command (ctrl/cmd+p) \"delete unused patch ops\"\r\n- editor: Outdated ops are less intrusive now, no warning sign anymore, \"new version\" message now smaller\r\n- editor: Patch analysis - Added list of serialized size of ops, to debug what op is taking how much space\r\n- editor: Patch analysis - Added to main menu\r\n- editor: Patch analysis - Fixed order of most used ops\r\n- editor: Port editor: Input field for additional uiAttribs\r\n- editor: Show texture preview when hovering texture ports or cables, can be switched to old behaviour in the user preferences.\r\n- editor: Subpatch ops corelibs where not found if not used outside, or at the first usage.\r\n- editor: Subpatch ops fixed bugs with connecting new ports to output op / improved automatic linking of new ports etc.\r\n\r\n#### Website\r\n\r\n- website: Allow editing and deletion of op changelog entries\r\n- website: Add \"leave project\" button to patchpage for collaborators\r\n- website: Show \"patch has been added to team\" in activityfeed\r\n- website: Remove patchops when deleting patch and warn on delete project page/tab\r\n- website: Jump back to changelog on oppage after editing/adding an entry\r\n- website: Ops now can have a license\r\n- website: Updated cables.gl/made-with-cables/\r\n- website: Re-layout of cables.gl home, removed masonry.js, added github issues to the feed\r\n- website: Show small version of activity feed on cables.gl home\r\n- website: /browser now shows HDR capability\r\n- website: Improved automatic port docs: Added object type and possible string title values of parameter switch \r\n- website: Move frontend js to es6-style/webpack\r\n- website: Check for - And duplicate _v in opnames on rename\r\n- website: Fix error in patchlist dialog on patchpage with \"op already in list\"\r\n- website: Filter list of custom ops used in project for unique names on patch page\r\n- website: Speed up loading of /mydata page\r\n- website: Fix missing pagination on /mydata page\r\n- website: Fix exception when reading example-patchlists on oppage\r\n- website: Bugfix exporting of patch for team members\r\n- website: Clean up follows/followers list for non-existant users\r\n- website: Return correct json error response on export with no rights for patch, for cables-cli\r\n\r\n\r\n#### More\r\n\r\n- docs: Add FAQ on how to share a patch to get help/feedback\r\n- cables-cli: Update to es6 modules/import, show errormessage on unknown response\r\n- other: Increase server performance for database and webservers\r\n\r\n",
            "date": 1712136335360,
            "youtubeid": ""
        },
        {
            "text": "\r\n#### Editor/UI\r\n\r\n- editor: subpatch ops: breadcrumb nav now shows a button for \"manage op\"/port editor\r\n- editor: subpatch ops: added object type settings for object ports\r\n- editor: fixed a lag that cable position was lagging behind when dragging ops \r\n- editor: cursor changes when hovering ops or cables in the patchfield\r\n- editor: search: `:selected` shows all selected ops\r\n- editor: speed up writing and reading of caches\r\n- editor: add more information to response of creating/updating/cloning ops\r\n\r\n#### Website\r\n\r\n- website: remove empty link to licence when \"no licence chosen\"\r\n- website: filter patchops in \"my data\" by authorname\r\n",
            "date": 1707989637896,
            "youtubeid": ""
        },
        {
            "text": "#### op enhancements \r\n\r\n- op enhancement: Ops.Sidebar.SideBarImage - Added Image Element output\r\n- op enhancement: Ops.Math.MapRange - added option to turn off clamping, so values can be bigger then the specified min/max input range\r\n- op enhancement: Ops.Sidebar.LocalFileToDataUrl - Added Accept input to filter accepable files by extension\r\n- op enhancement: Ops.Sidebar.LocalFileToDataUrl - File Select Button now shows Filename when a file was selected\r\n\r\n#### Editor/UI\r\n\r\n- editor: Default param panel now also shows patch description\r\n- editor: GPU profiler can show which op is part of the measurement, will be further improved over time...\r\n- editor: Read permissions for cloning/publishing/... also for subpatchops\r\n- editor: Tweaked z-indices for maximized canvas/fix overlapping\r\n\r\n#### Website\r\n\r\n- website: Fix bug with ops not found when created on dev/live and vise versa\r\n- website: Adjusted text color in tables to be more bright\r\n- website: Fix activity feed page was broken in incognito window in some browsers\r\n- website: Fix bug in limit update when deleting patch with multiple assets\r\n- website: Fix cache-writing bug on ops-namespace page that led to weird seperation of lists\r\n- website: Fix canonical url for namespace page when namespace ends with \".\"\r\n- website: Open example patch from editor-link, even when not public\r\n- website: Properly show and calculate numbers for patch assets",
            "date": 1707145434355,
            "youtubeid": ""
        },
        {
            "text": "\r\n#### New Ops\r\n\r\n- new op: Ops.Gl.ImageCompose.Math.RgbMathExpression - Execute a glsl code math expression in a image compose \r\n- new op: Ops.Data.StackValues.StackGetArray - Read a value from the stack to use it later in the trigger branch\r\n- new op: Ops.Data.StackValues.StackGetNumber - Read a value from the stack to use it later in the trigger branch\r\n- new op: Ops.Data.StackValues.StackGetTexture - Read a value from the stack to use it later in the trigger branch\r\n- new op: Ops.Data.StackValues.StackPushArray - Push a value on to the stack to use it later in the trigger branch\r\n- new op: Ops.Data.StackValues.StackPushNumber - Push a value on to the stack to use it later in the trigger branch\r\n- new op: Ops.Data.StackValues.StackPushTexture - Push a value on to the stack to use it later in the trigger branch\r\n- new op: Ops.Gl.ImageCompose.Mix - simple mix/fade of two input images \r\n- new op: Ops.Gl.Textures.MontageTextures - combine multiple textures into one \r\n- new op: Ops.Html.FontsLoaded - Triggers when asynchronous font load requests finished loading\r\n- new op: Ops.Ui.GetCablesDefaultTheme - Op to set up a cables color theme\r\n- new op: Ops.Ui.SetCablesTheme - Op to set up a cables color theme\r\n- new op: Ops.WebAudio.AudioBufferChannelRouter - Route audio signal channels to specific output channels\r\n- new op: Ops.Gl.Meshes.ComposingGridOverlay - Rule of thirds image composition helper\r\n- new op: Ops.Devices.Mouse.PointerLock - pointerLock api - locks the pointer to the canvas and hides the cursor\r\n\r\n#### Op Enhancements\r\n\r\n- op enhancements: Ops.Devices.Mouse.Mouse_v3 - added outputs for movementX and movementY , how much did the mouse move\r\n- op enhancements: Ops.Array.ArrayToArrays - Result was not updating when changing the stride\r\n- op enhancements: Ops.Gl.CubeMap.RenderToCubemap_v3 - Added msaa option\r\n- op enhancements: Ops.Gl.CubeMap.RenderToCubemap_v3 - Added pixelformat selection\r\n- op enhancements: Ops.Gl.GLTF.GltfTexture - Reload textures after gltfscene changed \r\n- op enhancements: Ops.Gl.ImageCompose.ImageCompose_v4 - Added texture anisotropic parameter\r\n- op enhancements: Ops.Gl.ImageCompose.LumaKey_v2 - New version: add remap option for softer results\r\n- op enhancements: Ops.Gl.ImageCompose.LumaKey_v2 - New version: add remove alpha channel option\r\n- op enhancements: Ops.Gl.Meshes.Circle_v3 - New version: fixed vertex order when having an inner radius/hole for faceculling\r\n- op enhancements: Ops.Gl.Meshes.GeometryToTexture_v2 - Added pixelformats selection\r\n- op enhancements: Ops.Gl.MeshInstancer_v4 - Added option to set rotation from normals array \"\r\n- op enhancements: Ops.Gl.Shader.PointMaterial_v5 - New Version - Added atlas functionality and lookup texture \r\n- op enhancements: Ops.Gl.Shader.ShaderToTexture_v2 - Added texture anisotropic parameter\r\n- op enhancements: Ops.Gl.Shader.ShaderToTexture_v2 - New version: better size selection / added selection of pixelformats\r\n- op enhancements: Ops.Gl.Texture_v2 - Add cachebuster option, enabled adds random string to the request to make sure no caching is used\r\n- op enhancements: Ops.Gl.Textures.Base64ToTexture - Added parameters for anisotropic and alpha premultiply\r\n- op enhancements: Ops.Gl.Textures.CopyTexture_v3 - Added pixelformats selection\r\n- op enhancements: Ops.Gl.Textures.CopyTexture_v3 - Added texture anisotropic parameter\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v5 - Force redraw when a font was loaded, to make sure we are using the correct font\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v6 - Many small fixed with alignment, padding and text size\r\n- op enhancements: Ops.Graphics.Intersection.IntersectRaycast - switchable to XYZ-XYZ coordinate mode: 3d rays, not only from screencoordinates \r\n- op enhancements: Ops.Html.FontFile - Fixed bug when changing the filename too quickly, loading job did not finish\r\n- op enhancements: Ops.Math.MapRange - Adjusted default values\r\n- op enhancements: Ops.Math.Multiply - Adjusted default values\r\n- op enhancements: Ops.Math.Sum - Adjusted default values\r\n- op enhancements: Ops.Sidebar.LocalFileToDataUrl added input field for button text\r\n- op enhancements: Ops.Ui.VizObject - Now shows json syntax highlighting\r\n- op enhancements: Ops.Website.LocationHashRoute - Register listeners on op adding, does not need reload of patch anymore\r\n- op enhancements: Ops.Html.Event.ElementPointerEvents_v2 - removed old op EventListener, made new listener op only for pointerEvents - for other event use ElementEventListener\r\n- op enhancements: Ops.Ui.VizObject - workarounds for native js objects, visualizes htmlElements or Events much better now\r\n- op enhancements: Ops.Html.Event.ElementEventListener_v2 - renamed old customEventListener\r\n- op enhancements: Ops.Html.Event.ElementEventListener_v2 - new version with correct string input port\r\n- op enhancements: Ops.Anim.InOutInAnim - fixed bug in anim library, last keyframe in an anim would not execute callback\r\n- op enhancements: Ops.Gl.Meshes.GeometryToTexture_v2 - Add Resize/Rescale option, resize vertices to new bounding\r\n\r\n#### Editor/UI\r\n\r\n- editor: subpatchops: combine ops to create new ops, called subPatchOps\r\n- editor: subpatchops: edit ports of subpatchOps via a new user interface\r\n- editor: click op to highlight cables of active connections\r\n- editor: better vizualization of hovered cables\r\n- editor: Add \"random patch name\" to editorsettings\r\n- editor: Add command \"replace selected ops\" to replace ops with another op (be careful)\r\n- editor: Add user preference to disable number formating to locale format in output port in param panel\r\n- editor: Add vizlogger to op suggestion list for numbers and strings\r\n- editor: Added \"patch a new op\" navigation\r\n- editor: Added command \"op doc json\" to debug op doc json data\r\n- editor: Allow for usage of team-ops, even if not all collabs are member of the team\r\n- editor: Better collision detection when creating new ops\r\n- editor: Cables logo in menu not clickable anymore, job list was confusing \r\n- editor: Canvas magnifier is now bigger and size is related to canvas size\r\n- editor: Canvas popout button: move canvas rendering to an new window\r\n- editor: Color picker: fixed bug in some cases opening resulted in NaN\r\n- editor: Color picker: mousewheel now adjusts color, hue and opacity areas\r\n- editor: Color picker: now has a opacity slider/input field\r\n- editor: Custom op titles are now visualized by quotation marks\r\n- editor: Data urls in op extended titles are shown in a very compact form now / maximum ext title length it 50 characters now\r\n- editor: Default ops for suggestions and file associations should be always up to date in the future\r\n- editor: Development message \"cables has been updated\" is now less annoying\r\n- editor: Dont switch param panel when unlinking a cable\r\n- editor: Enabled version and update available check for patch/user/team/extension-ops\r\n- editor: Error dialogs show syntax highlighted JSON when possible\r\n- editor: Export - Fix error when exporting unlisted and public patches\r\n- editor: Export: fix broken form for github export\r\n- editor: Export: Update webdemo-exe export\r\n- editor: File manager shows a hint that no patch-files exist and does not switch automatically to the library.\r\n- editor: Find ops: select button selects all ops in search result list \r\n- editor: Fix bug when cables would not load in some casesafter using back/foward buttons of the browser\r\n- editor: Fix bug where op-layout was deleted when saving op\r\n- editor: Fix flickering when dragging one single op\r\n- editor: Fix lookup of op-id for old versions of ops in subpatchops\r\n- editor: Fix placement of tabs in export and patch settings tabs\r\n- editor: Fixed floating bookmark icon problem when scrolling\r\n- editor: Fixed op-version lookup during update/downgrade and on op page\r\n- editor: Fixed table display of array output ports\r\n- editor: Fixed: highlight whole cable when hovering over a port\r\n- editor: Fixed: ops where not visible in with canvas patch background mode\r\n- editor: Gpu profiler shows a warning if there is no performance op in the patch\r\n- editor: Hover over canvas size field to see more information about pixelDeviceRatio etc\r\n- editor: Improve cache lookups to always allow update of old version and show deprecation warning\r\n- editor: Improved generation of keyboard shortcut list\r\n- editor: Improved performance of selecting many ops in huge patches/many subpatches\r\n- editor: Improved pixelDeviceRatio handling on change...\r\n- editor: Layout of op search dialog is now more compact \r\n- editor: Manage op tab is refreshed automatically when making changes to op\r\n- editor: New command \"simulate scrolling page\" to get body scrollbars in the editor\r\n- editor: Op and namespace colors are now setup to be the color of the main related port of the namespace\r\n- editor: Op search tweaks\r\n- editor: Optimize size of serialized patch data\r\n- editor: Parameter panel: reset to default value button\r\n- editor: Performance of patches with subpatches improved\r\n- editor: Port converter ops functionality\r\n- editor: Remove possibility to convert .wav to .mp3\r\n- editor: Removed dae linestrip converter functionality\r\n- editor: Renamed port title now show correctly when using as extended title \r\n- editor: Search ops new option :currentSubpatch only result from current subpatch\r\n- editor: Search ops: removed searching of variable content\r\n- editor: Selected ops border\r\n- editor: Set author of op when creating op, not on first save\r\n- editor: Show a constant hint when loaded a backup version of a patch\r\n- editor: Show canvas size information when hovering over canvas ui bar size button\r\n- editor: Show recent patches in menu to open quickly\r\n- editor: Speed up getting of file-list from server\r\n- editor: Subpatches v2 / SubPatch Ops enabled for everyone to test.\r\n- editor: Suggestion lists - More readable - Entries are rotated less when list is long\r\n- editor: Text/code editor is now greyed out when in read only mode\r\n- editor: Texture and viz ops: show error when patch has no mainloop op\r\n- editor: Theme color adjustments\r\n- editor: Theme patchfield - Cables outline border on hover or selection\r\n- editor: Tooltip dissapear when scroll or it does not make sense anymore\r\n- editor: Update asset-references for assets used in subpatchops\r\n- editor: Update op-usage for ops used in subpatchops\r\n- editor: Vertical snap lines now work with turned off snapping to grid\r\n- editor: Visual error in param panel when having duplicated port names\r\n- editor: VizOps can define a zoom level when they should not be rendered anymore\r\n- editor: When cloning ops, current parameter values are copied over to the new instanced op\r\n\r\n#### Website\r\n\r\n- website: Add attachments to op-emergency editor\r\n- website: Add canonical urls to all pages\r\n- website: Add extension ops to op-search result\r\n- website: Add stats to /mydata page\r\n- website: Allow team members with full access to edit/rename ops in extension namespace, if team has an extension\r\n- website: Css adjustment to reduce jumping elements when loading page\r\n- website: Disallow deletion of assets and ops that are used in subpatchops\r\n- website: Fix a lot of issued with references to ops/assets when deleting patch, and fix asset-page\r\n- website: Fix bug in creation of shortid for patches at certain times (remove \"-\" and \"_\" from shortids)\r\n- website: Fix bug where publish date was not saved when publishing patch\r\n- website: Fix missing first screenshot placeholder on mypatches\r\n- website: Fix pagination not updating on several pages\r\n- website: Fix pagination on \"my patches\" page\r\n- website: Fix storing wrong version in cache when calling op-page with id instead of name\r\n- website: Fix/remove overlapping date display in patchlist secion of \"my patches\" menu\r\n- website: Fixed color problems with bright color theme\r\n- website: Improve SEO by adding noindex headers and rework robots.txt\r\n- website: Introduce \"memberships\" (like patron/contributor) to increase possible usage limits of storage/upload size\r\n- website: Make tags unique per project (and prevent publishing with the same tag three times)\r\n- website: Move (not copy) op to extension namespace from other namespace\r\n- website: Move additional options to threedots menu in activityfeed\r\n- website: Op rescue editor layout and functionality improvements\r\n- website: Patch settings outside of editor: show link to patch page\r\n- website: Prevent projectids from containing \"-\" and \"_\"\r\n- website: Redirect out of iframe if login/signup/resetpassword pages are opened in an iframe\r\n- website: Redirect patch-pages with longid to shortid equivalent\r\n- website: Redirect to newest version when callin opspage with wrong version\r\n- website: Remove \"related ops\" feature, was not curated at all and not relevant\r\n- website: Remove functionality of adding TODOs to any op, clean up docs\r\n- website: Replace alert-popup with errorboxes on pages that still had these\r\n- website: Sanitize user input on save for all post, patch, put requests to api\r\n- website: Search engine, accessibility and content loading strategy optimizations\r\n- website: Show all ops created by the user under /mydata#ops\r\n- website: Show all public patchlists on user-profile\r\n- website: Show op-author avatar on op-page\r\n- website: Show usage of storagespace/exports/upload size in several places\r\n- website: Sort public patches by published date on op-page\r\n- website: Store change of visibility in patch-log when changing to public, and was public before\r\n- website: Fixed css scope for links on pages with embedded patches\r\n- website: new op page layout\r\n\r\n#### Docs\r\n\r\n- docs: update \"how to contribute to cables\" section, add teams to the workflow\r\n\r\n#### DEV\r\n\r\nwe created a team for dev ops examples: https://dev.cables.gl/team/dev\r\n\r\n#### Renamed Ops\r\n\r\n- renamed: Ops.Html.EventListener to Ops.Html.Event.ElementPointerEvents\r\n- renamed: Ops.Json.ObjectValues to Ops.Json.ObjectValuesAsArray\r\n- renamed: Ops.Html.Event.CustomEventListener to Ops.Html.Event.ElementEventListener_v2\r\n- deprecated: String.SwitchStringBoolean - use Ops.Boolean.BoolToString\r\n- deprecated: Sidebar.LocalTextureFile - use Ops.Sidebar.LocalFileToDataUrl\r\n- deprecated: Number.NumberSwitchBoolean - use Ops.Boolean.BoolToNumber\r\n",
            "date": 1706777176784,
            "youtubeid": ""
        },
        {
            "text": "#### November Release HotFixes\r\n\r\n- editor: TextureColorPick op and viz texture color readback not working - fixed\r\n- editor: Pressing escape first closes opened modal/op select dialog, before closing editor tab panel\r\n- editor: reduce wrong misclics when trying to click add/remove button when hovering over cables\r\n- op enhancements: fix: correct facing triangles in rectangle9slice\r\n",
            "date": 1699957975761,
            "youtubeid": ""
        },
        {
            "text": "#### Editor / UI\r\n\r\n- editor: Add \"save anyway\" to \"patch has been updated\" warning\r\n- editor: Add option to export unminified projects and code\r\n- editor: Added new HDRI files\r\n- editor: Canvas info bar is always visible now\r\n- editor: Color indicator on patchfield\r\n- editor: Create new op will auto capitalize op name\r\n- editor: Fix copying owner of a patch as collab works now\r\n- editor: Fix update list of libraries after adding/removing lib of op (no need to reload editor)\r\n- editor: Fix webdemoexe export\r\n- editor: Fixed bug with hdpi resolution not updating when pixel ratio was changed at runtime\r\n- editor: Fixed lots of compatibility issues with pixelformats on different platforms\r\n- editor: Fixed the default aspect ratio to be 16:9\r\n- editor: Load userops of collaborators later/only when use, speed up loading of editor\r\n- editor: More pixel formats\r\n- editor: New layout of manage op tab\r\n- editor: Old \"code\" tab is renamed to \"manage op\" and openes as normal tab\r\n- editor: Op code editor has a dropdown for quickly opening attachment files\r\n- editor: Op code editor has button to reach manage op tab\r\n- editor: Reduce amount of data sent to server when saving patch\r\n- editor: Removed panel tabs below canvas\r\n- editor: Removed second tab panel on the right side\r\n- editor: Show notifications in editor when receiving invites or access requests\r\n- editor: Texture previewer added buttons to scale the preview\r\n- editor: Texture previewer fixed bug with not remembering if it was opened or not\r\n- editor: Upgrading ops: don't show dialog if all ports are compatible\r\n- editor: You can now press space while right-click-dragging a cable to scroll around\r\n\r\n#### New Ops\r\n\r\n- new op: Ops.Browser.ColorScheme - Get light/dark color scheme preference of the browser\r\n- new op: Ops.Data.Compose.CompArrayPushObject - push/append an array to an array\r\n- new op: Ops.Data.Compose.CompObjectSetBool - Set a boolean as object property\r\n- new op: Ops.Gl.Meshes.Rectangle9Slice - Nine slice image format texture mapped rectangle \r\n- new op: Ops.Gl.TextureEffects.RandomNumberTexture - Set random numbers into an imagecompose\r\n- new op: Ops.Json.CopyObject - Creates a copy of a JSON object\r\n- new op: Ops.Json.ObjectSetColorArray - Set rgba array by key in an object\r\n\r\n#### Renamed Ops\r\n\r\n- rename op: AjaxRequest to Ops.Json.HttpRequest_v3\r\n- rename op: move to graphics namespace: Ops.Graphics.DepthTest\r\n- rename op: move to graphics namespace: Ops.Graphics.FaceCulling_v2\r\n- rename op: deprecate Ops.Array.ArraySetObject\r\n- rename op: deprecate Ops.Array.ArraySetString\r\n- rename op: deprecate Ops.Array.ArraySetNumber3\r\n- rename op: deprecate Ops.Gl.AspectRatio\r\n\r\n#### Op Enhancements\r\n\r\n- op enhancements: Ops.Array.ArrayLength_v2 - New version - Does output 0 when array is null\r\n- op enhancements: Ops.Cables.Function_v2 - Fix first default parameter not being used\r\n- op enhancements: Ops.Extension.FxHash.FxHash - Updated to new api\r\n- op enhancements: Ops.Gl.GLTF.GltfMorphTargets - Custom timing input working now\r\n- op enhancements: Ops.Gl.GLTF.GltfMorphTargets - Fix crash when using a non existing submesh index\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - Correctly free memory after loading binary data\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - Show total number of keyframes\r\n- op enhancements: Ops.Gl.MediaRecorder - Added trigger output when finished recording, added object output which contains blob data\r\n- op enhancements: Ops.Gl.Meshes.Grid - Axis select\r\n- op enhancements: Ops.Gl.Meshes.PointCloudFromArray - Fix bug: not updating and stalling when vertex colors were changed in some cases\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial: Added more Clearcoat options to PBR Material and thin film iridescence\r\n- op enhancements: Ops.Gl.Performance - Added ms graph scale\r\n- op enhancements: Ops.Gl.Performance - Added option to toggle gpu time measuring\r\n- op enhancements: Ops.Gl.Texture_v2 - Select color channels to load / pixel data format\r\n- op enhancements: Ops.Gl.TextureEffects.Color_v2 - Added alpha input\r\n- op enhancements: Ops.Gl.TextureEffects.ToNormalMap_v2 - Fix bug where it sometimes in special cases did read from an empty texture\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v5 - Add option to set manual fixed width of texture\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v5 - Added letter spacing parameter\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v5 - Auto line break toggle\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v5 - Now possible to have automatic texture height when set to manual width \r\n- op enhancements: Ops.Html.ElementFadeInOut - Scope css class to individual ops, less css inheritance\r\n- op enhancements: Ops.Html.FontFile_v2 - Fixed 404 handling\r\n- op enhancements: Ops.Json.HttpRequest_v3 - Allow loading of binary files, outputs data url\r\n- op enhancements: Ops.Sidebar.LocalFileToDataUrl - Added output of filename from local file and file data object \r\n- op enhancements: Ops.Sidebar.Sidebar - Add toggle to use default css or completly write your own\r\n- op enhancements: Ops.Sidebar.Sidebar - Adjusted style text color \r\n- op enhancements: Ops.Sidebar.Sidebar - Clicking buttons is now visible via :active css property\r\n- op enhancements: Ops.String.FreezeString - Dont save string in json \r\n- op enhancements: Ops.Website.LocationHashRoute - Remove dependency to navigo library, move relevant code to op\r\n\r\n#### Website\r\n\r\n- website: Add \"unlisted - view only\" mode to patch visibilities to mimic old secret url behaviour\r\n- website: Add activityfeed to display invites, requests, likes, favs\r\n- website: Allow for searching patches when not logged in, move url to /patches\r\n- website: Allow saving and editing of team patches for members with full access\r\n- website: Allow to register and configure notifications for email/editor/pushnotification\r\n- website: Browser page: more webgpu infos\r\n- website: Fix rotation of patches on landing page\r\n- website: Fix sorting of logentries for patches/teams/patchlists\r\n- website: Fix: make \"add patch to..\" patchlist search case-insensitive\r\n- website: Fixed bug with some browsers on linux show a midi warning dialog, when just checking browser capabilities\r\n- website: Ignore shortcuts when any mod key is pressed\r\n- website: Make public patchlists available for non-logged in users add to navigation\r\n- website: Patch info panel with size of all assets and links to all custom ops\r\n- website: Post to discord #bot-community when publishing patchlists\r\n- website: Remove ribbons for private patches in lists, add icon for state of visibility next to name\r\n- website: Show \"last update\" date on patch page for non-public patches\r\n- website: Show \"manage op\" section on op-page for users appropriate permission\r\n- website: Show all types of patchlists on public patchlists page\r\n- website: Show information about used custom ops and asset size for collaborators on patch page\r\n- website: Speed up a lot of loading times on all pages\r\n\r\n#### Misc\r\n\r\n- docs: update docs for new patch visibility\r\n- discord: post to discord #bot-community when publishing teams\r\n- cables-cli: add option to export unminified projects and code\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "date": 1699429900833,
            "youtubeid": ""
        },
        {
            "text": "#### Editor / UI\r\n- load userops of collaborators later/only when use, speed up loading of editor\r\n- add \"save anyway\" to \"patch has been updated\" warning\r\n\r\n#### Website\r\n- add \"unlisted - view only\" mode to patch visibilities to mimic old secret url behaviour\r\n- remove ribbons for private patches in lists, add icon for state of visibility next to name\r\n- fix sorting of logentries for patches/teams/patchlists\r\n- show \"last update\" date on patch page for non-public patches\r\n\r\n#### Docs\r\n- update docs for new patch visibility",
            "date": 1695288718478,
            "youtubeid": ""
        },
        {
            "text": "Release Blog post: https://blog.cables.gl/2023/09/13/september-2023-release/\r\n\r\n#### New Ops:\r\n\r\n- new op: Ops.Array.ArrayPack2Simple - Packs 2 individual arrays into an array2 - without needing a trigger\r\n- new op: Ops.Array.CopyArraySimple - create a copy of an array\r\n- new op: Ops.Data.Compose.CompString - Compose a string\r\n- new op: Ops.Data.Compose.CompStringAppend - Append a string to a string\r\n- new op: Ops.Data.Compose.CompStringShorten - Remove characters from the beginning or end of a string\r\n- new op: Ops.Gl.ExternalCanvas - Open a new window that shows a copy of the patch canvas\r\n- new op: Ops.Gl.GLTF.GltfMorphTargets - manually render weighted morph targets/shape keys from a gltf file\r\n- new op: Ops.Gl.TextureEffects.OnePassBlur - https://github.com/XorDev/1PassBlur\r\n- new op: Ops.Graphics.GetMaterialId - get the id/index of the current set material\r\n- new op: Ops.Html.InputElement - HTML input/textarea element to allow the user to enter text \r\n- new op: Ops.Json.Object - An empty Object\r\n- new op: Ops.Json.ObjectDeleteKey - Remove a Property from an Object by Key\r\n- new op: Ops.Json.ObjectMerge - merge key+values of two objects\r\n- new op: Ops.Math.Cross - Computes the cross product of two vec3's \r\n- new op: Ops.Vars.TriggerVarGetString - Get a string variable value at time of trigger \r\n- new op: Ops.Gl.Textures.SSAO - screen space ambient occlusion from depth texture\r\n\r\n\r\n\r\n#### Op Enhancements\r\n\r\n- op enhancements: Ops.Array.ArraySubtract - now has switch between x-array or array-y\r\n- op enhancements: Ops.Array.RandomWordsArray - added cities,countries,names,demogroup words\r\n- op enhancements: Ops.Audio.MidiJsonNote_v2 - fix crash by removing old code\r\n- op enhancements: Ops.Data.Compose.CompArrayPushNumbers - add select input how many numbers will be added\r\n- op enhancements: Ops.Devices.Keyboard.KeyPressLearn - fixed bug where modifier keys ignored on key release\r\n- op enhancements: Ops.Devices.Midi.MidiCC - more control when the trigger output is triggered\r\n- op enhancements: Ops.Devices.Mouse.Mouse_v3 - fix \"pixel display\" retina bug\r\n- op enhancements: Ops.Gl.ForceCanvasSize - now resets to correct original size after deleting  or disconnecting op\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - cinema exporter compatibility: fix animations not showing if animation name is undefined\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - fix strange time multiplier for mesh animations\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - implemented support for morph targets, shape keys, PLA etc..\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - meshes without normals now have flat shading, as defined in gltf specs\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - show cube if there was an file loading error\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - show number of morphtargets in mesh list. add morphtargets to file size allocation info\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v4 - use material properties is activated by default\r\n- op enhancements: Ops.Gl.Matrix.Transform - removed unused ammoworld corelib\r\n- op enhancements: Ops.Gl.Meshes.Cube_v2 - fix bugs of bias parameter\r\n- op enhancements: Ops.Gl.Meshes.Cube_v2 - new \"SideWrap\" wrap mode \r\n- op enhancements: Ops.Gl.Meshes.FullscreenRectangle_v2 - fixed bug did not render anything in specific resolutions\r\n- op enhancements: Ops.Gl.Meshes.SplineMeshMaterial_v2 - fix aspect ratio problems\r\n- op enhancements: Ops.Gl.Meshes.Torus_v3 (new version) - fixed wrong uv mapping\r\n- op enhancements: Ops.Gl.Render2Texture_v3 - updated size toggle\r\n- op enhancements: Ops.Gl.Shader.PointMaterial_v4 - added random atlas functionality: choose a random texture from an atlas\r\n- op enhancements: Ops.Gl.ShaderEffects.TransformTextureCoordinates - texture coordinates can now rotated\r\n- op enhancements: Ops.Gl.ShaderEffects.VertexDisplacementMap_v4 - more control over normal calculation\r\n- op enhancements: Ops.Gl.Texture_v2 - 404 textures are red stripes now\r\n- op enhancements: Ops.Gl.TextureEffects.Noise.PerlinNoise_v2 - added option for normalized value range \r\n- op enhancements: Ops.Gl.TextureEffects.ZoomBlur_v2 - parameter to set the number of samnples\r\n- op enhancements: Ops.Gl.Textures.TextTexture_v5 - added padding parameters\r\n- op enhancements: Ops.Gl.Textures.TextureInfo - output pixelformat as string\r\n- op enhancements: Ops.Gl.Textures.TextureToCoordinateGrid - added repeat/layering functionality\r\n- op enhancements: Ops.Graphics.Geometry.TesselateGeometry - fix bug with incorrect interpolation of attributes in some cases\r\n- op enhancements: Ops.Json.ObjectRecorder - output the recorded objects as an array\r\n- op enhancements: Ops.Json.ObjectSetString_v2, Ops.Json.ObjectSetNumber_v2, Ops.Json.ObjectSetArray_v2, Ops.Json.ObjectSetObject_v2 - now work on a copy of the object, no longer on reference\r\n- op enhancements: Ops.Sidebar.DropDown_v2 - better colors for list display\r\n- op enhancements: Ops.Ui.VizStringLong - syntax highlighting\r\n- op enhancements: Ops.Website.FilenameInfo - fixed: suffix contained query params / added basename and query params outputs\r\n\r\n- op enhancements: imagecompose/render2texture ops: added 16bit and 11bit pixel formats\r\n- op enhancements: render2texture/fullscreenrectangle/imagecompose/pixelprojection - new internal viewport system\r\n- op enhancements: All mesh ops - fix bug with meshes not being displayed when switching between 32 and 16 bit index buffers.\r\n- op enhancements: new blendmodes for simple math operations without clamping etc...\r\n- op enhancements: ios workaround for pixelformats using linear filtering with floating point formats / ios compatibility improved\r\n\r\n#### Renamed ops\r\n\r\n- deprecated customop - please create Patch ops now!\r\n- moved Ammo ops to extension Ops.Extension.AmmoPhysics\r\n\r\n- renamed render2texure to renderToTexture\r\n- renamed Shader2Texture to Ops.Gl.Shader.ShaderToTexture\r\n- renamed Render2Textures to Ops.Gl.RenderToTextures\r\n- renamed TriggerNumber to Ops.Trigger.NumberByTrigger\r\n- renamed setNumberOnTrigger to Ops.Trigger.TriggerNumber\r\n- renamed TriggerBoolean to Ops.Boolean.BoolByTrigger\r\n- renamed GeometryMergeSimple to Ops.Graphics.GeometryMergeSimple\r\n\r\n- deprecated TextureEffects SSAO_v2\r\n- deprecated Render2TexturesSlots_v2\r\n- deprecated deprecated Viewport2\r\n\r\n\r\n#### Editor / UI\r\n\r\n- editor: fixed bugs with edit buttons opening the editor in readOnly state\r\n- editor: cleaned patch settings formular \r\n- editor: op search: now searches all op names in available collections like teams and extensions\r\n- editor: object/json inspect: open in tab and no longer in modal dialog\r\n- editor: better saved state management\r\n- editor: set orange icon if something is not saved\r\n- editor: shows now patch summary - added shortcut to change the title of the patch without going into settings panel\r\n- editor: opsearch: \"/200\" will create divide op and set the second number to 200, works with all math ops\r\n- editor: opsearch math symbol shortcuts now also work with arrays (and + works with strings)\r\n- editor: profiler can now be paused \r\n- editor: updated webdemoexe to current version\r\n- editor: exporter dialog is now opened in a tab, not as modal dialog anymore\r\n- editor: shift x works with multiple in/multiple out ports connected\r\n- editor: general optimization of ui performance\r\n- editor: ui performance: switching focus between renderer and patchfield does not drop a frame anymore\r\n- editor: texture preview pinning\r\n- editor: texture preview remembers state\r\n- editor: GPU profiler\r\n- editor: flowmode is fast in big patches with subpatches, hidden ops are ignored\r\n- editor: fix bug with canvas being resized after creating screenshot on hdpi devices\r\n- editor: fixed bugs with sanitzed html not showing in port value param panel\r\n- editor: double click bg to move up one level in subpatch hierarchy\r\n- editor: search for opids / op instance ids\r\n- editor: copy pasting subpatches that contains subpatches works \r\n- editor: added user preference: format source code after saving\r\n- editor: added user preference: right click drag on cables: unlink and grab cable\r\n- editor: added user preference: choose mouse button for panning the patchfield\r\n- editor: easier hitting ports with your mouse doubled height of hitbox\r\n- editor: cut cables by pressing y and draw a line\r\n- editor: onAnimFrame callbacks are no longer executed when op is deleted or reexecuted\r\n- editor: do not show \"op editing on live environment\" for non-core ops\r\n- editor: fix wrong text/type in file deletion check for libraries\r\n- editor: show proper warning text on uploading assets into read-only patch\r\n- editor: remove default inclusion for backups for exe-export, needs to be checked explicitly\r\n- editor: fix abbreviation search in opselect after creating new op\r\n- editor: fix editing of patchops on live if created on dev and vice versa\r\n- editor: better errormessage for \"failed to load op\", link to oppage, and to dev (if on live)\r\n- editor: make exe-export work with \"multiple files\" option\r\n- editor: fix bug when dragging port to param-panel to link it\r\n- editor: add webexe export to export options on cables.gl, update to newest version\r\n- editor: rework patch-summary in parampanel, allow to edit title by click\r\n- editor: link teams and patchlists in patch-summary\r\n- editor: fix links in patchsettings, always open new window when clicked in editor session\r\n- editor: fix remote viewer loading after qrcode or direkt link\r\n- editor: allow access to editor for \"unlisted\" patches\r\n\r\n\r\n#### Website\r\n\r\n- website: add \"public patchlists\" to main menu\r\n- website: add \"patchlists\" to \"my patches\" menu\r\n- website: show patchlists on patchpage and userprofile\r\n- website: display seach results for users only if searchword exists\r\n- website: make password-recovery case insensitive\r\n- website: fix file deletion check for libraries\r\n- website: add loading indicator to team and namespace edit forms\r\n- website: show better errormessages on signup page\r\n- website: fix broken link to documentation on teams-collab page\r\n- website: fix artifacts for default/empty teamlogo on settings page\r\n- website: rework structure of \"basic examples\" page\r\n- website: introduce patch visibility, patches can now be public/unlisted/private\r\n- website: remove secret url in favour of \"unlisted\" patch-visibility\r\n- website: fix bug with \"illegal namespace\" of team that sometimes happend when generated id started with \"-\"\r\n\r\n#### Docs\r\n\r\n- docs: update docs for cables-gl to include short-id for better understanding\r\n- docs: update \"how to support cables development\" with tezoz wallet\r\n- docs: update section on patch permissions for new patch visibility\r\n- docs: add section on patchlist permissions\r\n\r\n",
            "date": 1694677874025,
            "youtubeid": ""
        },
        {
            "text": "#### Editor / UI\r\n- handle opened editors for ops and attachments after code was deleted\r\n- speed up code and documentation requests\r\n\r\n#### Website:\r\n- add conflicting ops to \"patch uses dev ops\" error page and show patch\r\n- add keyboard shortcuts to op-page (e for edit,  for rename, save on enter), project settings (save on enter), comments (save on enter)\r\n- add patreon supporters to credits page\r\n- add statusinformation and error messages to op deletion page\r\n- allow access to patch ops in public patches for non-logged in users\r\n- allow for patreon account to be linked to cables.gl\r\n- better guide to renaming all/older versions of an op\r\n- create \"delete\" functionality for team-owners, only teams with no ops in namespaces can be deleted\r\n- integration of badges for supporters of [https://](https://www.patreon.com/cables_gl)\r\n- link to namespace overview from \"op not found\" errorpage if op actually is namespace\r\n- optimize loading of \"my teams\" menu\r\n- remove flickering of some pages when using tabs\r\n- show public patches, top of the month, featured patches, examples and ops on /patches for non-logged in users\r\n- show visibility change, owner change and namespace removal in team log\r\n- start cleaning up date formats (logdate, displaydate, relativedate), show displaydate after seven days for \"relativedate\"",
            "date": 1689757808219,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Anim.Spring - Animated spring simulation based on input target value.\r\n- new op: Ops.Array.ArrayIteratorTextures - iterate over an array of textures\r\n- new op: Ops.Gl.Render2Textures_v2 - new version and methods and no need for slot op anymore\r\n- new op: Ops.Gl.Textures.TextureArrayInfo\r\n- new op: Ops.Graphics.GetObjectId - get the id/index of the current object/mesh\r\n- new op: Ops.Graphics.GetMaterialId - get the id/index of the current set material\r\n\r\n#### New Ops: Body Intersecting System\r\n\r\n- new op: Ops.Graphics.Intersection.IntersectWorld - Define a world to check for intersections and collisions\r\n- new op: Ops.Graphics.Intersection.IntersectBody - Add Bodies and check if they intersect/collide with each other\r\n- new op: Ops.Graphics.Intersection.IntersectRaycast - Cast a ray and check if it intersect/collide with bodies\r\n- new op: Ops.Graphics.Intersection.FilterIntersections - Define filters to get colliding and intersecting bodies\r\n\r\n#### New Ops: Composing Data Structures\r\n\r\n- new op: Ops.Data.Compose.CompArray - Compose an Array\r\n- new op: Ops.Data.Compose.CompArrayPopNumber - pop/remove the last number from an array\r\n- new op: Ops.Data.Compose.CompArrayPushArray - push/append an array to an array\r\n- new op: Ops.Data.Compose.CompArrayPushNumber - push/append a number to an array\r\n- new op: Ops.Data.Compose.CompArrayPushNumbers - push/append multiple numbers to an array\r\n- new op: Ops.Data.Compose.CompArrayPushString - push/append a number to an array\r\n- new op: Ops.Data.Compose.CompArrayShiftNumber - shift/remove the first number from an array\r\n- new op: Ops.Data.Compose.CompArraySnapshot - get a copy of the current state of an array\r\n- new op: Ops.Data.Compose.CompObject - Compose an Object\r\n- new op: Ops.Data.Compose.CompObjectSetArray - set array as object property\r\n- new op: Ops.Data.Compose.CompObjectSetNumber - set number as object property\r\n- new op: Ops.Data.Compose.CompObjectSetObject - set object as object property\r\n- new op: Ops.Data.Compose.CompObjectSetString - set string as object property\r\n\r\n#### Op Enhancements:\r\n\r\n- op enhancement: Ops.Ui.VizTexture: color values visualization functionality\r\n- op enhancement: Ops.Devices.Keyboard.KeyPressLearn: fix if not working when exported and canvas does not have a tabindex attribute\r\n- op enhancement: Ops.Game.PersonController - added reset trigger\r\n- op enhancement: Ops.Gl.Textures.TextureToBase64_v3 - much faster, uses asynch pixelreader \r\n- op enhancement: Ops.Html.ElementInteraction - fix for mobile handle touch like left mouse click\r\n- op enhancement: Ops.Ui.VizStringLong: better scroll / zoomtext option / change fontsize / enable/disable line numbers\r\n- op enhancement: Ops.Json.AjaxRequest_v2: show http status code / fix bug: json did not get parsed when status code was not 200 or 0\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v5 - added toggle for automatic canvas size, like other texture ops\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v5 - added option to set background color\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v5 - new version: added new auto mode, which resizes the resulting texture\r\n- op enhancement: Meshes only rebuild when really rendering: Triangle, RecangleFrame, Star, RectangleRounded, etc.\r\n- op enhancement: Ops.Array.ArraySetNumber_v3 - now works without triggering, fixed bugs with copying the original array\r\n\r\n#### Renamed Operators\r\n\r\n\r\n- moved fxhash op to extension FxHash: https://cables.gl/ops/Ops.Extension.FxHash\r\n- moved voice related special ops to extension Voice: https://cables.gl/ops/Ops.Extension.Voice\r\n- moved op that uses library trackingjs to extension Trackingjs: https://cables.gl/ops/Ops.Extension.Trackingjs\r\n- moved ops that use lottie library to to extension Lottie: https://cables.gl/ops/Ops.Extension.Lottie\r\n- moved ops that use google mediapipe library to extension Mediapipe: https://cables.gl/ops/Ops.Extension.Mediapipe\r\n- moved ops that use Library OpenType to extension OpenType: https://cables.gl/ops/Ops.Extension.OpenType\r\n\r\n#### Editor / UI\r\n\r\n- editor: fix bug there loading teamops into opselect needed to click \"load\" on the team/extension again\r\n- editor: do not add empty \"initial collaborators\" list from patch-log\r\n- editor: make \"show referencing patches\" a real link\r\n- editor: fetch collaborator information from api before cloning patch\r\n- editor: remove website navigation from pages shown in iframe (tabs)\r\n- editor: \"forcing webgl1\" notification is now red and scary\r\n\r\n#### Website\r\n\r\n- website: fix formatting of project subtitles on patch error pages\r\n- website: clean up namespace list in team-settings page\r\n- website: allow editing of information for extensions\r\n- website: link to team on op-rename result page\r\n- website: use doublequotes in patch- and team-log everywhere\r\n- website: allow markdown in team- and extension-description\r\n",
            "date": 1687170539902,
            "youtubeid": ""
        },
        {
            "text": "#### Editor / UI\r\n\r\n- editor: abbreviation-search, e.g. search for OBO to find ObjectSetObject\r\n- editor: add \"BACKUP\" to page title when working on backups of patches\r\n- editor: adjusted port/cables colors to not differ, especially when flowmode turned off\r\n- editor: all port titles can be edited now (three dots menu)\r\n- editor: allow backup of last saved state, while patch is in unsaved state\r\n- editor: allow for selection of collaborators and teams to take over when cloning a patch\r\n- editor: allow saving of empty op attachments\r\n- editor: better error handling when server is restarting while saving a patch\r\n- editor: bookmark list is now sorted alphabetically\r\n- editor: connecting of objects is \"typesafe\" now / shows warning/errors\r\n- editor: disallow for publishing patches with userops or non-public-team ops\r\n- editor: do not generate op-documentation when taking example screenshot\r\n- editor: dragging port onto link to replace: only remove when ports are same type\r\n- editor: error reports now contain op name, if possible\r\n- editor: exampled ops in example patches are highlighted automatically\r\n- editor: export dialog no longer closes when switching away from browser window (to copy credentials)\r\n- editor: filemanager search filter is now case insensitive \r\n- editor: find now also searches for names of variables that are assigned to ports\r\n- editor: find: new \":activity\" search mode shows all ops, that currently have port activity \r\n- editor: find: new \":noncoreops\" search mode shows all ops, that are not cables default ops\r\n- editor: find: better search results blueprints/exact value\r\n- editor: fix \"select childs\" - does not crash anymore on circular connected ops\r\n- editor: fix bug when adding new trigger from opselect suggestions, does not remove existing links anymore\r\n- editor: fix bug where modaldialogs where not cancellable\r\n- editor: fix bug where sometimes patch-backup would not be created\r\n- editor: fix darkening layer size when focussing the canvas\r\n- editor: fix downgrading of ops that where renamed from their original op-name\r\n- editor: fix info-bar colors in bright-theme\r\n- editor: fix problem where its hard to click the \"add op\" button because of jittering mouse coordinates\r\n- editor: fix removing empty row in filemanager after delete\r\n- editor: fix timeline play/pause icon toggle\r\n- editor: fix wrong linebreaks in user search suggestion dropdown\r\n- editor: fix: ops created using json object structure view are now created in the correct subpatch\r\n- editor: fixed bugs and visual quality of patchfield when zooming in using browser zoom functionality\r\n- editor: fixed bugs when renaming variables that are assigned to ports\r\n- editor: fixed bugs with incorrect ui attributes after executing op code\r\n- editor: fixed bugs with wrong viewport offset when focussing ops \r\n- editor: fixed selected text not colored\r\n- editor: gradient editor: no slowdowns anymore\r\n- editor: gradient editor: better navigation of keys/highlight current keys, button to jump to keys\r\n- editor: gradient editor: can now also be used for curves/ramps\r\n- editor: gradient editor: gradient in editor now respects step/smoopthstep/oklab options\r\n- editor: gradient editor: right click or x button to delete keys\r\n- editor: hide \"missing ops\" in startup log on dev.cables.gl\r\n- editor: input fields now automatically replace commas with decimal points\r\n- editor: introduce patchops and team ops\r\n- editor: introduce patchops as new default way to code ops, will replace CustomOp (see \"docs\")\r\n- editor: it is now possible force the order of ports, e.g. when having dynamic added ports\r\n- editor: keep multiplayer-bar open for pilot, even if noone is in the session anymore\r\n- editor: link to \"edit op page\" in crash-dialog to get out of unrecoverable state of patch\r\n- editor: link to original patch in filemanager for referenced assets\r\n- editor: make creating patchops the default op-type\r\n- editor: new visualization (strikethrough) of state \"op can't work\" (without specific ports being connected)\r\n- editor: new way to visualize restricted ui e.g. in multiplayer or when paused\r\n- editor: offer selection of available namespaces (patch/user/team/extension...) in op create/clone dialog\r\n- editor: op search dialog openes much faster \r\n- editor: ops with loading tasks now show a loading indicator in the patchfield\r\n- editor: optimize: only load ace editor when really needed\r\n- editor: optimized filesize and reduced number of requests to load cables\r\n- editor: optimized unselecting all ops in big patches \r\n- editor: parameter panel ports now shows value of assigned variables\r\n- editor: performance optimization for HUGE patches and people that hate subpatches for some reason\r\n- editor: port hover tooltip for textures, geometries\r\n- editor: port hover tooltips are not capitalized by css anymore\r\n- editor: redirect to loginpage when accessing remoteviewer non-logged in (i.e. scanning qrcode for mobile)\r\n- editor: reduce filesize of downloaded op-documentation by ~25%\r\n- editor: reformat \"log\" for patchactions in settings as table, use proper datetime format\r\n- editor: remove unneccessary duplicate check when deleting patch from patchsettings\r\n- editor: resizing canvas will now correctly hide the canvas info bar if overlapping e.g. on small screens\r\n- editor: saving a backup over the original patch will redirect to editor for original patch\r\n- editor: shift+e to open first editor port now also works for gradient/curve editors\r\n- editor: shift+x disconnect only first input/output port \r\n- editor: show documentation for userops and extensions in opsearch\r\n- editor: show explanation why you can't directly link two ports in a tooltip when dragging\r\n- editor: show fxhash info when exporting - cables has a tezos wallet now where you can send royalties, if you want\r\n- editor: show hints and warnings when accessing patches with ops that are not accessible to the user\r\n- editor: show number of patch-, team- and extension-ops in patch analyze command output\r\n- editor: show port hover tooltip also when hovering cables\r\n- editor: show referenced files from other patches (and used library files) in filemanager\r\n- editor: speed up loading of ops, do not load userops twice\r\n- editor: speedup check for dependencies on deleting patch\r\n- editor: subpatch pasting fixed wrong position, focus animation etc\r\n- editor: tweaked port context menu option display\r\n- editor: unified button layouts and behaviour\r\n- editor: unified icon styles / removed all fontawesome icons\r\n- editor: unify style: color/border/focus viz of all text inputs\r\n- editor: unify teamops and extensions in opsearch\r\n- editor: user preferences: new setting for font size of text editor\r\n- editor: viz ops now work without mainloop\r\n- editor: when cloning an op, the new one is automatically added now\r\n- editor: when cloning an op, you can choose to replace all occurences of the original op\r\n- editor: when dragging an op ports dont get transparent anymore\r\n- editor: add restoring a patch from a backup to patch-log\r\n- editor: fix removing empty row in filemanager after delete\r\n\r\n#### New Ops:\r\n\r\n- new op: Ops.Array.ArraySwizzle - manage/re-order components of an array (stride)\r\n- new op: Ops.Arrays.ArrayGetValuesByIndexArray - pick values from input array at given indices and stride\r\n- new op: Ops.Gl.GLTF.GltfInfo - output some infos about the current parent GLTF scene\r\n- new op: Ops.Gl.Matrix.TransformMatrix - transform a matrix (mat4)\r\n- new op: Ops.Gl.Shader.ShaderInfoUniforms - read back all uniforms values of the current bound shader\r\n- new op: Ops.Gl.ShaderEffects.ColorArea_v5 - falloff curve modes\r\n- new op: Ops.Gl.ShaderEffects.ColorArea_v5 - now has more shapes (SDF functions)\r\n- new op: Ops.Gl.ShaderEffects.ColorArea_v5 - switch between world/model/uv/screen space\r\n- new op: Ops.Sidebar.SideBarImage - Display an image in the sidebar\r\n- new op: Ops.Vars.TriggerVarGetNumber - read a variable number when triggering\r\n- new op: Ops.Html.TransformCSS3DElement - Transform an Element in 3d space using CSS3D \r\n- new op: Ops.Gl.TextureEffects.Math.Normalize - normalize texture rgb values\r\n- new op: Ops.Gl.TextureEffects.Math.Round - Round number values of texture color channels\r\n- new op: Ops.Gl.TextureEffects.Math.TexMathCompare - compare and pass through of color channel values\r\n- new op: Ops.Array.StringToLineNumberArray - outputs an array containing a line number for every character\r\n- new op: Ops.String.StringGetLineNumAtIndex - output the line number at the character index\r\n\r\n#### Op Enhancements:\r\n\r\n- op enhancement: Object.Set Ops: fixed spamming of object keys in object while typing\r\n- op enhancement: Lottie Ops: updated to version 10.5.2\r\n- op enhancement: Array ops: an optimized way to set array/object ports: use setRef() instead of set() to signal a change of an object reference\r\n\r\n- op enhancement: Ops.Array.ArrayChunk - do not crash when setting floats as begin/size, round down to next int\r\n- op enhancement: Ops.Array.ArrayDivide - move select\r\n- op enhancement: Ops.Array.ArrayOfObjectsFilterKeys - fix handling of null values in array of objects\r\n- op enhancement: Ops.Array.RandomArrays - show number and stride in op extended title\r\n- op enhancement: Ops.Array.SortArrayWithIndices_v2 - new version: fix bug with sorting order / fix output not being sorted in some cases\r\n- op enhancement: Ops.Audio.SpeechRecognition - added trigger to restart the recognition service / started output now correctly reports when it stopped automatically\r\n- op enhancement: Ops.Cables.FPS_v2 - fixed bug, works again\r\n- op enhancement: Ops.Cables.UIMode - outputs if patchfield is in fullscreen or background mode and if patch is hidden in background mode\r\n- op enhancement: Ops.Dev.Gl.Render2Textures2 - does not need r2tSlots anymore, can define rules for all coming materials what to render into which texture\r\n- op enhancement: Ops.Dev.Gl.Render2Textures2 - etc...\r\n- op enhancement: Ops.Dev.Gl.Render2Textures2 - new version\r\n- op enhancement: Ops.Devices.Mouse.Mouse_v3 - new area mode \"canvas area\", does work while hovering over div elements\r\n- op enhancement: Ops.Devices.Mouse.MouseDrag - new area option: canvas area, works everywhere in the canvas area - even over other elements\r\n- op enhancement: Ops.Devices.TouchScreen - respect \"normalize\" setting for finger 2, add \"force\" output for finger 2\r\n- op enhancement: Ops.Gl.CanvasInfo - added output of canvas element\r\n- op enhancement: Ops.Gl.CanvasInfo - added output of canvas parent element, handy for setting styles for all cables generated elements\r\n- op enhancement: Ops.Gl.GLTF.GltfNodeTransforms - fix bug where nodes were always sorted alphabetically\r\n- op enhancement: Ops.Gl.GLTF.GltfNodeTransforms_v3 - time input for animations\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - allow multiple structure view tabs at once / tweaked display of structure view/ exposing ops are now positioned and centered correctly\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - fixed bugs when gltf operators where created in wrong subpatch\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - loading time of glb files with lots of animation keys are greatly improved\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - loading time used per task is now visible in show structure view\r\n- op enhancement: Ops.Gl.Matrix.ScreenCoordinates_v2 - fix bug where y position was flipped\r\n- op enhancement: Ops.Gl.MediaRecorder - fix bug that prevented audio-only mode from working\r\n- op enhancement: Ops.Gl.Meshes.Circle_v2 - fix order of vertices in triangles\r\n- op enhancement: Ops.Gl.Meshes.Cone - fix normals\r\n- op enhancement: Ops.Gl.Meshes.Cube_v2 - fix bug with not outputting geometry in some special cases\r\n- op enhancement: Ops.Gl.Meshes.FullscreenRectangle - fixed but that \"git\" scale was not loaded by default\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - checkbox to force updating the texture without updating the geometry\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - new output mode: texture color lookup\r\n- op enhancement: Ops.Gl.Meshes.MeshInstancerFromTexture_v3 - add option to ignore pixels with alpha channel threshold\r\n- op enhancement: Ops.Gl.Meshes.MeshInstancerFromTexture_v3: added toggle to enable limiting of \"number of instances\"\r\n- op enhancement: Ops.Gl.Meshes.PointCloudFromArray - added pointSize input array\r\n- op enhancement: Ops.Gl.Meshes.Rectangle_v4 - faster geometry rebuild / not rebuilding geometry on animating width/height but scaling a 1x1 rect..\r\n- op enhancement: Ops.Gl.Meshes.Sphere_v3 - radius scale cache bla if geo not connected\r\n- op enhancement: Ops.Gl.Meshes.Star - fix order of vertices in triangles\r\n- op enhancement: Ops.Gl.Meshes.Torus_v2 - fixed vertex layout to triangles, should not behave weird with normals/instancers etc\r\n- op enhancement: Ops.Gl.Meshes.TriangleSphere - rebuild less often\r\n- op enhancement: Ops.Gl.Pbr.PbrMaterial - fix bug where pbr shader was recompiled too often\r\n- op enhancement: Ops.Gl.Performance - fix bug with showing wrong cpu numbers when minified \r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - option to select texture coord/uv channel for ao map\r\n- op enhancement: Ops.Gl.Shader.AttributeAsColorMaterial - option to show texture coords/uv channel 2\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - added support for uniform float array inputs\r\n- op enhancement: Ops.Gl.Shader.GetShader - ignore shaders in shadowpasses\r\n- op enhancement: Ops.Gl.Shader.ShaderInfo - performance optimize: update results only if shader really changed\r\n- op enhancement: Ops.Gl.Shader.WireframeMaterial_v2 - more controll about antialiasing/falloff. opacity parameter for wire and fill colors\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedDisplacementMap_v2 - also works with clamp to edge textures\r\n- op enhancement: Ops.Gl.ShaderEffects.ModuloVertexPosition - added modulo parameter\r\n- op enhancement: Ops.Gl.ShaderEffects.Render2TexturesSlots_v2 - all new modes \r\n- op enhancement: Ops.Gl.TextMeshMSDF_v2 - added input port for color array\r\n- op enhancement: Ops.Gl.TextMeshMSDF_v2 - added smoothing parameter for finetuning antialiasing\r\n- op enhancement: Ops.Gl.TextMeshMSDF_v2 - fix bug with wrong facing triangle, when using faceculling\r\n- op enhancement: Ops.Gl.Texture2ColorArray_v2 - new version: better performance (glreadpixel)\r\n- op enhancement: Ops.Gl.Texture2ColorArray_v2 - now always outputs floats, even if 8 bit textures\r\n- op enhancement: Ops.Gl.Texture2ColorArray_v2 - option to switch channel combinations\r\n- op enhancement: Ops.Gl.Texture_v2 - clear extended title when set to inactive\r\n- op enhancement: Ops.Gl.TextureArrayLoaderFromArray_v2 - new version: fix loading output status / output null if no array connected\r\n- op enhancement: Ops.Gl.TextureColorPick - better performance (glreadpixel)\r\n- op enhancement: Ops.Gl.TextureEffects.DrawImage_v3 - changed mask src mode default to \"luminance\"\r\n- op enhancement: Ops.Gl.TextureEffects.Fog_v4 - added option to ignore infinity values\r\n- op enhancement: Ops.Gl.TextureEffects.ImageCompose_v3 show warning if drawing a 32bit texture into a 8bit target\r\n- op enhancement: Ops.Gl.TextureEffects.ImageComposeSnapshot - fix: snapshot output texture had wrong wrap/filter\r\n- op enhancement: Ops.Gl.TextureEffects.Math.RgbMath - added texture input for values which are used instead of number inputs when connected\r\n- op enhancement: Ops.Gl.TextureEffects.Math.RgbMath - modulo now works individualy for each color channel\r\n- op enhancement: Ops.Gl.TextureFromColorArray_v2 - added 32bit mode / added fill up toggle / now outputs 0 on all channels for empty pixels if fillup is disabled\r\n- op enhancement: Ops.Gl.TextureFromColorArray_v2 - added switch for size modes: manual,square,row,column\r\n- op enhancement: Ops.Gl.TextureFromColorArray_v2 - added switch to define the input array stride: e.g. RGB or RGBA\r\n- op enhancement: Ops.Gl.Textures.ColorTexture - can now also contain floating point values (will switch automatically)\r\n- op enhancement: Ops.Gl.Textures.CopyTexture_v2: only works when being triggered\r\n- op enhancement: Ops.Gl.Textures.WebcamTexture_v3: fix bug with permissions being asked even if active is true\r\n- op enhancement: Ops.Html.IFrame_v3 - now allows iframe website to switch to fullscreen\r\n- op enhancement: Ops.Html.ScrollPosition_v2 - added input port for element, when not connected it is using the document body element\r\n- op enhancement: Ops.Html.ScrollPosition_v2 - added output for percentage value of scrolling\r\n- op enhancement: Ops.Html.VideoElement autoplay attribute\r\n- op enhancement: Ops.Json.AjaxRequest_v2 - fix loadingstatus update with multiple requests\r\n- op enhancement: Ops.Sidebar.Slider_v3 - fix input text parsing problems via textfield\r\n- op enhancement: Ops.String.AddLineBreaks_v2 - fixed bug with ignored already existing linebreaks in some cases\r\n- op enhancement: Ops.String.Concat_v2 - added active toggle \r\n- op enhancement: Ops.TimeLine.DemoPrerender - array input to manually add timestamps\r\n- op enhancement: Ops.Trigger.Sequence - optimize performance when using in repeats/loops\r\n- op enhancement: Ops.Ui.VizArrayTable - automatic adjustment of widths of table columns \r\n- op enhancement: Ops.Ui.VizTexture: show connected portname for better readability when op has many ports\r\n- op enhancement: Ops.Ui.VizTexture: you can toggle to visualize 32bit number ranges outside of 0-1 as an animation\r\n- op enhancement: Ops.Ui.VizTextureTable: much faster now (glreadpixel)\r\n- op enhancement: Ops.Values.SequenceNumbers - added cleanup button\r\n- op enhancement: Ops.WebAudio.Delay - fix crash when disconnecting from audionode before connected\r\n- op enhancement: Ops.Website.LocationHashRoute - fix crash when using misformed route, show error\r\n- op enhancement: Ops.Website.LocationHashRoute - properly set port value when loading patch\r\n\r\n#### Website\r\n\r\n- website: add \"my data\" page for assets, ops and imports\r\n- website: add \"request access\" button to patch-permission-error page\r\n- website: add button to leave a team\r\n- website: add extensions to /ops overview, allow for deeplinking of userops and teamops\r\n- website: add information to teams managing extensions to \"all ops\" overview\r\n- website: add more events to patch log\r\n- website: add page to show patches using specific asset\r\n- website: add page to show usage of assets from a patch\r\n- website: add page with basic textarea for editing ops outside (crashed) editor (linked from ops page)\r\n- website: add relative date of invitation to pending invitations\r\n- website: add team option to \"code ops\" by claiming a team namespace\r\n- website: allow for team visibility to be private/unlisted/public and show/handle \"request access\"/join\r\n- website: allow read-only access to patches for read-only teammembers\r\n- website: better errormessages in rename op dialog for illegal opnames\r\n- website: better format for \"log\" in patch-settings/backups\r\n- website: check op-permission on ops page\r\n- website: fix and tweak autosuggest selections for collaboration invites\r\n- website: fix api-key create date display in settings\r\n- website: fix bug in revocation of invites for team and patches\r\n- website: fix cookiebanner not closable when using safari/ios\r\n- website: fix missing display of create-date of api-keys\r\n- website: fix weird state where owner of patch or team could only have read-only permissions\r\n- website: introduce team-log to show events for team on team settings page\r\n- website: link manage-button for patch requests to actual request on invites-page\r\n- website: links to other versions of ops for proper rename\r\n- website: link to team in patch-collaboration settings\r\n- website: link to team on ops-page\r\n- website: mobile navigation now shows teams and invitations\r\n- website: move \"ops\" and \"imports\" from settings page to new \"my data\" page\r\n- website: move logfile for patch actions to seperate tab in patch settings\r\n- website: move lots of \"actions\" from buttons/dropdowns to three-dot-menu\r\n- website: my patch context menu with export option\r\n- website: op doc page: correctly show subtype \"boolean\" for outBoolNum ports\r\n- website: redirect to login page when not logged in on patch-page (and back)\r\n- website: refine search to find more specific searches and sort by relevance\r\n- website: remove share dialog from patchpage, please use iframe-export in editor now\r\n- website: removed op collections\r\n- website: removed patch namespaces\r\n- website: removed patch-namespaces, use teams\r\n- website: rework https://cables.gl/support credits and add link to footer\r\n- website: rework op-rename page with hints/checks and consequences\r\n- website: rework op-rename page, more error-checks, sanity-checks, suggestions, \"consequences\"\r\n- website: reworked button stylesheets\r\n- website: reworked settings/account page\r\n- website: show basic information for library assets on new asset dependency page\r\n- website: show loading indicator on /browser, fix iframe navigation\r\n- website: show login-form and redirect when accessing non-logged in patch-page (i.e. remote-viewer on mobile)\r\n- website: show more information about patch when not accessible (no permissions)\r\n- website: show only newest version of ops in teamops and extensions list\r\n- website: show op authors in patchsettings with licence, unified with exported files\r\n- website: show op-warnings and example patch hints for all users that have write-access to any op\r\n- website: show space used by uploaded assets on \"my data\" page\r\n- website: show teammembers on collaboration-settings tab\r\n- website: show uploaded files and space used in account settings\r\n- website: smaller icons on /teams page, sort alphabetically\r\n- website: speed up loading of settings page\r\n- website: speed up op rename by creating opdocs less often\r\n- website: speed up patch assets page, show ops and blueprints as well\r\n- website: speed up settings page and deletion check for larger projects\r\n- website: styling checkboxes\r\n- website: three dots/context menus for rights etc.\r\n\r\n#### Core\r\n\r\n- core: allowLocalFileAccess glag in config is not needed anymore, there will be no visual error message if you dont have access rights\r\n- core: better performance: fixed bugs where for some shaders lots of unnessessary glUniformLocations where executed\r\n- core: change/fix handling of setting \"undefined\" values to ports, are converted to \"null\" now\r\n- core: fix bug with meshes with huge number of triangles did not render correctly in some cases\r\n- core: fix bugs with binding/unbinding textures\r\n- core: fix bugs with shaders as variables would not save the patch anymore in some cases\r\n- core: fix overwriting native String.endsWith() function\r\n- core: preparing for WebGPU\r\n\r\n#### Renamed Ops\r\n\r\n- deprecated op: Sampleplayer\r\n- deprecated op: Pickingmaterial\r\n- deprecated op: Soundcloud op\r\n- deprecated op: Array.RandomNumbersArray3\r\n- deprecated op: Array.RandomNumbersArray4\r\n- deprecated op: Objectiterate\r\n\r\n- rename op: TextureFromColorArray to ArrayToTexture\r\n- rename op: Array.RandomArrays to Ops.Array.RandomNumbersArray_v4\r\n- rename op: Patch.CallBack -> Ops.Cables.CallBack\r\n- rename op: Patch.PlayButton -> Ops.Html.PlayButton\r\n- rename op: Patch.LoadingStatus -> Ops.Cables.LoadingStatus\r\n- rename op: Patch.Function -> Ops.Cables.Function\r\n- rename op: Values.FreezeArray to Ops.ArraysFreezeArray\r\n- rename op: Values.FreezeNumber to Ops.Value.FreezeNumber\r\n- rename op: Values.SequenceNumbers to Ops.Value.SequenceNumbers\r\n- rename op: Values.SequenceStrings to Ops.String.SequenceStrings\r\n- rename op: Values.FreezeString to Ops.String.FreezeString\r\n- rename op: Values.SequenceObjects to Ops.Json.SequenceObjects\r\n- rename op: Gl.TextureEffects.ColorMapRange to Ops.Gl.TextureEffects.Math.ColorMapRange\r\n- rename op: Gl.TextureEffect.RgbeToFloat32Texture to Ops.Gl.Math.TextureEffects.RgbeToFloat32Texture\r\n- rename op: Gl.Meshes.TriangleArray_v2 - to: Ops.Graphics.Geometry.TriangleArrayToGeometry\r\n- rename op: Gl.TesselateGeometry - to: Ops.Graphics.Geometry.TesselateGeometry\r\n- rename op: Gl.Geometry.AlignGeometry - to: Ops.Graphics.Geometry.AlignGeometry\r\n- rename op: Gl.Geometry.DivideGeometry - to: Ops.Graphics.Geometry.DivideGeometry\r\n- rename op: Gl.Geometry.GeometryInfo - to: Ops.Graphics.Geometry.GeometryInfo\r\n- rename op: Gl.Geometry.GeometryExtrude - to: Ops.Graphics.Geometry.GeometryExtrude\r\n- rename op: Gl.Geometry.FreezeMeshes - to: Ops.Graphics.Geometry.FreezeMeshes\r\n- rename op: Gl.Geometry.GeometryMerge - to: Ops.Graphics.Geometry.GeometryMerge\r\n- rename op: Gl.Geometry.GeometryPoints - to: Ops.Graphics.Geometry.GeometryAttributes\r\n- rename op: Gl.Geometry.GeometryToObj - to: Ops.Graphics.Geometry.GeometryToObj\r\n- rename op: Gl.Geometry.SortGeometryAxis - to: Ops.Graphics.Geometry.SortGeometryAxis\r\n- rename op: Gl.Geometry.ScaleGeometry - to: Ops.Graphics.Geometry.ScaleGeometry\r\n- rename op: Gl.Geometry.ReverseVertices - to: Ops.Graphics.Geometry.ReverseVertices\r\n- rename op: Gl.Geometry.GeometryUnIndex - to: Ops.Graphics.Geometry.GeometryUnIndex\r\n- rename op: Gl.Geometry.SvgPathToGeometry_v2 - to: Ops.Graphics.Geometry.SvgPathToGeometry_v2\r\n- rename op: Gl.Geometry.TransformGeometry - to: Ops.Graphics.Geometry.TransformGeometry\r\n- rename op: Gl.RandomizeTriangles - to: Ops.Graphics.Geometry.RandomizeTriangles\r\n- rename op: Geometry.BoundingBox - to: Ops.Graphics.Geometry.BoundingBox\r\n- rename op: Geometry.CalculateNormals - to: Ops.Graphics.Geometry.CalculateNormals\r\n- rename op: Geometry.GeometryToWireframeArray3 - to: Ops.Graphics.Geometry.GeometryToWireframeArray3\r\n- rename op: Geometry.Triangulate2dPath - to: Ops.Graphics.Geometry.Triangulate2dPath\r\n- rename op: getProjectonMatrix to getProjectionMatrix\r\n- rename op: Array.ParseArray_v2 to Ops.Array.StringToArray\r\n- rename op: Sequence to Ops.Trigger.Sequence\r\n\r\n\r\n#### Docs\r\n\r\n- docs: add section about dev.cables.gl to docs\r\n- docs: add section about uploading libraries to patches and use them\r\n- docs: add section about permissions to patches, teams, ops and in multiplayer\r\n\r\n#### Export\r\n\r\n- export: add link to https://cables.gl/support to credits.txt\r\n- export: add webdemoexe export option\r\n- export: remove duplicate entries for variables from \r\n- export: removed a lot of useless data from export and ops, reduce filesize\r\n- export: show fxhash appreciation message in export window when using fxhash op\r\n- export: add export number to exported json and patch log entry\r\n\r\n- cables-cli: added option to export op-code for (multiple) patches\r\n- cables-cli: removed netlify-deploy functionality, use cables editor export\r\n",
            "date": 1685963916934,
            "youtubeid": ""
        },
        {
            "text": "#### Op Enhancements:\r\n\r\n- op enhancement: Ops.Array.ParseArray_v2 - add option to \"split newlines\"\r\n- op enhancement: Ops.Game.PersonController - fix mixup of input and output ports\r\n- op enhancement: Ops.Gl.Meshes.Rectangle_v3 - still trigger next when not active\r\n- op enhancement: Ops.Gl.PixelProjection - fix bug where it was not internally updating viewport resolution\r\n- op enhancement: Ops.Gl.Textures.CopyTexture - bugfix where it wrongly switched to an empty texture\r\n- op enhancement: Ops.Gl.ShaderEffects.Render2TexturesSlots_v2 - upgraded to new shadermodifier system \r\n- op enhancement: Ops.Gl.ShaderEffects.Render2TexturesSlots_v2 - no longer only a boolean, you can not select different options of what to render into which texture\r\n- op enhancement: Ops.Gl.Shader.ShaderInfo - outputs for current frag and vert source code\r\n- op enhancement: Ops.Libs.Lottie.LottieSVGPlayer - read loop setting also from numbers, not strict bool only\r\n- op enhancement: Ops.Sidebar.TextInput_v2 - clear trigger input\r\n- op enhancement: Ops.Sidebar.TextInput_v2 - switchable type text/password\r\n\r\n#### Editor / UI\r\n\r\n- editor: added new command \"add op by name\", which can also be used to create deprecated or old ops\r\n- editor: better highlighting of errors in shadercode\r\n- editor: error dialog now shows link to github for reporting problems\r\n- editor: fix updating ops to new version in subpatches\r\n- editor: fix \"you do not own this patch\" always displayed in example patches\r\n\r\n\r\n#### Website\r\n\r\n- website: fix op overview page for old and deprecated ops, add extensions\r\n- website: fix warning/info for old version of extension-ops on oppage\r\n",
            "date": 1671442517206,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops:\r\n\r\n- new op: Ops.Arrays.ArrayToArrays - splits an array up into an array of arrays\r\n- new op: Ops.Gl.TextureEffects.PixelColor - fill image with one color picked at a position\r\n- new op: Ops.Gl.Shader.PositionAsColorMaterial - draw mehes using XYZ position coordinates as RGB color \r\n- new op: Ops.Array.PointArray.CircularPoints - create arrays for circular shapes, helix,circle etc\r\n- new op: Ops.Gl.LayerSequence - todo:UPDATE 2D TEMPLATE!\r\n- new op: Ops.Graphics.Geometry.ObjGeometry - parse an obj string to a geometry object\r\n- new op: Ops.Gl.TextureEffects.Math.RgbTransform - transform RGB values interpreted as XYZ coordinates\r\n- new op: Ops.Array.Array3Sum - add number to every XYZ member of array3x\r\n- new op: Ops.Math.MulMatrixXyz - multiply XYZ values with a gl matrix vec3 x mat4\r\n- new op: Ops.TimeLine.TimeLineLength - current set length of the timeline\r\n- new op: Ops.Html.MarkdownToHtml - markdown markup language to html parser\r\n- new op: Ops.Extension.ReactionDiffusion.ReactionDiffusionSystem_v2 - new version: better and optimized reaction diffusion system\r\n\r\n#### Op Enhancements:\r\n\r\n- op enhancement: Ops.Gl.Shader.AttributeAsColorMaterial - added texture coordinate input toggle\r\n- op enhancement: Ops.Devices.Mouse.MouseDrag - added area option for canvas \"parent\" element\r\n- op enhancement: Ops.Devices.Mouse_v3 - add normalization switch: more normalizing options\r\n- op enhancement: Ops.Gl.Perspective - add option to switch axis vertical/horizontal field of view\r\n- op enhancement: Ops.Gl.Matrix.ScreenPosTo3d_v3 - switch for normalized input values\r\n- op enhancement: Ops.Boolean.ToggleBool_v2 - also output default value on patch load\r\n- op enhancement: Ops.Math.TriggerRandomNumber_v2 - fix infinite loop bug, when activated no dupes and min max is the same number\r\n- op enhancement: Ops.Html.WindowInfo - added output, detect if patch is opened in an iframe or not\r\n- op enhancement: Ops.Gl.Textures.VideoTexture_v3 - new output port: shows if user interaction is needed to start\r\n- op enhancement: Ops.Gl.Textures.VideoTexture_v3 - now needs to be triggered to update\r\n- op enhancement: Ops.Gl.Textures.VideoTexture_v3 - show user interaction button to start like audio output op\r\n- op enhancement: Ops.Gl.Meshes.Star - z position for peaks\r\n- op enhancement: Ops.Gl.Meshes.Rectangle_v3 - tangents fixed/geom not output if not linked/renamed active to \"render\" etc\r\n- op enhancement: Ops.Ui.VizTexture - now also uses cubemaps alpha channel\r\n- op enhancement: Ops.Html.WindowInfo - add absolute scroll-height of body\r\n- op enhancement: Ops.Array.Array3RandomSelection - fixed random seed behaviour \r\n- op enhancement: Ops.Array.ReduceArray3_v3 - add methods to remove random points by threshold and duplicate points\r\n- op enhancement: Ops.Gl.Meshes.TriangleArray_v2 - fix bug with not updating in some cases\r\n- op enhancement: Ops.Gl.ShowNormals_v2 - output geometry/toggle if it is rendering itself\r\n- op enhancement: Ops.Ui.VizStringLong - added scroll slider /  performance optimization for very long strings\r\n- op enhancement: Ops.Devices.Midi.MidiNote - learned input parameter are transfered to remote viewer\r\n- op enhancement: Ops.Devices.Midi.MidiCC - learned input parameter are transfered to remote viewer\r\n- op enhancement: Ops.Devices.Midi.MidiNoteFilter - learned input parameter are transfered to remote viewer / refresh parameter when changing notes etc. fixed an infitnite loop problem,\r\n- op enhancement: Ops.Devices.Keyboard.KeyPressLearn - learned input parameter are transfered to remote viewer\r\n- op enhancement: Ops.Ui.VizStringLong - fix bug where linenumbers would overlap with text\r\n- op enhancement: Ops.Gl.Matrix.GetProjectonMatrix - fix bug, was using a reference, not a copy of the projectionmatrix\r\n- op enhancement: Ops.Gl.Textures.WebcamTexture_v3 - now only asks for permission if \"active\"-port is enables\r\n- op enhancement: Ops.Ui.VizStringLong - visualize there is more content to scroll to by fading out the first/last line\r\n- op enhancement: Ops.Ui.VizArrayTable - visualize there is more content to scroll to by fading out the first/last line\r\n- op enhancement: Ops.Devices.Mouse.Mouse_v3 - cleanup op ports and remove stuff thats mostly not used/better default values\r\n- op enhancement: Ops.Gl.Pbr.PbrEnvironmentLight - added workaround for amd cards where cubemaps were rendered wrong, because of clearColor\r\n- op enhancement: Ops.Array.FillArrayRandomDuplicates_v2 - array now has the correct length / no trigger required anymore to generate\r\n- op enhancement: Ops.Physics.Ammo.AmmoWorld: option to turn off automatic removal of bodies from inactive cables nodes\r\n- op enhancement: Ops.WebXr.Vr.VrController - now correctly registers all button interactions \r\n- op enhancemeht: Ops.Ui.VizObject - now shows if it can not stringify an object, has more alternative ways to show them\r\n- op enhancemeht: Ops.Ui.VizObject - show class name in op extended title\r\n- op enhancemeht: Ops.Ui.VizTextureTable - performance optimized: only read pixels that will be shown / update less often / start at top left pixel of texture\r\n- op enhancement: Ops.Gl.Meshes.Rectangle_v3 - fixed tangents/bitangents - works now with pbrmaterial+heightmaps etc. as expected\r\n- op enhancement: Ops.Gl.MediaRecorder - write correct error message to output port\r\n- op enhancement: Ops.Html.PlayerControlPanel_v2 - fix states and add visible boolean\r\n- op enhancement: Ops.Html.PlayerControlPanel_v2 - add \"is playing\" in-port, add outports for dragging\r\n- op enhancement: Ops.Ui.SubPatch - fix non-connected ports to PatchOutput when creating subpatches\r\n- op enhancement: Ops.String.Split_v2 - warn if input contains stings and \"number\" checked, make output behave the same as Ops.Array.ParseArray_v2\r\n\r\n- op enhancement: subpatches: fix a bug when copy pasting patchoutput op it would not continue to trigger to the outside\r\n- op enhancement: geometries: geometry merging: keeping correct normals and handling indexed vs unindexed meshes\r\n- op enhancement: stride independent array ops now can copy over the stride info from previous op\r\n- op enhancement: object get string/number/object ops now do work with more js object types\r\n- op enhancement: unset object outputs are now always null by default\r\n\r\n\r\n#### Editor / UI\r\n\r\n- editor: 2d template now uses LayeredSequence and not depthTest ops\r\n- editor: introduce \"extensions\" that can be added to patches as collections of ops that will be loaded on demand\r\n- editor: dragging a port onto a link reroutes the link\r\n- editor: you can copy paste images directly into the editor and they will be uploaded as files\r\n- editor: command pallete: dynamic, new context related commands, like jump to bookmarks, editor tabs, subpatches, canvas elements etc...\r\n- editor: middle mouse quicklinking\r\n- editor: all ports can now be set as an extended title, it will show port name and value next to the op title \r\n- editor: \"attention\" sign icon will show up in grey if outdated ops exist in patch\r\n- editor: op search dialog: op gets negative points, if there are no fitting ports to dragged port or active link\r\n- editor: op search dialog: op gets bonus if the first port fits the current dragged port or active link\r\n- editor: improved patchfield font rendering when font is displayed very small\r\n- editor: fix bug where text-editor was not resized correctly after window resize\r\n- editor: fix bug where canvas bottom ui panel was not positioned correctly\r\n- editor: show an error message, if browser does not fullfill requirements to run cables in some special cases\r\n- editor: greatly improved patch background mode \r\n- editor: in patch background mode, you can press shift+enter to hide patchfield\r\n- editor: canvas icon info bar: button to switch between multiple renderer canvasses\r\n- editor: more math sign ops\r\n- editor: fix bug in some cases moving ops, their cables left some residue on the patchfield\r\n- editor: fix bug in some cases ops jumped away when starting to drag or just clicking\r\n- editor: better syntax highlighting in json inspect\r\n- editor: better syntax highlighting in glsl error dialogs\r\n- editor: removed .obj file to old json3d format converter\r\n- editor: fix bug where button on cables was centered/flickering in some situations\r\n- editor: in safari don't use pointerlock feature\r\n- editor: port suggestion dialogs and op doc page show overwritten port title uiattrib\r\n- editor: when editing and saving an op, that is used multiple times, last one clicked will again be shown/selected after saving\r\n- editor: fix: in some cases pressing \"x\" was not disconnecting all cables\r\n- editor: fix bug where dragging an asset from the filemanager was creating an op in wrong subpatch\r\n- editor: filemanager does not cache images anymore \r\n\r\n- editor: fix \"sourcemap missing\" warnings on cables.gl\r\n- editor: always show patchinfo in parampanel in example patches\r\n- editor: fix \"userops not shown\" displaying wrongly in opsearch\r\n- editor: open editor only for string-editor ports when pressing \"shift-e\"\r\n- editor: show right mousebutton icons in info-area\r\n- editor: fix linebreaks in port-inspect window for strings\r\n- editor: fix bug where default value of variables was set wrongly when changing via dropdown\r\n- editor: remove unused and duplicated qrcode library\r\n- editor: remove meshseq converter\r\n- editor: load deprecated/old ops only on demand in editor, reduce loading time and size\r\n- editor: fix patch pause/resume from command pallete (ctrl-p)\r\n- editor: copy over tags and description when cloning a patch\r\n- editor: fix LocationHash changes not being read in editor\r\n- editor: add \"external assets\" to find options, add command to find ops using external assets\r\n- editor: send errorreports automatically on dev.cables.gl\r\n\r\n#### Editor: Texture Preview\r\n\r\n- editor: texture preview overlay is now click through and does not stop interacting with the patchfield\r\n- editor: texture preview can be minimized and its remembered after reload\r\n- editor: texture preview can be set to half transparent\r\n- editor: texture preview shows resolution \r\n\r\n#### Editor: Timeline\r\n\r\n- editor: timeline: fix cursor has correct position when zooming with mousewheel\r\n- editor: timeline: fix bugs with rewind/foward buttons being offsetted\r\n- editor: quicklinking via middle mouse button from op to op\r\n- editor: see through ops if cables are run below op\r\n\r\n\r\n#### Website\r\n\r\n- web: visual unit testing improved a lot\r\n- web: update browser detection lib for /browser\r\n- web: redirect old version of op-page to newest version for bots/anonymous users\r\n- web: add only newest version of op to sitemap.xml\r\n- web: remove unused and duplicate qrcode library\r\n- web: fix display of wrong state for \"request access\" button on patchpage\r\n- web: fix bug with lost \"summary\" on op-page when cloning ops from core\r\n- web: only load needed op-code on patchpage\r\n- web: fix bug on patchpage where assets would not be loaded when location-hash ist given\r\n- web: allow to link mastodon profile on account settings page\r\n- web: show warning when visiting patchpage of a patch that uses ops in the Dev namespace\r\n\r\n\r\n#### Misc\r\n\r\n- blog: make new mobile navigation work on blog as well\r\n- cables-cli: add option to export without subdirectories\r\n\r\n#### Op Renaming / Deprecating\r\n\r\n- renamed: Gl.CalculateNormals to Ops.Geometry.CalculateNormals\r\n- renamed: Gl.TextureEffects.PaletteTexture to Ops.Gl.Textures.PaletteTexture\r\n- renamed: Gl.TextureEffects.RGBMath to Ops.Gl.TextureEffects.Math.RgbMath\r\n- renamed: Gl.Textures.Float32ToRgbeTexture to Ops.Gl.TextureEffects.Float32ToRgbeTexture\r\n- renamed: Mesh.Triangulate2dPath to Ops.Geometry.Triangulate2dPath\r\n- renamed: ReactionDiffusionSystem op to Ops.Extension.ReactionDiffusion.ReactionDiffusionSystem\r\n- renamed: ShowNormalsMaterial to Ops.Gl.Shader.AttributeAsColorMaterial\r\n- renamed: Value.DelayedValue to Ops.Value.DelayeNumber\r\n- renamed: Value.DelayedValue to Ops.Value.DelayNumber\r\n- renamed: Value.DelayedValueSimple to Ops.Value.DelayNumberSimple\r\n- renamed: Devices.OSC to Extension.Osc\r\n- renamed: Libs.ECharts to Extension.ECharts\r\n- renamed: Libs.TeachableMachines to Extension.TeachableMachines\r\n- renamed: Net.SocketCluster to Extension.SocketCluster\r\n- deprecated: CircleTransform - use Ops.Array.PointArray.CircularPoints\r\n- deprecated: Gl.MorphGeometries - use Ops.Gl.MeshMorph\r\n- deprecated: Anim.RelativeTime - use Ops.Anim.Timer_v2\r\n- deprecated: Api.Ifttt.IftttTrigger - outdated\r\n- deprecated: cannon physic ops - use Ops.Physics.Ammo\r\n- deprecated: Deprecated.Math.Max2 - use Ops.Math.Max\r\n- deprecated: Gl.Array3ToTexture - use: Ops.Gl.TextureFromColorArray\r\n- deprecated: Gl.Shader.TextureLookupColorMaterial\r\n- deprecated: Gl.ShaderEffects.Bulge\r\n- deprecated: InteractionListener - outdated\r\n- deprecated: Json.ObjectRelay - use Ops.Json.GateObject\r\n- deprecated: mqtt ops - outdated\r\n- deprecated: ObjectChanged - use Ops.Trigger.TriggerOnChangeObject\r\n- deprecated: ShowTexCoordsMaterial - use new Ops.Gl.Shader.AttributeAsColorMaterial\r\n- deprecated: String.HashIdDecode - outdated\r\n- deprecated: String.HashIdEncode - outdated\r\n- deprecated: String.Split_v2 - use Ops.Array.ParseArray_v2\r\n- deprecated: String.StringNew2Old - not needed anymore\r\n- deprecated: String.StringOld2New - not needed anymore\r\n- deprecated: WebAudio.Scale.ChordTriad - outdated/not usable\r\n\r\n",
            "date": 1671010119011,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops:\r\n\r\n- new op: Ops.Array.ArrayChunkDuplicate - repeat chunks of an array multiple times\r\n- new op: Ops.Array.ArrayMathExpressionTrigger - Calculates a user defined mathematical expression\r\n- new op: Ops.Browser.JsMemory - browser js memory consumption information\r\n- new op: Ops.Gl.Geometry.FreezeMeshes -  capture all following meshes into one geometry \r\n- new op: Ops.Gl.Geometry.GeometryToObj - Generate an .obj file as string from a geometry \r\n- new op: Ops.Gl.Shader.SetUniformFloat_v2 -  set a uniform number value of the current shader \r\n- new op: Ops.Gl.Shader.SetUniformTexture - set a uniform texture of the current shader \r\n- new op: Ops.Gl.ShaderEffects.ModuloVertexPosition - vertex shader modulo operation on vertex position \r\n- new op: Ops.Html.PlayerControlPanel_v2 - html player controls to be used with mediaplayers\r\n- new op: Ops.Math.TriggerMathExpression - calculates a user defined mathematical expression\r\n- new op: Ops.Ui.VizArrayChart - Displays information of the distribution of numerical values in an array\r\n- new op: Ops.Ui.VizStringLong - Displays long input string on the patchfield\r\n- new op: Ops.WebXr.Vr.Vr - rendering on webxr virtual reality immersive devices\r\n- new op: Ops.WebXr.Vr.VrController - tracking of vr hand controller\r\n\r\n#### Op Enhancements:\r\n\r\n- op enhancement: Ops.Array.ArrayFromNumbers - greyout numbers that are out of the limit\r\n- op enhancement: Ops.Array.ArrayFromNumbers - toggle slider input for numbers\r\n- op enhancement: Ops.Array.SubdivideArray3_v2 - added loop toggle, for smoothing closed shapes\r\n- op enhancement: Ops.Array.SubdivideArray3_v2 - subdiv of 0 should return original array\r\n- op enhancement: Ops.Debug.Console - fix bugs after removal, console output looks like intended etc\r\n- op enhancement: Ops.Gl.CanvasFocus - add trigger to focus canvas\r\n- op enhancement: Ops.Gl.CubeMap.RenderToCubemap_v2 - add option for 32bit cubemap textures\r\n- op enhancement: Ops.Gl.CubeMap.CubemapToEquirectangularTexture_v2 - many fixes, also can now output RGBE encoded equirectangular projection\r\n- op enhancement: Ops.Gl.CubeMap.Skybox - add type texture to input port for suggestions\r\n- op enhancement: Ops.Gl.GLTF.GltfNodeTransforms_v2 - fix gltf-space select\r\n- op enhancement: Ops.Gl.GLTF.GltfNodeTransforms_v2 - scale array output now contains animated scale values if available\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - set default values for roughness/metalness/baseColor correctly\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - fix problems that where happening when stacking gltfscenes into each other\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - show a gizmo icon if the node has transformations, hover to see numbers\r\n- op enhancement: Ops.Gl.GLTF.GltfVertexAnim - fix crash when changing/editing nodename to a nonexisting node\r\n- op enhancement: Ops.Gl.GradientTexture - add \"randomize colors\" trigger\r\n- op enhancement: Ops.Gl.LineFont_v2 - fixed invalid null elements in output array\r\n- op enhancement: Ops.Gl.MainLoop - fix wrong greyout of pixel unit parameter\r\n- op enhancement: Ops.Gl.Matrix.ArrayPathFollowParticles_v2 - add warning if not below a pointmaterial\r\n- op enhancement: Ops.Gl.MeshMorph - fix crash on missing corelib\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - can use shadereffects now to modify vertex positions\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - added automatic size option\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - added texture empty pixels now on bottom\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - only recalculating when geometry was changed\r\n- op enhancement: Ops.Gl.Meshes.GeometryToTexture_v2 - option to sort by axis\r\n- op enhancement: Ops.Gl.Meshes.MeshInstancerFromTexture_v2 - added texturecoords texture input port\r\n- op enhancement: Ops.Gl.Meshes.MeshInstancerFromTexture_v2 - got rid of gl console warnings / optimized memory consumption\r\n- op enhancement: Ops.Gl.Meshes.PointCloudFromArray - fix performance problem when updating vertex colors often\r\n- op enhancement: Ops.Gl.Meshes.PointCloudFromTexture - fix webgl console warning\r\n- op enhancement: Ops.Gl.Meshes.TriangleArray_v2 - add vertexcolors, texture coordinates and ability to not render the mesh\r\n- op enhancement: Ops.Gl.Orthogonal_v2 - added option to no fixed axis mode\r\n- op enhancement: Ops.Gl.Pbr.PbrMaterial - fix bug in structure view where sometimes Material was shown as \"none\"\r\n- op enhancement: Ops.Gl.Pbr.PbrMaterial - fix crash when using with ambientlight \r\n- op enhancement: Ops.Gl.Pbr.PbrMaterial - if no light is configured, it will use a default simple pointlight setup and show a warning\r\n- op enhancement: Ops.Gl.Pbr.PbrMaterial - show only warning if using default light\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - fix issue with customshader not using textures on gltf meshes\r\n- op enhancement: Ops.Gl.ShaderEffects.AreaRotate_v2 - fix crash on missing corelib\r\n- op enhancement: Ops.Gl.ShaderEffects.AreaScaler_v3 - add missing shadermodifier corelib\r\n- op enhancement: Ops.Gl.ShaderEffects.ClampVertexPosition_v2 - internal compatibility update\r\n- op enhancement: Ops.Gl.ShaderEffects.DiscardMaterialAlpha - added alpha to coverage, sharpened alpha to coverage and dither alpha modes\r\n- op enhancement: Ops.Gl.ShaderEffects.FresnelGlow - fix crash when using Fresnel twice in the same render branch\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedDisplacementMap_v2 - apply strength parameter in rotation mode\r\n- op enhancement: Ops.Gl.ShaderEffects.TextureProjection_v2 - added more blendmodes \r\n- op enhancement: Ops.Gl.ShaderEffects.TextureProjection_v2 - added texture coordinate channels as mappings\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v4 - added option to displace geometry with vertex colors\r\n- op enhancement: Ops.Gl.TextureEffects.ColorMapRange - fixed editor crash when entering unknown mesh name\r\n- op enhancement: Ops.Gl.TextureEffects.ColorMapRange - set channel defines on op load, read default values\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.Voronoise_v2 - change default \"num\" value to 20 to reflect shader default value\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.WorleyNoise_v2 - rename \"Amount Map\" to \"Strength Map\" in editor\r\n- op enhancement: Ops.Gl.TextureEffects.WaveformGradient_v4 - new version does not create transparent pixels, just black and white\r\n- op enhancement: Ops.Gl.Textures.CombineTextures - add 32bit format \r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - texture wrap mode switch\r\n- op enhancement: Ops.Json.AjaxRequest_v2 - set output ports to \"null\" on request error\r\n- op enhancement: Ops.Libs.Mediapipe.MpPoseTracking - outputs segmentation mask texture\r\n- op enhancement: Ops.Math.TriggerRandomNumber_v2 - add option to not have consecutive duplicate integer numbers\r\n- op enhancement: Ops.Net.WebSocket.WebSocket_v2 - output raw message, add uierrors on invalid json and connection error\r\n- op enhancement: Ops.Patch.LoadingStatus_v2 - pause timeline on load if \"play timeline\" is unchecked\r\n- op enhancement: Ops.Physics.Ammo.AmmoBody - array input for creating multiple bodies at once\r\n- op enhancement: Ops.Physics.Ammo.AmmoBody - change default radius to 0.5 to reflect default of sphere\r\n- op enhancement: Ops.Physics.Ammo.AmmoBody - new shape: \"Triangle Mesh\" - triangle exact collisions for low poly meshes\r\n- op enhancement: Ops.Physics.Ammo.AmmoBodyCollision - get ammo collisions with exact/start/contains matching\r\n- op enhancement: Ops.Physics.Ammo.AmmoCharacter - set default position where character is positioned after triggering reset\r\n- op enhancement: Ops.Physics.Ammo.AmmoEmitter - add option to control index appended to body name\r\n- op enhancement: Ops.Physics.Ammo.AmmoRaycast - add output of hit xyz positions\r\n- op enhancement: Ops.Physics.Ammo.AmmoWorld - active toggle removes/adds bodies into the world\r\n- op enhancement: Ops.Physics.Ammo.AmmoWorld - add output of all current collisions in the scene\r\n- op enhancement: Ops.String.StringEditor - add inline css option to dropdown of styles\r\n- op enhancement: Ops.String.StringEditor - add sql mode to editor-syntax-dropdown\r\n- op enhancement: Ops.TimeLine.TimeLinePlay - add trigger to pause timeline\r\n- op enhancement: Ops.Trigger.TriggerOnChangeTexture - toggle to ignore default/empty texture\r\n- op enhancement: Ops.Ui.SubPatch - save manually entered values for in-ports\r\n- op enhancement: Ops.Ui.VizLogger - add \"clear\" trigger to empty log\r\n- op enhancement: Ops.Ui.VizTexture - draw dark border around it, so you can see the boundings of transparent texture\r\n- op enhancement: Ops.Ui.VizTexture - toggle to show texture infos in preview \r\n- op enhancement: Ops.WebAudio.AudioRecorder - add data-url output\r\n- op enhancement: Ops.WebAudio.TextToSpeech.Say_v2 - fix voices selection dropdowns\r\n- renamed: move browser api stuff into Ops.Browser namespace, e.g. browserinfo/webshare etc\r\n- renamed: CubeMapCamera op to Ops.Gl.CubeMap.RenderToCubemap\r\n- renamed: deprecated old webvr ops\r\n- renamed: cleaned up duplicate Ops.Json.ObjectStringify_v2 ops\r\n- renamed: SetUniformValue to SetUniformFloat\r\n- renamed: TimeLineUI to Ops.Html.PlayerControlPanel_v2\r\n- renamed: deprecated CustomTextureEffectShader\r\n\r\n#### Website:\r\n\r\n- web: accept/decline requests for collaboration rights, decide between \"full access\" and \"read only\"\r\n- web: allow to leave projects from accepted invitations on invites page\r\n- web: better layout for invite page\r\n- web: do not show past accepted invitations for patches that i no longer am a collaborator in\r\n- web: fix nav overlapping on quest 2 browser\r\n- web: fix qr-code size on mobile patchpage\r\n- web: fix userop deletion button on op-page\r\n- web: fix wrong owner username display in project overviews\r\n- web: made with cables updates (https://cables.gl/made-with-cables)\r\n- web: make /view/ (\"open in new window\") work with secret url\r\n- web: pagination for \"made with cables\" page\r\n- web: pagination for changelog page\r\n- web: red bubble with invites/requests is now clickable\r\n- web: request collaboration rights for patch on patch page\r\n- web: revoke pending invitations in patchsettings\r\n- web: revoke pending team invitations on teamsettings page\r\n- web: show \"open in editor\" button on patchpage for teammembers\r\n- web: show last change date on /mypatches when sorting by it\r\n- web: show pending access requests in patchsettings\r\n- web: teaser for discord/meetup/github\r\n\r\n#### Core:\r\n\r\n- core: cgl shader: in/out attribute automatic management, shader mods can define optional attributes\r\n\r\n#### Editor/UI:\r\n\r\n- editor: add \"trigger variable\" to suggestions when dragging out-port\r\n- editor: add autosuggest to inline-css/css mode\r\n- editor: add fuse.js library for fuzzy search, can be used in userops now\r\n- editor: add sql mode to code editor\r\n- editor: added U keyboard shortcut to go up a level in the subpatch hierarchy\r\n- editor: allow for export without subdirectory\r\n- editor: build electron on cables servers, remove github requirement\r\n- editor: configure permissions on patch for collaborators (\"full access\" and \"read only\")\r\n- editor: default skip backup json in export, add option\r\n- editor: do not draw helper if framebuffer resolution is not of the native aspect ratio, to prevent stretched helper renderings\r\n- editor: dragging ops snap visually to x positions of existing groups of vertical stacked ops\r\n- editor: export patch does not contain \"made with cables\" anymore, please still credit and link us somewhere\r\n- editor: faster param panel html rendering\r\n- editor: fix bug when using \"existing variable\" on out-port would create getter\r\n- editor: fix bug where ctrl+s saves the op when pressing immediately after minimizing editor\r\n- editor: fix bug where ctrl+s would not save the patch if specific html elements where focussed\r\n- editor: fix bug where error/warning dots disappeared from ops after saving the patch\r\n- editor: fix bug where on some focussed html elements play/pause of timeline did not work\r\n- editor: fix crash when opname somehow became \"null\", default to empty string\r\n- editor: fix ops that force themselves to be set as active op and rerender parampanel \r\n- editor: fix port dragging line length was to short sometimes\r\n- editor: fix timeline selection rectangle not showing\r\n- editor: fix/change license information for cannon.js library\r\n- editor: handle errors (no permission, project not found, ...) properly in all exports\r\n- editor: hide leftovers of transform gizmo on patchload that appeared sometimes\r\n- editor: op search dialog sup- editor: fix bug in subpatch-list where order of children was not always correct\r\n- editor: port.isLinked() also returns true if assigned to variable or is animated \r\n- editor: remove delay of space to play/pause timeline on elements other than the patchfield\r\n- editor: remove namespace-name warning for userops\r\n- editor: remove urls from export json if exported\r\n- editor: remove wrongly displayed errors in editor-tabs when using inline css\r\n- editor: revoke pending invitations in patchsettings\r\n- editor: searching for ops: when dragging cables or inserting into existing ones: ops in same namespace are ranked higherports basic math functions shortcuts: +-/*\r\n- editor: send invitations with \"read only\" permissions form collaboration tab\r\n- editor: shift+A: improved automatic ordering of ops, improved handling trees and branches of ops, better solving overlapping ops\r\n- editor: show if op needs to be linked on certain ports, or needs parent to be able to work correctly\r\n- editor: show pending access requests in patchsettings\r\n- editor: skip empty descriptions in keyboard shortcuts list\r\n- editor: support for .jxl file format\r\n- editor: texturepreview will show animated stripes if a color channel is >1.0 or <0.0\"\r\n- editor: vertical compress ops working better\r\n- editor: z-index of canvas is not 0 in editor, so it is the same as in exported patches\r\n\r\n#### Docs:\r\n\r\n- docs: add section on patch permissions (https://cables.gl/docs/faq/patch_permissions/patch_permissions)\r\n- docs: create new section on embedding patches (https://cables.gl/docs/4_export_embed/embedding/embedding)\r\n- docs: updated docs for exe-export and add explanation for exporting without subdirectories\r\n\r\n#### Misc:\r\n\r\n- cables-cli: fix deprecated dependencies, show better error messages (https://github.com/cables-gl/cables-cli)\r\n- cables-daplaya: updated electron, fixed osx build, added osx-notes to readme (https://github.com/cables-gl/cables-daplaya)\r\n",
            "date": 1665559958322,
            "youtubeid": ""
        },
        {
            "text": "#### Ops\r\n\r\n- op enhancements: Ops.Physics.Ammo.AmmoBody - fix bug where parameterpanel was flickering\r\n- op enhancements:  Ops.Gl.GLTF.GltfScene_v3 - now can load multiple channels of vertex colors, can be accessed in customshaders via attrVertColorX attributes\r\n- op enhancements:  Ops.Vars.VarSetTexture_v2 - fix slowdown because shader recompile in some cases when setting textures constantly\r\n- op enhancements: Ops.Gl.CubeMap.CubeMapMaterial_v2 - show warning if blur is used but  texture is not mipmaped \r\n- op enhancements: Ops.Gl.Geometry.SvgPathToGeometry_v2 - rescale now rescales the mesh width to the entered value \r\n- op enhancements: Ops.Gl.MainLoop - show warning if using multiple mainloops in a patch\r\n- op enhancements: Ops.Gl.Textures.CombineTextures - fix bug where texture was sometimes transparent, when using in a shadow branch\r\n- op enhancements: Ops.Ui.VizArrayTable - now also shows null/undefined/NaN \r\n- op enhancements: many ops that can have long input values/string dont show a warning anymore\r\n\r\n#### Editor/UI\r\n\r\n- editor: fix keyboard input in exe-exports\r\n- editor: fix when pasting op, select the pasted op and show its parameters, (not of the original op)\r\n- editor: remove export-option for older browsers compatibility, not needed anymore\r\n- editor: update ace-editor (code, css, ...) to newest version\r\n\r\n#### Website\r\n\r\n- website: https://cables.gl/browser browser check for webxr vr support\r\n- website: https://cables.gl/browser/speedtest speedtest fix calculations and change layout\r\n",
            "date": 1656575066520,
            "youtubeid": ""
        },
        {
            "text": "\r\n#### New Ops\r\n\r\n- new op: Ops.Gl.GLTF.GltfVertexAnim - play gltf vertex anim directly with its own timing\r\n- new op: Ops.Gl.GLTF.GltfGeometry - expose geometry from gltf meshes, also possible to expose submaterial geometries\r\n- new op: Ops.Array.EaseArray - apply easing curve to numbers in an array\r\n- new op: Ops.Gl.ShaderEffects.DiscardMaterialAlpha - discard transparent pixels in material textures\r\n- new op: Ops.Templates.ExampleVizOp - example how to code a viz layer op\r\n\r\n\r\n#### Op Enhancements\r\n\r\n- op enhancements: Ops.Ui.VizObject - if known shows object type in extended title \r\n- op enhancements: Ops.Gl.Shader.WireframeMaterial - now works with colorarea and other shader effects\r\n- op enhancements: Ops.Libs.Lottie.LottieSVGPlayer - can now switch to frame mode which renders a single frame by number input\r\n- op enhancements: Ops.Libs.Lottie.LottieSVGPlayer - output total number of frames of animation\r\n- op enhancements: Ops.Libs.Lottie.LottieTexturePlayer - rework timing interface etc.\r\n- op enhancements: Ops.Libs.Lottie.LottieTexturePlayer - fixed premultiplied alpha problems\r\n- op enhancements: Ops.Libs.Lottie.LottieTexturePlayer - output total number of frames of animation\r\n- op enhancements: Ops.Array.Array_v3 - reverse toggle / fix interpolation of ranges\r\n- op enhancements: Ops.Physics.Ammo.AmmoRaycast - can now work with two points in 3d space, so you can build rays not only with screencoordinates\r\n- op enhancements: Ops.Gl.TextureEffects.ImageCompose_v3 - background color input\r\n- op enhancements: Ops.Gl.Matrix.ArrayPathFollowParticles_v2 - fix bug where particles stopped moving when updating other shadermodifiers\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v3 - structure now shows mesh subgeometries and has an expose geometry button per subgeometry\r\n- op enhancements: Ops.Gl.ShaderEffects.FogEffect - now works with instanced meshes\r\n- op enhancements: Ops.Gl.TextureEffects.Gradient_v2 - srgb correction\r\n- op enhancements: Ops.Gl.TextureEffects.Gradient_v2 - oklab color space mode\r\n- op enhancements: Ops.Gl.GradientTexture - srgb correction\r\n- op enhancements: Ops.Gl.GradientTexture - oklab color space mode\r\n- op enhancements: Ops.Gl.TextureEffects.MultiDrawImage - shows warning when binding more textures than possible on gpu\r\n- op enhancements: Ops.Libs.TeachableMachines.PoseDetection_v2 - new version, works with new webcam op\r\n- op enhancements: Ops.Libs.TeachableMachines.ImageClassifier_v2 - new version, works with new webcam op\r\n- op enhancements: Ops.Devices.Midi.MidiValueToNote_v2 - new version, output note as proper string type\r\n- op enhancements: Ops.Gl.MeshInstancer_v4 - fix bug with hidden port for \"limit instances\"\r\n\r\n\r\n#### Editor / Ui\r\n\r\n- editor: fix dragging port title from parameter panel into patchfield\r\n- editor: switch to op meta tab on doubleclick\r\n- editor: cmd+, hotkey for patch settings\r\n- editor: dont show user ops in example patch\r\n- editor: remove sourcemap reference from libraries to minimize warnings \r\n- editor: fix editor ui elements showing on remote viewer\r\n- editor: multiplayer - show guest users currently in the patch for public patches - allow chat\r\n- editor: use proper patchname in \"clone patch\" after renaming the patch in settings\r\n\r\n#### Website\r\n\r\n- website: fix searching for usernames\r\n- website: fix pagination bug on op-page for userops\r\n- website: fix wrong link to userprofile on op-changelog\r\n- website: sort templates in patch-creation overlay by name\r\n- website: add test for webxr and webxr vr to /browser\r\n- website: favicon better work with both dark and bright themes\r\n\r\n\r\n#### Core \r\n\r\n- core: if texture size > max possible size, it will show the default stripes texture\r\n\r\n\r\n#### Renaming\r\n\r\n- Deprecated old WebVr Op\r\n- Deprecated old Lottie.Player Op\r\n- Moved Lottie ops to Ops.Libs.Lottie namespace \r\n- Moved TeachableMachines ops to Ops.Libs.TeachableMachines namespace \r\n\r\n",
            "date": 1655969274390,
            "youtubeid": ""
        },
        {
            "text": "#### new ops:\r\n\r\n- new op: Ops.Array.Array3To4 - Converts an array3 to an array4 by filling it up with 1\r\n- new op: Ops.Array.ArrayPack3Simple - Packs 3 individual arrays into an array3 - Without needing a trigger\r\n- new op: Ops.Array.ArrayPack4Simple - Packs 4 individual arrays into an array4 - Without needing a trigger\r\n- new op: Ops.Browser.WebShare - Opens a sharing dialog to share text and images\r\n- new op: Ops.Gl.Geometry.GeometryExtrude - Basic extrusion of flat geometry\r\n- new op: Ops.Gl.Geometry.ReverseVertices - Reverses the order of vertices in a geometry, back facing triangles become front facing ones\r\n- new op: Ops.Gl.Geometry.SvgPathToGeometry - Generate a geometry using from SVG path syntax\r\n- new op: Ops.Gl.ShaderEffects.TransformTextureCoordinates - Transform and repeat texture coordinates of a mesh via vertex shader\r\n- new op: Ops.Gl.TextureEffect.RgbeToFloat32Texture - Convert RGBE texture to a floating point texture\r\n- new op: Ops.Gl.TextureEffects.ColorMapRange - Map the range of color number values to another\r\n- new op: Ops.Gl.TextureEffects.ImageComposeAspectRatio - Adjust aspect ratio of an image compose branch\r\n- new op: Ops.Gl.TextureEffects.RgbToHsvTexture - Convert a RGB Texture to Hue/Saturation/Lightness values as RGB colors\r\n- new op: Ops.Gl.Textures.Float32ToRgbeTexture - Convert a Float32 bit/HDR texture to RGBE format\r\n- new op: Ops.Libs.OpenType.OpentypeFont - Load a font via opentype library\r\n- new op: Ops.Libs.OpenType.OpentypeToSvgPath - Generate a SVG path string of a string using an opentype font\r\n- new op: Ops.Libs.Trackingjs.TrackWebcamColor - Track a position of a specific color in the current webcam stream\r\n- new op: Ops.Math.SchlickBias - Custom easing curve via schlick bias and gain\r\n- new op: Ops.String.ArrayOfStrings - Create an array of strings and optionally attach index-number\r\n- new op: Ops.String.CopyToClipboard - Copy string to clipboard on trigger\r\n- new op: Ops.String.NumberFormatter - Uses javascript-native toLocaleString to format a number to a defined string/currency\r\n- new op: Ops.Api.FxHash.FxHash - FxHash simulator / generator of seeded random numbers\r\n\r\n#### New Ops: Viz\r\n\r\n- new op: Ops.Ui.VizArrayTable - Show The Contents Of The Input Array In A Table In The Patch\r\n- new op: Ops.Ui.VizBool - Visualize the state of a boolean output in the patch\r\n- new op: Ops.Ui.VizLogger - Log changes of input values line by line, use like a logfile for debugging\r\n- new op: Ops.Ui.VizNumberBar - Visualize numbers as a bar in patch, useful for debugging\r\n- new op: Ops.Ui.VizObject  - Show information about connected object \r\n- new op: Ops.Ui.VizTextureTable - Show pixel colors of connected texture\r\n\r\n#### New Ops: Mediapipe\r\n\r\n- new op: Ops.Libs.Mediapipe.FaceMesh - Generate an animated geometry from MpFace Point Coordinates\r\n- new op: Ops.Libs.Mediapipe.MpFaceTracking - Get face mesh from webcam\r\n- new op: Ops.Libs.Mediapipe.MpHandCoordinate - Get individual coordinates of fingers or wrist from an array of mediapipe data\r\n- new op: Ops.Libs.Mediapipe.MpHandTracking - Get points and lines for left/right hand from mediapipe\r\n- new op: Ops.Libs.Mediapipe.MpPoseGetCoordinate - Get coordinates of specific body parts from mediapipe data\r\n- new op: Ops.Libs.Mediapipe.MpPoseTracking - Get pose-data (points/landmarks/lines) from webcam \r\n\r\n#### New Ops: Ammo.js/Bullet Physics\r\n\r\n- new op: Ops.Physics.Ammo.AmmoBody - Create a physics body/collision shape using a any geometry or select a shape\r\n- new op: Ops.Physics.Ammo.AmmoBodyCollision - Check if two physic bodies are colliding\r\n- new op: Ops.Physics.Ammo.AmmoCharacter - Control and move a character in a physics environment\r\n- new op: Ops.Physics.Ammo.AmmoCharacterFpsCamera - First person camera to use with AmmoCharacter\r\n- new op: Ops.Physics.Ammo.AmmoDebugRenderer - Visualize the physical bodies as lines and points \r\n- new op: Ops.Physics.Ammo.AmmoRaycast - Cast a ray and detect colliding bodies\r\n- new op: Ops.Physics.Ammo.AmmoWorld - Simulate physical world\r\n- new op: Ops.Physics.Ammo.GltfAmmoBodies - Create physic bodies from a GLTF File\r\n\r\n#### Op Enhancements ImageCompose/TextureEffects\r\n\r\n- op enhancements: Many Ops.Gl.TextureEffects ops: New version to work with new transparency workflow \r\n- op enhancements: All generative Ops.Gl.TextureEffects ops: Added alpha mask toggle\r\n\r\n- op enhancements: Ops.Gl.TextureEffects.AlphaMask_v2 - Add combination methods and invert switch\r\n- op enhancements: Ops.Gl.TextureEffects.CheckerBoard_v2 - Square mode toggle / toggle auto aspect ratio\r\n- op enhancements: Ops.Gl.TextureEffects.CircleTexture_v4 - Also antialiased / added strech parameter per axis \r\n- op enhancements: Ops.Gl.TextureEffects.CircleTexture_v4 - Fix inner circle\r\n- op enhancements: Ops.Gl.TextureEffects.ImageCompose_v3 - Base image input port that will be copied and used as base layer when connected\r\n- op enhancements: Ops.Gl.TextureEffects.ImageCompose_v3 - Default transparent background\r\n- op enhancements: Ops.Gl.TextureEffects.Invert_v2 - Add invert toggle per colorchannel\r\n- op enhancements: Ops.Gl.TextureEffects.Kaleidoscope_v2 - Toggle auto aspect ratio\r\n- op enhancements: Ops.Gl.TextureEffects.Noise.HexagonNoise - Add aspect ratio toggle\r\n- op enhancements: Ops.Gl.TextureEffects.Noise.Noise - Added normalize checkbox\r\n- op enhancements: Ops.Gl.TextureEffects.Noise.PerlinNoise - Add r,g,b output channel selection options\r\n- op enhancements: Ops.Gl.TextureEffects.Noise.WorleyNoise_v2 - Fix aspect ratio / harmonics / offset map\r\n- op enhancements: Ops.Gl.TextureEffects.Plasma_v2 - Added aspect ratio fix toggle\r\n- op enhancements: Ops.Gl.TextureEffects.Plasma_v2 - Added offset and mask map inputs\r\n- op enhancements: Ops.Gl.TextureEffects.RectangleTexture_v4 - Alpha mask toggle, transparent background, position coordinates -1 to 1 \r\n- op enhancements: Ops.Gl.TextureEffects.RoundCorners - Added alpha value input\r\n- op enhancements: Ops.Gl.TextureEffects.Shapes2d_v2 - Change coordinate system -1 to 1\r\n- op enhancements: Ops.Gl.TextureEffects.Twirl_v4 - Change coordinate system -1 to 1 / aspect correct size\r\n- op enhancements: Ops.Gl.TextureEffects.Vignette_v3 - Toggle for setting opacity not color\r\n- op enhancements: Ops.Gl.TextureEffects.ZoomBlur_v2 - Change coordinate system -1 to 1 / aspect correct size\r\n\r\n#### Op Enhancements PBR Material\r\n\r\n- op enhancements: Ops.Gl.Pbr.PbrEnvironmentLight - Added environment rotation parameter\r\n- op enhancements: Ops.Gl.Pbr.PbrEnvironmentLight - Added parallax correction for cubemaps with helpers\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Support for point/spot/directional lights\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added vertex colour support\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added the tonemapping operators switch\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added microsurface interreflections\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added parallax occlusion mapping\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added screen space roughness from change in normal map as input\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added lightmap support for exr/rgbe inputs with corresponding intensity\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Added support for basic clear coats\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Default alpha blend mode now works as expected\r\n- op enhancements: Ops.Gl.Pbr.PbrMaterial - Rearranged inputs\r\n\r\n#### Op Enhancements \r\n\r\n- op enhancements: Areascaler/arearotate - Update to new workflow\r\n- op enhancements: Ops.Array.ShuffleArray_v2 - Fix bugs, which happened if input array became smaller\r\n- op enhancements: Ops.Array.TextureBufferArray - Fix: Array seemed not being updated\r\n- op enhancements: Ops.Audio.MidiJsonNote_v2 outputs data multiple times if notes on the same timestamp / string input field\r\n- op enhancements: Ops.Cables.CustomOp_v2 - Error modal window links to custom code instead of op-code\r\n- op enhancements: Ops.Cables.UIMode - Added output to indicate remote-viewer session\r\n- op enhancements: Ops.Devices.Keyboard.CursorKeys - Fix bug where key is stuck when element focus changes\r\n- op enhancements: Ops.Devices.Keyboard.KeyPress_v2 - Fix output port type, add options for active/area, output keyname\r\n- op enhancements: Ops.Devices.Keyboard.KeyPressLearn - Output keyname and show in extended-title\r\n- op enhancements: Ops.Gl.ForceCanvasSize - Detects if canvas is position absolute and adjusts css properties so it works correctly\r\n- op enhancements: Ops.Gl.Geometry.BoundingBoxVisible - Bounding box can be defined manually via size inputs\r\n- op enhancements: Ops.Gl.Geometry.GeometryPoints - Fix vertex colors output array\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v3 - Fix bug where number of vertices was not shown for meshes\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v3 - Now works with dataurls\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v3 - Render primitive types like lines or points correctly without manually adding ops\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v3 - Structure view collapsable sections\r\n- op enhancements: Ops.Gl.GLTF.GltfScene_v3 - When rapidly changing filenames async file loading processes could overtake ueache other\r\n- op enhancements: Ops.Gl.GLTF.GltfTexture - Fix filtering ignored on page reload\r\n- op enhancements: Ops.Gl.GradientTexture - Output rgb array\r\n- op enhancements: Ops.Gl.MediaRecorder - Fix mediarecorder multi recording / add filename input\r\n- op enhancements: Ops.Gl.MediaRecorder - Removed \"auto download\" option and made it always download\r\n- op enhancements: Ops.Gl.Meshes.Cone - Now works with meshinstancer\r\n- op enhancements: Ops.Gl.Meshes.FreeFormPlane - Add gizmo for each corner / fix not having correct normals\r\n- op enhancements: Ops.Gl.Meshes.GeometryToTexture - Was outputing huge texture when no geometry was connected\r\n- op enhancements: Ops.Gl.Meshes.GeometryToTexture - Was slow when not correctly connected\r\n- op enhancements: Ops.Gl.Meshes.Grid - Add render toggle and geometry output\r\n- op enhancements: Ops.Gl.Meshes.Grid - Center toggle\r\n- op enhancements: Ops.Gl.Meshes.PointCloudFromTexture - Fix: Max number of points wasnt recognized\r\n- op enhancements: Ops.Gl.Meshes.PointCloudFromTexture - Toggle to hide points at 0,0,0\r\n- op enhancements: Ops.Gl.Meshes.Polyhedron_v2 - Show errors with wrong seeds on ops, prevent crash\r\n- op enhancements: Ops.Gl.Meshes.Sphere_v2 - Change radius default from 1 to 0.5\r\n- op enhancements: Ops.Gl.Meshes.Torus - Now works with meshinstancer\r\n- op enhancements: Ops.Gl.Meshes.TriangleSphere - Avoid call-stack overflow on safari\r\n- op enhancements: Ops.Gl.MeshMorph - Added new methods of interpolating between meshes manually\r\n- op enhancements: Ops.Gl.PixelProjection - Add center positioning option\r\n- op enhancements: Ops.Gl.SaveScreenShot_v3 - Remove resolution, error prone, download texture op should be used\r\n- op enhancements: Ops.Gl.Shader.BasicMaterial_v3 - Added alpha source option: Alpha channel inverted \r\n- op enhancements: Ops.Gl.ShaderEffects.ColorArea_v4 - Scaling on all axis, fix invert mode of box area / texture input\r\n- op enhancements: Ops.Gl.ShaderEffects.PerlinAreaDeform_v4 - Added flip normals toggle\r\n- op enhancements: Ops.Gl.ShaderEffects.ScaleByNormal_v2 - Fixed performance problems\r\n- op enhancements: Ops.Gl.Texture_v2 - When rapidly changing filenames async file loading processes could overtake ueache other\r\n- op enhancements: Ops.Gl.TextureEffects.DrawImage_v3 - Alpha mask toggle\r\n- op enhancements: Ops.Gl.TextureEffects.DrawImage_v3 - Premultiplied alpha toggle\r\n- op enhancements: Ops.Gl.TextureEffects.DrawImage_v3 - Show warning when drawing 32bit textures into 8 bit texture\r\n- op enhancements: Ops.Gl.TextureEffects.ToNormalMap_v2 - Fixed pixel step size / added multiplier for pixel size\r\n- op enhancements: Ops.Gl.Textures.TextureSVG_v2 - Show error when file not found / correctly end loading task on file error\r\n- op enhancements: Ops.Gl.Textures.WebcamTexture_v3 - Rewrite - Is only active when triggered... flip x and y axis toggles / select between multiple webcams, better resolution support...\r\n- op enhancements: Ops.Html.DivElement - Shift+d completely removes/add element correctly\r\n- op enhancements: Ops.Html.ElementChilds_v2 - Improve disable/connect/disconnect and keep html content from div-element\r\n- op enhancements: Ops.Html.QrCode - Removed texture generation from op, can output html element and dataurl to use with texture op\r\n- op enhancements: Ops.Html.TransformElement - Fix bug where div was dissappearing when element style changed\r\n- op enhancements: Ops.Html.TransformElement - Fix crash when changing element link in some cases\r\n- op enhancements: Ops.Math.SmoothStep_v2 - Fix bugs with negative values\r\n- op enhancements: Ops.Sidebar.DropDown_v2 - Added trigger to set default value\r\n- op enhancements: Ops.Sidebar.Sidebar - Fixed two typos in parameter names\r\n- op enhancements: Ops.Sidebar.Slider_v3 - Fix active slider track being too long, when vertical scrollbar is showing\r\n- op enhancements: Ops.String.RandomString_v2 - Added unicode support\r\n- op enhancements: Ops.String.Split_v2 - Add option to convert splitted strings to numbers\r\n- op enhancements: Ops.Templates.UiTestOp - Add loading task\r\n- op enhancements: Ops.Timeline.DemoPrerender - Re-prerender on canvas resize to not have too many texture resizes...\r\n- op enhancements: Ops.Ui.VizGraph - Reset button\r\n- op enhancements: Ops.Ui.VizNumber - Shows null/undefined/empty values correctly\r\n- op enhancements: Ops.Ui.VizString - Shows null/undefined/empty values correctly\r\n- op enhancements: Ops.Ui.VizTexture - Corretly show output flow of texture\r\n- op enhancements: Ops.Value.Preset - Fix bug when renaming presets and parameters\r\n- op enhancements: Ops.Vars.VarSetObject_v2 - Show error when using object variables for textures\r\n- op enhancements: Ops.WebAudio.AudioBufferPlayer_v2 - Remove non-working start/end-time ports, fix restart\r\n- op enhancements: Ops.WebAudio.SamplePlayer - Remove non-working start-time port\r\n\r\n\r\n\r\n#### Editor / Ui\r\n\r\n- editor: Open remoteviewer in other window/browser/device to see patchchanges immedeatly in every session\r\n- editor: Allow for multiplayer-sessions with collaborators in editor\r\n- editor: Fix scrolling duplication in code-exception modal window\r\n- editor: Fix overlap of minimized timeline with iconbar \r\n- editor: Fix \"show all transforms\" not removing last transform icons after deleting\r\n- editor: Remember \"show all transforms\" setting after reload/close tab\r\n- editor: Adjust op parameter distances and paddings to be similar for different ui element types\r\n- editor: Fix bug where transform gizmo was shown when it should not be shown in current viewport\r\n- editor: Removed file svg2mesh converter\r\n- editor: Rework save-as dialog, add copyright info\r\n- editor: Confirmation dialog on deleting assets, with warning if used in other patches\r\n- editor: Allow to add uploaded libraries to userops\r\n- editor/web: Unify and tweak svg images generated for op previews\r\n- editor: Ace text editor random nonsense error message hidden\r\n- editor: Add converter to fix svgs missing width/height on upload\r\n- editor: Add patch-information to editor for non-owners/collaborators\r\n- editor: Added command palette icons for \"scale canvas\" and \"reset canvas size\"\r\n- editor: Added converter to fix missing width/height in svgs\r\n- editor: Added stride display for input ports / tweaked display of array ports\r\n- editor: Area op overlapping comments bug fixed\r\n- editor: Changing file input parameter sets unsaved state\r\n- editor: Directly connecting number to string port will add a numberToString op in between the new link\r\n- editor: Do not set website/tab-title to undefined\r\n- editor: Faster saving of patches / better data compression\r\n- editor: Files drag'n dropped onto patchfield now corractly snap to op grid\r\n- editor: Fix bug after some parameter changes patch state was not set to unsaved \r\n- editor: Fix bug meta tabs would not open correct tab after reloading\r\n- editor: Fix bug when crashing on very slow connections\r\n- editor: Fix bug when deleting viz ops content was not removed from patchfield\r\n- editor: Fix bug where sometimes \"save as\" did not have the proper project name\r\n- editor: Fix bug with some tooltips which did not dissappear\r\n- editor: Fix bugs when cursor entering/leaving patch with mouse buttons down\r\n- editor: Fix conflict of uploaded screenshot.png with patch-screenshot\r\n- editor: Fix crash in variable watch view\r\n- editor: Fix slowdowns and improve performance of patchfield in huge patches\r\n- editor: Fix: In some cases search dialog op screenshot preview was displayed incorrectly\r\n- editor: Fixed casesensitiveness for patchinvites\r\n- editor: Flow mode is much faster with many subpatches\r\n- editor: Font rendering improvements when zoomed far out\r\n- editor: Format code of attachments on save for non userops\r\n- editor: Handle errors due to network outage better\r\n- editor: If webgl context was lost, show a modal message\r\n- editor: Mathparser only parses after min length of 3 characters\r\n- editor: Move \"open in new window\" to \"view patch page\", add qrcode\r\n- editor: Naming scheme: HDR is now called 32bit float texture pixelformat, default is 8 bit ubyte texture\r\n- editor: New command to pause/unpause vizlayer\r\n- editor: Notify of ongoing maintenance mode, disallow saving while in maintenance\r\n- editor: Op search dialog: Show suggestions to dragged port etc.\r\n- editor: Op selection area works again with pressing shift to add and ctrl to remove ops from selection\r\n- editor: Op.outBoolNum() new numeric boolean output port, should be used instead of op.outBool from now on\r\n- editor: Patch settings tab: Showing progress indicator while saving\r\n- editor: Redesigned port tooltips\r\n- editor: Remote viewer improved\r\n- editor: Removed assimp json converter\r\n- editor: Removed obj2gltf converter\r\n- editor: Send proper mime-type when loading op-code to prevent firefox warning\r\n- editor: Settings buttons show activity indicator when waiting for server response\r\n- editor: Show code example when creating attachment, use modal dialog instead of alert\r\n- editor: Show object type in param panel if available\r\n- editor: Show progress bar while loading assets\r\n- editor: Speed up loading of libs and corelibs\r\n- editor: Subpatch list now shows a treeview of subpatch hierarchy\r\n- editor: Team members now have read-only access to all team patches\r\n- editor: Op crashing when loading patch should not stop loading of patch, op will be removed and error shown\r\n- editor: Added downgrade selected op command\r\n- editor: Show op shortname in parameter panel and not full namespace name\r\n- editor: Format button in editor now only appears for javascript syntax\r\n- editor: Ops using subtract blendmode fixed typo and added correct subtract blendmode method\r\n\r\n#### Core\r\n\r\n- core: Better handling of big meshes > 64k vertex indices\r\n- core: Added meyda.js to list of available libs to use https://meyda.js.org\r\n- core: Fixed handling of dataurls and assetPrefix\r\n\r\n#### Website\r\n\r\n- website: /mypatches now properly ordered by date, creation date shown in \"created\"-sorting\r\n- website: Add info to team-page when team has no patches yet\r\n- website: Add pagination to all huge lists of patches\r\n- website: Add speedtest option to /browser\r\n- website: Autosuggestions fields (teams/usernames) are now case insensitive\r\n- website: Better ipad/safari compatibility\r\n- website: Disallow login/register while being in maintenance mode\r\n- website: Disallow reset/forgot-password when still being logged in\r\n- website: Do not show dev and deprecated ops in searchresults\r\n- website: Fix centering of uploaded avatar images for users and teams\r\n- website: Fix holes in grid layout with big patchnames\r\n- website: Fix markdown style in patch-descriptions\r\n- website: Fix setting and reading of locationhash information on patch-page and viewer\r\n- website: Fixed casesensitiveness for patchinvites\r\n- website: Load projectlibs only once in patch-viewer\r\n- website: Make licencing information more prominent on patchpage\r\n- website: Maximize button to show patch in maximum size while keeping 16:9 ratio\r\n- website: Move patch-templates-overlay to make space for more\r\n- website: Only show current version of ops in searchresults\r\n- website: Overview-page for assets and uploaded libraries\r\n- website: Patch page and exported patches have alpha enabled by default\r\n- website: Proper thumbnails and titles for public patches when sharing editor link\r\n- website: Redirect forum.cables.gl to github discussions\r\n- website: Show github discussions on /home instead of forum posts\r\n- website: Show patches on userprofile when not logged in\r\n- website: Show top patches of last six months on dashboard\r\n- website: Speed up loading of patchsettings for huge patches\r\n- website: Speed up patch-overviews and search\r\n- website: Update code-block style on documentation-pages to work better in darkmode\r\n- website: Use browser native lazy-loading of images instead of library\r\n\r\n#### Docs\r\n\r\n- Added faq entry for social media profile\r\n- Updated \"reporting bugs\" faq\r\n- Updated \"working with files\"  chapter\r\n- Faq for videoplayback, recording, screenshots creation\r\n- Faq about supporting cables.gl\r\n- Exporting instructions now have video tutorials\r\n\r\n#### Renamed Ops\r\n\r\n- Renamed cannon ops to Ops.Physics.Cannon namespace\r\n- Renamed Object2json to ObjectStringify\r\n- Deprecated all Ops.json3d ops\r\n- Deprecated RgbeToHdrTexture\r\n- Deprecated IBLMaterial\r\n- Deprecated WipeTransition\r\n- Deprecated GrassWobble\r\n- Deprecated SvgPathes\r\n- Deprecated MeshSequence\r\n- Deprecated CircleMovement\r\n\r\n",
            "date": 1654590160390,
            "youtubeid": ""
        },
        {
            "text": "#### New ops\r\n\r\n- new op: Ops.Array.FilterArray - compare elements from an array and remove not matching ones\r\n- new op: Ops.Gl.Meshes.GeometryToTexture - convert vertices of a mesh to a data texture\r\n- new op: Ops.Gl.Meshes.MeshInstancerFromTexture_v2 - Draw the same mesh multiple times on the GPU based on XYZ Textures\r\n- new op: Ops.Gl.Meshes.PointCloudFromTexture - visualize a RGB texture as XYZ coordinates as points\r\n- new op: Ops.Gl.Pbr.PbrEnvironmentLight - PBR image based lighting setup\r\n- new op: Ops.Gl.Pbr.PbrMaterial - PBR/Physical Based Rendering Material for realistic materials\r\n- new op: Ops.Gl.TextureEffects.ImageComposeSnapshot - capture the current state of an imageCompose branch by copying the texture\r\n- new op: Ops.Gl.Textures.CombineTextures - combine multiple textures into one by copying colorchannels\r\n- new op: Ops.Gl.Textures.ExrTexture - load .exr floating point texture files\r\n- new op: Ops.Gl.Textures.RgbeToHdrTexture - convert a RGBE texture to HDR/floating point texture\r\n- new op: Ops.Gl.Textures.TextureToCoordinateGrid - convert a texture to a 3d coordinate grid storing coordinates in texture RGB channels\r\n- new op: Ops.String.SaveTextFile - download a textfile containing the input string\r\n- new op: Ops.Values.FreezeArray - capture the current input and copy it to the output, even after a reload\r\n- new op: Ops.Values.FreezeNumber - capture the current input and copy it to the output, even after a reload\r\n- new op: Ops.Values.FreezeString - capture the current input and copy it to the output, even after a reload\r\n\r\n\r\n#### Fixes and enhancements\r\n\r\n- op enhancement: Ops.Systems.ArraySpray - fix bug with centering axis parameters\r\n- op enhancement: Ops.Anim.Smooth - fix bugs with NaN values\r\n- op enhancement: Ops.Api.ThingSpeak.ReadEntries - fixed a typo that would lead to not reading entries at all\r\n- op enhancement: Ops.Array.TransformArray3 - tweakes parameter ui\r\n- op enhancement: Ops.Audio.BpmTap - do not reset to default-bpm while recording\r\n- op enhancement: Ops.Cables.CustomOp_v2 - clean up old out-ports on load\r\n- op enhancement: Ops.Cables.CustomOp_v2 - fix error when copy pasting\r\n- op enhancement: Ops.Cables.CustomOp_v2 - loading libs from uploaded files respects prefixAssetPath in export now\r\n- op enhancement: Ops.Cables.PatchInfo - now outputs last saved and last export timestamp\r\n- op enhancement: Ops.Gl.CubeMap.Skybox - support for RGBE textures, added exposure and gamma controls\r\n- op enhancement: Ops.Gl.Geometry.BoundingBoxVisible - fixed a case where it outputed wrong result\r\n- op enhancement: Ops.Gl.GLTF.GltfDracoCompression compression will show info modal on error\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - use colors and other material properties from gltf with current set material\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - color conversion linear space vertex colors\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - compatibility with more glb files\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - error dot/message when file cant be found\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - fix animation not playing when using skinned mesh with assigned material shaders\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - fix problems with different animation interpolation settings\r\n- op enhancement: Ops.Gl.Matrix.OrbitControls - remove pointerlock functionality\r\n- op enhancement: Ops.Gl.Matrix.WASDCamera_v2 - added active toggle to completly disable it\r\n- op enhancement: Ops.Gl.MediaRecorder - fixed bug using wrong file extension\r\n- op enhancement: Ops.Gl.MediaRecorder - fixed bug where it wont handle a canvas resize after initialized once\r\n- op enhancement: Ops.Gl.MediaRecorder - output list of available mimetypes/codecs\r\n- op enhancement: Ops.Gl.Meshes.FullscreenRectangle - option to keep correct aspect ratio and make it fit into canvas area (letterbox)\r\n- op enhancement: Ops.Gl.Meshes.PointCloudFromArray - fix bug when connecting texcoord port it did not update correctly\r\n- op enhancement: Ops.Gl.Meshes.SimpleSpline - vertex color array input\r\n- op enhancement: Ops.Gl.Shader.BasicMaterial_v3 - use vertex color checkbox\r\n- op enhancement: Ops.Gl.Shader.PickingMaterial - now works with instanced meshes\r\n- op enhancement: Ops.Gl.Shader.VertexColorMaterial - fix: now works with meshinstancer\r\n- op enhancement: Ops.Gl.TextureEffects.CircleTexture_v3 - Warn Overflow is disabled by default\r\n- op enhancement: Ops.Gl.ShaderEffects.TransformVertex - can be stacked now\r\n- op enhancement: Ops.Gl.TextureEffects.ImageCompose_v2 - fix problem when having imageCompose in animageCompose\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.CellularNoise - added offset texture / harmonics parameter / aspect ratio toggle / blend mask input\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.PerlinNoise - added offset texture / harmonics parameter / aspect ratio toggle / blend mask input\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.SimplexNoise - added offset texture / harmonics parameter / aspect ratio toggle / blend mask input\r\n- op enhancement: Ops.Gl.Textures.GraphTexture - added linewidth\r\n- op enhancement: Ops.Gl.Textures.GraphTexture - output canvas element\r\n- op enhancement: Ops.Json.CsvColumnArray_v2 - added option to force number type\r\n- op enhancement: Ops.Json.CsvColumnArray_v2 - show warning if column does not exist\r\n- op enhancement: Ops.Sidebar.Sidebar - all the sidebar ops now react properly do disconnecting their parent\r\n- op enhancement: Ops.Sidebar.DropDown_v2 - size option for multi-line display mode\r\n- op enhancement: Ops.Sidebar.LocalTextureFile - added texture wrap and filter modes\r\n- op enhancement: Ops.Sidebar.XYPad - also reacts on mousedown without dragging\r\n- op enhancement: Ops.Sidebar.XYPad - also reacts on mousedown without dragging\r\n- op enhancement: Ops.Trigger.TriggerCounter - has current count in extended title now\r\n- op enhancement: Ops.Trigger.TriggerCounterLoop - has current count in extended title now\r\n- op enhancement: Ops.Trigger.TriggersPerSecond - has current count in extended title now\r\n- op enhancement: Ops.Vars.VarTriggerArray - triggered objects and arrays were not always updated even if object was changed\r\n- op enhancement: Ops.WebAudio.Output - un-suspending the audiocontext via integrated play-button does not \"pop\" volume anymore\r\n- op enhancement: Ops.WebAudio.Waveshaper - fix: use default values on creation\r\n\r\n#### Editor/ui\r\n\r\n- editor: fix bug where port hover does not work immediately after using port suggestion menu\r\n- editor: add instant notification when patch was saved in different window/by other user\r\n- editor: add lastSaved and lastExported to patch-export\r\n- editor: area ui element in subpatches is not visible from outside\r\n- editor: array inputs and outputs can print the stride (e.g. Array2, Array3 etc)\r\n- editor: big patches with many subpatches will load much faster, initializing ui elements only when op visible in current subpatch\r\n- editor: cables CSS is scoped better and less interfering with custom html element classnames, e.g. \"button\"\r\n- editor: case insensitive sorting of variables\r\n- editor: create var shortcut creates texture getter/setter for texture ports\r\n- editor: disable selection in patchfield while resizing panels\r\n- editor: file-manager: files can now be duplicated\r\n- editor: file-manager: files can now be renamed \r\n- editor: fix bug, when in some cases the order of cables was saved wrongly\r\n- editor: fix library loading of tonejs \r\n- editor: fix timeline icons / new general timeline iconbar\r\n- editor: fix tooltips not always showing up in some cases\r\n- editor: fix undoing moving multiple ops\r\n- editor: fix visual bugs when using scaled canvas\r\n- editor: fix: bugs which caused connections to dissappear\r\n- editor: fix: clicking output value copies whole value into clipboard not a shortened string\r\n- editor: fix: not show cable add button circle when hovering an op lying over a line\r\n- editor: fix: pasting subpatches will not change current visible subpatch\r\n- editor: fix: undo deletion of subpatch will not make ops visible in current subpatch\r\n- editor: fix: when creating subpatch cables were hidden bug\r\n- editor: fixalt+esc to unminimize left tab panel\r\n- editor: fixed flickering of vizTexure and other viz ops\r\n- editor: flow visualization can be toggled off completly\r\n- editor: flow visualization now also shows changes in ports not only in links\r\n- editor: gizmo axis drags can be undone\r\n- editor: idlemode will not start when not in fullscreen or focussed the rendering canvas\r\n- editor: improve suggestion dialog for tags\r\n- editor: new command: save patchfield screenshot\r\n- editor: new info area with better docs/hotkeys \r\n- editor: op more menu now has option \"make op resizable\" toggle\r\n- editor: patchfield: better antialiasing for lines and circles\r\n- editor: patchfield: performance improvements when selecting and moving many ops at the same time\r\n- editor: remove image preview from parampanel - i.e. in Ops.Gl.Texture\r\n- editor: show proper error message when user tries to add/remove libs on ops that he/she is not allowed to\r\n- editor: subpatch in/out ports can be now created from inside a subpatch\r\n- editor: toggle texture preview between sticky and temporary (temp means: click into patchfield (unselect any op) to remove preview)\r\n- editor: uploaded .hdr files get converted to rgbe encoded .png files\r\n- editor: viztexture. vizgraph can now be resized\r\n- editor: warn user when cloning patch with \"private\" userops\r\n\r\n\r\n\r\n- website: add \"created by me\" filter to mypatches page\r\n- website: add \"feature\" badge on all patch-overview pages\r\n- website: add FAQ for running cables patches on your local machine\r\n- website: allow for selection of light/dark mode in account settings (for session only now)\r\n- website: allow for unsubscribe of newsletter in account settings\r\n- website: dark mode and rework design/layout \r\n- website: make autosuggest dropdown scrollable and limited size\r\n- website: op docs: ops can now have links to caniuse.com queries\r\n- website: patch page iframe/canvas now catches touch-events properly\r\n- website: switch to dark-mode as a default",
            "date": 1644336197429,
            "youtubeid": ""
        },
        {
            "text": "#### editor/ui\r\n\r\n\r\n\r\n- editor: tab panel: after reloading open last used editor tab again\r\n- editor: tab panel: on page load, the editor set the tab panel to minimized if it was minimized by the user\r\n- editor: all sidebar ops can now be inspected like div elements: hold ctrl and hover over sidebar element, then click it to focus op\r\n- editor: enable browser context menu for images and selectable text\r\n- editor: fix blurry display of gl patchfield when using os display scaling (win/mac)\r\n- editor: added command to create a visual area around a group of ops\r\n- editor: op search dialog: \"shortcut buttons\" for creating/using variables now available for all types and triggers\r\n- editor: allow upload of files with any suffix\r\n- editor: fix file selector shows image preview whenever possible\r\n- editor: changed lots of icons to modern look\r\n- editor: parameter panel changed checkbox icon\r\n- editor: adjusted warning alert colors\r\n- editor: allow access to and manual creation of backups from menu\r\n- editor: allow removal of libs and corelibs\r\n- editor: command palette icons now has mouse over tips\r\n- editor: comment title can be colorized\r\n- editor: fix broken image when sending error report\r\n- editor: fix bug when selecting ops when resizing renderer\r\n- editor: fix headline in keyboard-shortcuts window\r\n- editor: fix multiple windows of keyboard shortcuts opened\r\n- editor: fix right click on port did not disconnect cables\r\n- editor: fix bug when search dialog was not finding extended title strings\r\n- editor: fix bug where patch was jumping/moving random ops when interacting in the patch, after having the canvas focused\r\n- editor: fix bug with dragging text interpreted as file upload\r\n- editor: fix bug with transform gizmo\r\n- editor: improved custom op copy pasting between patches\r\n- editor: keep already entered tags when picking suggestions from dropdown\r\n- editor: midi messages will cancel going into idle mode\r\n- editor: new command: \"Logging\" filter console logging from different components\r\n- editor: output value inspect dialog now allows you to copy content to clipboard\r\n- editor: preferences - hide patch bounds option added\r\n- editor: remember port parameter text editor tabs and reopen them correctly again\r\n- editor: removal of old svg based patchfield renderer\r\n- editor: save patch-license on click without reload\r\n- editor: visually indicate active tab in patch settings\r\n- editor: suggest \"related\" tags in patch settings\r\n- editor: added tips to tips dialog\r\n- editor: add pako.js to available libraries (https://github.com/nodeca/pako)\r\n\r\n#### new ops\r\n\r\n\r\n- new op: Ops.Ui.VizTexture - patchfield: vizualize textures in an op in the patchfield \r\n- new op: Ops.Ui.Area - patchfield: create areas/groups of ops and move them around together\r\n- new op: Ops.Ui.VizGraph - patchfield: vizualize multiple numbers as curves\r\n- new op: Ops.Ui.VizNumber - patchfield: display numbers as curves\r\n- new op: Ops.Ui.VizString - patchfield: display numbers as curves\r\n- new op: Ops.Json.ObjectSetObjectSimple - set an object in an object\r\n- new op: Ops.Array.AnglesBetweenPoints - calculate euler angles between every point and its next in an array\r\n- new op: Ops.Array.ArrayUnshiftString - add string to beginning of array\r\n- new op: Ops.Gl.GLTF.GltfHierarchy - export positions of lines of a hierarchyfrom a branch structure as an array , e.g. a skeleton bones\r\n- new op: Ops.Gl.GLTF.GltfNodeTransform_v2 - set an absolute transform of a node, e.g. joints of a skinned/skeleton\r\n- new op: Ops.Gl.GLTF.GltfSkin - render a skinned mesh animation\r\n- new op: Ops.Gl.ShaderEffects.VertexWobble_v2 \r\n- new op: Ops.Gl.TextureEffects.PixelDifference - calculate pixel differences as color values\r\n- new op: Ops.Html.QuerySelectorAll - returns an array of elements matching the \"CSS query\"\r\n\r\n\r\n#### fixes and enhancements\r\n\r\n- op enhancement: Ops.Api.SoundCloud.SoundCloud - fixed for new SoundCloud API, added ports for format select\r\n- op enhancement: Ops.Array.GetValuesFromArrayOfObjects - add option to filter out invalid values\r\n- op enhancement: Ops.Array.GetValuesFromArrayOfObjects - now walks all the parent-properties of objects as well\r\n- op enhancement: Ops.Boolean.MonoFlop - added trigger output when ending activation\r\n- op enhancement: Ops.Cables.CustomOp - fix copy-paste issue \r\n- op enhancement: Ops.Gl.CanvasInfo - output 1 if hdpi displays is turned off in mainloop operator\r\n- op enhancement: Ops.Gl.GLTF.GltfDracoCompression - now uses webworkers and WASM for some speedup\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 can now load multiple layers of uv coordinates\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 fixed files that use uint16bit vertex colors would not render correctly\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 input field for switch between multiple animation actions/tracks\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 material input now accepts object where key is material name and value is a shader\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 skinning/rigging \r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 structure view meshes now shows nodename and number of nodes  where its being used\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 structure view show correct number of vertices for multimaterial meshes\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 fix bug with duplicated nodes in structure view\r\n- op enhancement: Ops.Gl.GradientTexture - added parameters: texture filter/wrap modes / step / flip\r\n- op enhancement: Ops.Gl.GradientTexture - was flipped in some cases\r\n- op enhancement: Ops.Gl.Matrix.WASDCamera_v2 - added reset trigger\r\n- op enhancement: Ops.Gl.Matrix.WASDCamera_v2 - can now also be rotated by touch devices\r\n- op enhancement: Ops.Gl.Matrix.WASDCamera_v2 - input ports for moving the camera by setting Booleans\r\n- op enhancement: Ops.Gl.Meshes.Polyhedron_v2 - uses proper string input now\r\n- op enhancement: Ops.Gl.MeshMorph - added easing parameter\r\n- op enhancement: Ops.Gl.RandomCluster - fix crash when in round mode and size <= 0\r\n- op enhancement: Ops.Gl.RenderAnim_v2 - disabling zip files not working correctly\r\n- op enhancement: Ops.Gl.RenderAnim_v2 - workaround webm compression bug doing nothing when 100%\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - added output port - true if shader has errors\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - op displays error dot, if shader does not compile\r\n- op enhancement: Ops.Gl.Shader.WireframeMaterial - fix initial colors after creating op not showing correctly\r\n- op enhancement: Ops.Gl.ShaderEffects.ColorArea_v3 - added discard mode\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedDisplacementMap - added abs mode\r\n- op enhancement: Ops.Gl.ShaderEffects.TextureProjection - fix multiply mode\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v4 - fix colorize crashing\r\n- op enhancement: Ops.Gl.TextMeshMSDF_v2 - fixed bug outline and shadow not working at the same time\r\n- op enhancement: Ops.Gl.Texture_v2 - added option to save device memory\r\n- op enhancement: Ops.Gl.Texture_v2 - fix bug texture op was creating two loading jobs\r\n- op enhancement: Ops.Gl.TextureArrayLoader_v2 - add URL as string in-port instead of number\r\n- op enhancement: Ops.Gl.TextureEffects.RGBMath - added mask/multiplier texture input\r\n- op enhancement: Ops.Html.QuerySelector - now can work with strings, xml and update on trigger\r\n- op enhancement: Ops.Html.VideoElement - prevent loading empty video during init of op\r\n- op enhancement: Ops.Physics.Body.PhysicsSphere_v2 - added name string input port\r\n- op enhancement: Ops.Sidebar.DropDown_v2 - fix bug, input was ignore in some cases\r\n- op enhancement: Ops.Sidebar.SidebarText_v2 - now also accepts html code\r\n- op enhancement: Ops.Sidebar.XYPad - fix range change bug\r\n- op enhancement: Ops.String.StringEditor - fix JavaScript syntax highlighting\r\n- op enhancement: Ops.Systems.ArraySpray  center axis controls\r\n- op enhancement: Ops.Templates.UiTestOp - more example how to log/show dialogs/open tabs programmatically\r\n- op enhancement: Ops.WebAudio.AudioBufferPlayer_v2 - show error when audiocontext is suspended...\r\n- op enhancement: Ops.WebAudio.Output_v2 - fix state handling of muted/volume etc\r\n- op enhancement: Ops.WebAudio.Output_v2 - shows a button if the audio context is suspended by the browser, so users can turn on sound by an user interaction more easily\r\n- op enhancement: Ops.WebAudio.SamplePlayer - added option to define buffersize\r\n- op enhancement: Ops.WebAudio.AnalyzerTexture_v2 - add current y position output\r\n- op enhancement: Ops.Anim.RandomAnim - fix: use same timing methods as other anim ops\r\n- op enhancement: Ops.Cables.CustomOp_v2 - better exception-handling and error-display\r\n\r\n#### web\r\n\r\n- web: display explore/learn/community links when not logged in\r\n- web: fix long nicknames in author-overlay\r\n- web: fix tags page\r\n- web: fix viewer for public patch using user operators\r\n- web: link to documentation on user-ops list in account settings (to check where it's used)\r\n- web: show ribbons for example patches on all pages\r\n- web: team patches now ordered by last updated on teams overview page\r\n- web: teams now ordered by last updated\r\n- web: remove all external services and third party cookies/tracking services\r\n- web: remove push notification service\r\n- web: remove google analytics tracking\r\n- web: show accepted invitations as patch-grid\r\n\r\n#### core \r\n \r\n- core: fix animated values of ops without trigger ports\r\n- core: fix multiple webgl console warnings\r\n- core: patchsilent is on by default / reduced unnecessary console logging \r\n\r\n#### docs\r\n\r\n- docs: added audio faq https://cables.gl/docs/8_audio/working_with_audio\r\n- docs: new content for the tip dialog and https://cables.gl/docs/0_howtouse/ui_walkthrough/ui_walkthrough\r\n\r\n#### renamed ops\r\n\r\n- renamed VertexSinusWobble to VertexWobble\r\n- deprecated Ops.Deprecated.Math.ApproachInterpolation - use smooth\r\n- deprecated Systems.Spray - use ArraySpray\r\n- deprecated TriggerBetween - confusing op, better use between and iftruethen\r\n- deprecated instanced Indexed ops - confusing ops, better workflows available \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
            "date": 1638260928288,
            "youtubeid": ""
        },
        {
            "text": "#### Editor / UI\r\n\r\n- editor: op search dialog: reduced size: more compact\r\n- editor: fix: ports can be animated, even without having updating trigger inputs \r\n- editor: fix: customShader ports can now be animated or assigned to variables\r\n- editor: fix: visual glitches when switching subpatches\r\n- editor: fix: possible to completly remove existing comments on ops\r\n- editor: fix canvas icon/infobar positioning when canvas is scaled by command \"scale canvas\"\r\n- editor: closing tabs does not loose focus of selected op \r\n- editor: tweaks and fixes for bright editor mode\r\n- editor: lots of little ui tweaks\r\n- editor: suggest \"related\" tags in patchsettings\r\n- editor: allow for access to and manual creation of backups from menu\r\n- editor: fix multiple windows of keyboarshortcuts opened\r\n- editor: save patch-licence on click without reload\r\n- editor: fix broken image when sending error report\r\n- editor: allow for removal of libs and corelibs\r\n\r\n#### Ops\r\n\r\n- new op: Ops.Gl.GLTF.GltfDracoCompression - support for [draco] compressed glb files (blender: just check compression in export dialog)\r\n- new op: Ops.Array.ArrayUnshiftString - add string to beginning of array\r\n\r\n\r\n- op enhancement: Ops.Sidebar.XYPad - 2d draggable point in rectangular area input element\r\n- op enhancement: Ops.Api.SoundCloud.SoundCloud - fixed for new soundcloud api, added ports for format select\r\n- op enhancement: Ops.Sidebar.ColorPicker_v3 - not using native colordialog anymore / colors change immediately\r\n- op enhancement: Ops.Gl.ForceCanvasSize - works in exported patches without changing css rules\r\n- op enhancement: Ops.Gl.MainLoop - fix: added clear option again\r\n- op enhancement: Ops.Array.AnimArray_v2 - fixes\r\n- op enhancement: Ops.Gl.LineFont_v2 - array output / tweaks\r\n- op enhancement: Ops.Gl.TextureEffects.SSAO_v2 - added blendmodes / fix multiply default mode\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - fix bug with reopening structure view\r\n- op enhancement: Ops.Gl.ShaderEffects.AreaTranslateMeshes_v3 - fix bug where meshes where jumping to new position\r\n- op enhancement: Ops.Gl.Textures.Base64ToTexture - filter/wrap modes\r\n- op enhancement: Ops.Gl.TextureArrayLoader_v2 - add url as string in-port instread of number\r\n\r\n\r\n- renamed Math.Phyllotaxis2 to Ops.Array.Phyllotaxis\r\n- renamed Gl.TextureEffects.SSAO2 to Ops.Gl.TextureEffects.SSAO\r\n- deprecated WebAudio.WebAudioContextRunner\r\n- deprecated Gl.ShaderEffects.CubeMapReflection\r\n- deprecated Gl.Phyllotaxis\r\n\r\n#### Website\r\n\r\n- web: fix long nicknames in author-overlay\r\n- web: link to documentation on user-ops list in account settings (to check where it's used)\r\n- web: display explore/learn/community links when not logged in\r\n",
            "date": 1632207350990,
            "youtubeid": ""
        },
        {
            "text": "- op enhancement: Ops.Physics.CastRay - fix problem with order of overlapping bodies\r\n- op enhancement: Ops.Physics.CastRay - fix problem with not hitting bodies with zero mass\r\n- op enhancement: Ops.Gl.ShaderEffects.ColorArea_v3 - fix bug crashing when using it with certain materials\r\n- editor: patchfield - fixed small bugs where elements where not correctly removed after deleting ops\r\n- editor: fix color selector create cable bug\r\n- editor: fix bug Ops.Device.* ops where not showing\r\n- editor: fix bug when deleting subpatch that contain subpatches result in crash\r\n- editor: fix bug cable add button was not showing up when ops selected \r\n- editor: alt+drag / alt+shift+drag copy/reconnect cables from port nearby the cursor\r\n- editor: fix bug where it wast not possible connecting a port with the same port to output of a subpatch\r\n- editor: fix bug with overlapping ops and vertical align funciton (shift+a)\r\n- editor: fix bug crashing pixel value inspector spreadsheet opening multiple times\r\n- editor: cmd+p menu allows for display of buildinfo\r\n- editor: do not allow editing of patches that have ops in the Ops.Dev namespace on live server\r\n- web: fix patch licence not showing\r\n- web: invite page now shows old accepted invites to patches for easier finding\r\n",
            "date": 1629185542248,
            "youtubeid": ""
        },
        {
            "text": "- editor: patchfield fix international character set\r\n- editor: fix msdf font converter\r\n- editor: better drag area when dragging ports from the param panel \r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v4 - fix bug antialiasing did not work with alpha input",
            "date": 1628233329003,
            "youtubeid": ""
        },
        {
            "text": "#### new ops\r\n\r\n\r\n- new op: Ops.Array.AnimArray - animate values in an array to another array\r\n- new op: Ops.Array.ArrayFromNumbers - simple way to create small arrays of numbers\r\n- new op: Ops.Array.ArrayIndexMinMax - find lowest/highest numbers in an array\r\n- new op: Ops.Array.ArrayIteratorStrings - iterate over an array of strings\r\n- new op: Ops.Array.ArrayMergeTrigger - merge /concatenate arrays by trigger\r\n- new op: Ops.Array.SortArrayWithIndices - sorts an array of numbers and also get sorted indices \r\n- new op: Ops.Debug.GlLogErrors - execute glGetError after every gl command and log to console\r\n- new op: Ops.Gl.GLTF.GltfCameraViewMatrix - get view matrix from a GLTF camera\r\n- new op: Ops.Gl.GLTF.GltfNodeSineAnim - sine animate GLTF nodes by a filter\r\n- new op: Ops.Gl.Matrix.AnimMatrix - animate values in a matrix to a new matrix\r\n- new op: Ops.Gl.Matrix.InvertMatrix - outputs an inverted matrix\r\n- new op: Ops.Gl.Phong.ResetLights - reset the lights for the following ops\r\n- new op: Ops.Gl.ShaderEffects.TransformVertex - transform vertices of a mesh via vertex shader\r\n- new op: Ops.Gl.TextureEffects.MultiDrawImage - draw multiple images at once\r\n- new op: Ops.Gl.TextureEffects.RGBMath - apply simple mathematical functions on pixel color values\r\n- new op: Ops.Gl.TextureEffects.TexMathModulo - modulo pixel color values\r\n- new op: Ops.Json.ObjectSetObject - set object as value in an object\r\n- new op: Ops.Json.ObjectValues - Extract all object values as an array\r\n- new op: Ops.Libs.ECharts.ECharts - add ECharts library functionality\r\n- new op: Ops.Libs.ECharts.EChartsEvent - add ECharts library functionality\r\n- new op: Ops.Math.IsNumberRising - detect if a number is rising or falling \r\n- new op: Ops.Math.RandomCounter - add up random numbers by triggering\r\n- new op: Ops.Net.SocketCluster.SocketClusterTopicInfo - gives information on clients on a socketcluster topic\r\n- new op: Ops.Sidebar.SideBarStyle - adjust appearance of sidebar\r\n- new op: Ops.Sidebar.SideBarSwitch - add tabs or switchbar to a sidebar\r\n- new op: Ops.String.NumberSwitchByString - associate numbers by strings\r\n- new op: Ops.String.StringReplace - replace occurrences of a string with another string\r\n- new op: Ops.Templates.UiTestOp - UI indicators example op\r\n- new op: Ops.Time.Milliseconds - current time/date in milliseconds\r\n- new op: Ops.Trigger.RouteTriggerString - route trigger output by string\r\n- new op: Ops.Trigger.TriggerSendNamed - send a named trigger by string (to receive with TriggerReceiveFilter)\r\n- new op: Ops.Value.DelayStringSimple - delay the output of a string by n seconds\r\n- new op: Ops.Vars.VarTriggerArray - set array variable by trigger\r\n- new op: Ops.Vars.VarTriggerNumber - set number variable by trigger\r\n- new op: Ops.Vars.VarTriggerObject - set object variable by trigger\r\n- new op: Ops.Vars.VarTriggerString - set string variable by trigger\r\n- new op: Ops.WebAudio.AudioRecorder - record, playback and download audio\r\n- new op: Ops.WebAudio.Waveshaper - add waveshaping (distortion, overdrive, fuzz) to an audio stream\r\n- new op: Ops.Website.LocationHashRoute - read data from \"location hash\" of browser\r\n- new op: Ops.Website.SetLocationHash - allows for manipulation of window.location.hash\r\n\r\n#### op enhancements\r\n \r\n- op enhancement: Ops.Physics.CastRay - fix bug now always returns closest object to the camera\r\n- op enhancement: Ops.Math.Modulo - fix bug wrong integer values when using ping pong mode\r\n- op enhancement: Ops.Array.TextureBufferArray - fixed bug when using mipmapped textures\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.PerlinNoise - add switch to toggle between grey/rgb colors\r\n- op enhancement: Ops.Gl.TextureEffects.ColorMap - min and max input to clamp mapping / added blendmodes \r\n- op enhancement: Ops.Anim.FrameRangeAnim_v2 - changed input port type for \"frames\" to string\r\n- op enhancement: Ops.Array.Array3PushNumbers_v2 - fix bugs/add reset button\r\n- op enhancement: Ops.Array.ArrayContains_v2 - remove old value input for search value and replace with new number\r\n- op enhancement: Ops.Array.ArraySetNumber_v2 - fixed bugs when chaining op multiple times, fix bug when used in a repeater\r\n- op enhancement: Ops.Array.SmoothArray - fixed a bug that lead to null/NaN in the resulting array\r\n- op enhancement: Ops.Cables.CustomOp_v2 - fix crash when op-id starts with number\r\n- op enhancement: Ops.Cables.CustomOp_v2 - now it's possible to load uploaded library or CDN url\r\n- op enhancement: Ops.Cables.PatchInfo_v2 - now tries a few places to get the patch id, also added proper string outputs\r\n- op enhancement: Ops.Devices.Mouse.MouseWheel_v2 - fix flip direction toggle\r\n- op enhancement: Ops.Devices.Mouse.MouseWheel_v2 - trigger out when wheel was moved\r\n- op enhancement: Ops.Gl.CubeMap.CubemapToEquirectangularTexture - add width and height ports for output texture\r\n- op enhancement: Ops.Gl.ForceCanvasSize - fix bug not working with browser internal cmd+/- zoom in\r\n- op enhancement: Ops.Gl.GLTF.GltfNodeTransforms_v2 - fixed translation etc, matrix output\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - embedded textures can be exposed even without filename information\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - fix bug when rendering meshes >64k vertices\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v3 - better camera support\r\n- op enhancement: Ops.Gl.MeshInstancer_v4 - texture coordinate input array / optimized amount of data uploaded to gpu\r\n- op enhancement: Ops.Gl.Phong.AmbientLight_v4 - fix crash when used with shadow op\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - fix bug not working on older android phones/mali gpus\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - new version, emissive texture now blends correctly with diffuse color\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - dynamically changing environment map performance bug fix\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - add emissive mask texture, add greyouts to texture intensities \r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - add greyouts to emissive textures when emissive is not active\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v6 - fix bug where not all texture update methods would be called on initialization\r\n- op enhancement: Ops.Gl.Phong.PointLight_v5 - resizing the shadow cubemap now works properly\r\n- op enhancement: Ops.Gl.Render2Texture : webgl1 bug ignoring \"clear\" option\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - support for cubemap uniform input\r\n- op enhancement: Ops.Gl.Shader.Picker - increase resolution of pick texture (fix bug where picked objects at top screen border would not be picked)\r\n- op enhancement: Ops.Gl.Shader.PickingMaterial - increase resolution of pick texture (fix bug where picked objects at top screen border would not be picked)\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v4 - now works with alpha channels\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v4 - fixed bug of wrong colorchannels when using round+antialias switch\r\n- op enhancement: Ops.Gl.Shader.Shader2Texture - fix bug when rendering into alpha channel\r\n- op enhancement: Ops.Gl.ShaderEffects.FogEffect - toggle for modify color op opacity\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedDisplacementMap - added channel selection input\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedDisplacementMap - added rgb channel mode \r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedDisplacementMap - added rotation mode\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedPerlinPosition_v2 - added minimum scale option\r\n- op enhancement: Ops.Gl.ShaderEffects.Shadow_v2 - set default uniform for shadow properties when creating it\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v4 - added scaling and source mapping from mesh coordinates\r\n- op enhancement: Ops.Gl.Texture_v2 - when changing filenames, it keeps old image in memory until new file is loaded\r\n- op enhancement: Ops.Gl.TextureEffects.ColorMap - added method input to map via luminance and per channel value\r\n- op enhancement: Ops.Gl.TextureEffects.FastBlur - texture mask input \r\n- op enhancement: Ops.Gl.TextureEffects.Hue - texture inputs for offset and masking hue\r\n- op enhancement: Ops.Gl.TextureEffects.Invert - texture mask input \r\n- op enhancement: Ops.Gl.Textures.Histogram - fixed bug preventing it from working\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - fix bug in some settings empty lines where nor rendered\r\n- op enhancement: Ops.Gl.Textures.VideoTexture_v2 - fix several bugs on playback and jumping\r\n- op enhancement: Ops.Html.BrowserInfo_v3 - output device has touchscreen\r\n- op enhancement: Ops.Html.ScrollPosition - scroll position is already set when loading the patch\r\n- op enhancement: Ops.Html.SetCssVariableString - has an option to return \"quoted strings\" as values for use in `content:` rules\r\n- op enhancement: Ops.Json.AjaxRequest_v2 - added a boolean to stop loading request immediately\r\n- op enhancement: Ops.Lottie.LottieSVGPlayer - added new progress outputs / option for playing backwards \r\n- op enhancement: Ops.Lottie.LottieSVGPlayer and Ops.Lottie.LottieTexturePlayer now work in the same patch and use an updated version of Lottie library (5.7.11)\r\n- op enhancement: Ops.Math.Incrementor - added default value input\r\n- op enhancement: Ops.Math.PerlinNoise_v2 - better noise function and seeding etc.\r\n- op enhancement: Ops.Math.RandomNumbers_v3 - faster when using it a lot in loops\r\n- op enhancement: Ops.Math.RoundEven - now allows for selection of ceil/floor for rounding up or down\r\n- op enhancement:  All Net SocketCluster - ops now show error when connected to non-socketcluster objects\r\n- op enhancement: Ops.Net.SocketCluster.SocketCluster_v2- now allows for sending additional data alongside the payload to be read by server (i.e. auth-token)\r\n- op enhancement: Ops.Patch.Function_v2 - allows for sending parameter from external functions, adds default parameter functionality \r\n- op enhancement: Ops.Patch.Function_v2 - new string input type\r\n- op enhancement: Ops.Patch.LoadingStatus_v2 - simpler version and easier to show a different loading when firstloading has finished \r\n- op enhancement: Ops.Sequence - cleanup button shows only when needed\r\n- op enhancement: Ops.Sidebar.DropDown_v2 - fixed bug with default value overwriting the input value\r\n- op enhancement: Ops.Sidebar.Sidebar - added a boolean output to indicate when the sidebar is opened\r\n- op enhancement: Ops.Sidebar.Slider_v3 - suffix input\r\n- op enhancement: Ops.Sidebar.TextInput_v2 - Placeholder text\r\n- op enhancement: Ops.Sidebar.Toggle_v3 - fixed default value \r\n- op enhancement: Ops.String.Base64Encode_v2 - has new string input and output\r\n- op enhancement: Ops.Value.RouteNumber - add option to reset unused ports to default value\r\n- op enhancement: Ops.Value.SwitchFile_v2 - string port type fixes\r\n- op enhancement: All WebAudio OPs - disconnect nodes on removal so they get garbage collected, add type checking to object inputs and outputs, remove old connection warnings\r\n- op enhancement: Ops.WebAudio.AudioAnalyzer_v2 - add warning for high FFT sizs\r\n- op enhancement: Ops.WebAudio.AudioBuffer_v2 - bugfixes: now properly loads files & sets status on changing strings, add loading output, add possibility to load audio via Data URL\r\n- op enhancement: Ops.WebAudio.AudioBuffer_v2 - reinitialize output values when file url is changed, add possibility to load audio from data url\r\n- op enhancement: Ops.WebAudio.AudioBufferPlayer_v2 - bugfixes: restart would crash at times, fix errors on start/stop, add loading output, add ui hints for offset, when starting errors do not throw full exception just print the message\r\n- op enhancement: Ops.WebAudio.AudioBufferToSplineArray - better UI hints\r\n- op enhancement: Ops.WebAudio.AudioPanner - now sets null to the output when input is not connected\r\n- op enhancement: Ops.WebAudio.BiquadFilter_v2 - remove unused node, fix magnitude & phase response output\r\n- op enhancement: Ops.WebAudio.Convolver_v2 - better UI hints\r\n- op enhancement: Ops.WebAudio.Gain - smoother transition when changing gain (linear ramp)\r\n- op enhancement: Ops.WebAudio.Output_v2 - fix wrong muting states, fix bug where mute would not go through when audiocontext is suspended\r\n- op enhancement: Ops.WebAudio.WaveformMesh mesh is now disposed when buffer disconnected\r\n- op enhancement: Ops.Website.InfoURL - trigger when hash part changed\r\n- op enhancement: Ops.Website.UrlQueryParams_v2 - now updates in editor on first load\r\n- op enhancement: subpatch ops - newly created object ports store objtype to give better warnings if wrong object is connected to subpatch\r\n\r\n\r\n#### Editor / UI\r\n\r\n- editor: gl ui patchfield is now default \r\n- editor: assigned variables dropdown only contains variables that fit\r\n- editor: better caching-logic for core and ui in editor\r\n- editor: better explanation of external-exports (github, netlify, exe)\r\n- editor: bugfix where users using glui could not edit code\r\n- editor: CABLES.API.build, CABLES.build, and CABLES.UI.build now contain information for the last build\r\n- editor: canvas icon and info area cleanup\r\n- editor: exporting \"single javascript file\" now minifies patchconfig and blueprints to optimize filesize\r\n- editor: file upload: brackets in filenames will be replaced with _ to reduce problems with css properties\r\n- editor: find: can now search for duplicate assets\r\n- editor: find: can now search for multiple words\r\n- editor: fix browser crash/epic load when \"inspecting\" really huge json structure\r\n- editor: fix bug not being able to type out decimal values in an animated input\r\n- editor: fix bug patch not showing when toggle fullscreen mode\r\n- editor: fix bug when port default value indicator was not working \r\n- editor: fix bug where exporting assets set as \"none\" still had all the assets in the export\r\n- editor: fix bug where numbers where converted to strings after pressing ctrl+z\r\n- editor: fix copy to clipboard when clicking on value outputs in chrome\r\n- editor: fix export when using socketcluster library and combined files option\r\n- editor: fix warnings about textures in texture previewer\r\n- editor: fixed bug not showing changes after pressing ctrl+z in some cases after typing in numbers\r\n- editor: GPU Profiler - profile what uses most GPU performance \r\n- editor: infoarea can be minimized and the state is saved per user\r\n- editor: make sure connected ports are always greyed out in the parameter panel, even if op says it shouldn't be\r\n- editor: namespaces and collaborator textfields now are suggesting matching names for users/namespaces\r\n- editor: new colorpicker dialog / op param panel: color preview box now always up to date\r\n- editor: profiler - subpatch performance data is more correct over time / show number of port actions per frame / table design\r\n- editor: properly copy collaborators to new project when using save as\r\n- editor: rare cases of patch not being saveable because an op can't be serialized, it now shows which op is the culprit\r\n- editor: show commitmessage in loading screen on dev\r\n- editor: show licence information for library files in filemanager\r\n- editor: show texture size when hovering texture preview\r\n- editor: show visually which op changed when pressing ctrl+z\r\n- editor: store creation and lastchange of op and add :history to search\r\n- editor: subpatch creation: fix bug where input/output ops were positioned wrong\r\n- editor: texture spreadsheet preview button to see first RGBA number values \r\n- editor: timeline fix: show correct state when auto playing after loadingstatus\r\n- editor: tweak tooltip styles\r\n- editor: warning on save and coming back from \"idle\" if/when cables has been updated in the meantime\r\n- editor: creating ops by pressing shift+enter in the op select dialog lets you continue adding more ops\r\n\r\n- core: add empty cubemap texture\r\n- core: remove cubemap corelib\r\n- core: add tangent, bitangent & vertex index to shadow pass vertex shader (fix bug where displacement would not work in shadow pass)\r\n- core: cgl_shader: add tangent & bitangent to default vertex shader body\r\n- core: cubemapframebuffer & texture: add mipmap generation possibility, better default naming\r\n\r\n#### Website/docs/misc\r\n\r\n- web: as a user it is possible to rename your own ops now from the /settings page\r\n- web: fix wrong example shown on op page\r\n- web: https://cables.gl/browser warns visually if your browser has major performance caveat or uses a software renderer (swiftshader)\r\n- web: patch invitation mail now shows name of initiator\r\n- web: patch invitations are no longer shown for patches that already got deleted\r\n- web: oembed endpoint now displays \"made with cables\" icon when embedding on reddit/figma/...\r\n- web: patchview now shows invitation screen instead of 403 for pending invitation\r\n- web: remove bell icon because it was not really useful / alerts are shown using a red numbers in navbar\r\n\r\n- docs: updated documentation for export-options (https://cables.gl/docs/4_export_embed/dev_embed/dev_embed)\r\n- docs: added documentation on how to contribute code to cables (https://cables.gl/docs/faq/features/contribute/contribute)\r\n- docs: update writing shaders documentation\r\n- docs: update Shadertoy documentation\r\n\r\n\r\n",
            "date": 1628152343503,
            "youtubeid": ""
        },
        {
            "text": "#### WebGl Ops\r\n\r\n- new op: Ops.Gl.ShaderEffects.UseVertexColor - Use vertex color as basecolor/diffuse color with phongmaterial\r\n- new op: Ops.Trigger.ProbabilityTrigger - trigger by given probability\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v4 - complete rewrite and much more posibilities and control \r\n- op enhancement: Ops.Gl.SaveScreenShot_v2 - fixed wrong resolution when using HDPI resolutions\r\n- op enhancement: Ops.Gl.GLTF.GltfNodeTransforms - also output node names / sorting\r\n- op enhancement: Ops.Gl.Textures.CopyTexture - added options to invert / convert to greyscale by color channel / if no trigger is connected it will copy when the texture is changed\r\n- op enhancement: Ops.Gl.TextureEffects.Fog_v3 - support 2d background texture\r\n- op enhancement: Ops.Gl.ShaderEffects.PerlinAreaDeform_v4 - add switch to use input current shader pos or original pos attribute\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexPositionFromTexture_v2 - fix op was only working after changing mode\r\n- op enhancement: Ops.Gl.ShaderEffects.TextureProjection - fix: can now be used multiple times / use image alpha switch\r\n- op enhancement: Ops.Gl.Shader.SetUniformValue_v2 - update shader uniform number values and textures of the current bound shader/material, \r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - uniform mat4 datatype is detected and can be set using an array of 16 floats\r\n- op enhancement: Ops.Gl.TextureFromColorArray - add filter and wrap options\r\n- enhancement: Ops.Gl.TextureEffects.Fog_v3 - updated example to smaller scene so iOS looks good, added documentation for dealing with iOS resolution of depth buffer\r\n- op enhancement: gltf fix: bug with huge indexed meshes\r\n- op enhancement: gltf fix: normal mapping: use exported tangents and calculate correct bitangents, otherwise calculate them\r\n\r\n#### Audio Ops\r\n\r\n- enhancement: Ops.WebAudio.AudioBuffer_v2 -  add ui hint if audiobuffer is not connected\r\n- enhancement: Ops.WebAudio.AudioBufferPlayer_v2 - added helping hints and warnings, works with timeline, various fixes\r\n- enhancement: Ops.WebAudio.SamplePlayer - add ui hint if audiobuffer is not connected to input or output is not connected\r\n- enhancement: Ops.WebAudio.Mixer - add pan control for each input\r\n- enhancement: Ops.Webaudio.Convolver_v2 - add wet output port, add dry wet control, fix crash on empty string, add predelay\r\n- enhancement: Ops.WebAudio.AudioAnalyzer_v2 - add time domain average volume, fix wrong default value for FFT size shown in UI\r\n- new op: Ops.Array.ArrayQuantizer - quantize input value to nearest value in array\r\n- new op: Ops.WebAudio.ClockSequencer - sequence BPM-based triggers\r\n- new op: Ops.WebAudio.ClockSequencerPattern - sequence triggers by a given pattern in an array\r\n- new op: Ops.WebAudio.Delay - add a delay effect to an audio stream\r\n- new op: Ops.WebAudio.MusicalScales - outputs a musical scale as strings, steps and midi note values\r\n\r\n#### HTML Ops\r\n\r\n- new op: Ops.Html.ElementClientRect - get html element absolute position and size in pixels on screen\r\n- new op: Ops.Html.ElementsPositionsByClass - Get html element absolute position and size in pixels on screen as arrays of all elements by classname\r\n- new op: Ops.Html.ElementCssTransform - translate,scale and rotate a HTML element using css transform\r\n- op enhancement: Ops.Html.DivElement_v2 - css class management not removing outside assigned classes when changing class string\r\n- op enhancement: Ops.Html.TransformElement - added option to hide element if out of current viewport\r\n- op enhancement: Ops.Html.DivElement now has a toggle to stopPropagation of click events\r\n\r\n#### Data Ops\r\n\r\n- new op: Ops.Trigger.TriggerOnChangeTexture - triggers when texture has changed\r\n- new op: Ops.Trigger.TriggerOnChangeObject - triggers when object has changed\r\n- new op: Ops.Website.LocalStorageNumber - Store and retreive a number in browser localstorage\r\n- new op: Ops.Website.LocalStorageString - Store and retreive a string in browser localstorage\r\n- new op: Ops.Array.Array1toX - convert an array1 to array2,3,4 by choosing content for new axis\r\n- new op: Ops.Array.ArraySumPrevious - Sum up every number in an array with the sum of the previous \r\n- new op: Ops.Array.ArrayIndexBetween - output index where value is greater than number and smaller then next number \r\n- new op: Ops.Json.ObjectSetArray - Set array by key in an object\r\n- new op: Ops.Json.ObjectFilterContentByKey - remove values from an object if key starts with input string \r\n- new op: Ops.Value.DelayBooleanSimple - Delay the input/output of a boolean by x seconds\r\n- op enhancement: Json Path ops - add \"found\" out-port and warn on wrong values / various tweaks fixes\r\n- op enhancement: Ops.String.Base64Decode_v2 - correctly handle dataurl input strings\r\n- op enhancement: Ops.Array.StringToCharArray - warn on null input and handle correctly\r\n- op enhancement: Ops.Net.SocketCluster.SocketClusterRecieveTrigger - can now work with triggers created with TriggerSend by using it's name\r\n- op enhancement: Ops.Net.SocketCluster.SocketClusterSendTrigger - now can send trigger name with payload\r\n\r\n#### Cables Ops\r\n\r\n- new op: Ops.Cables.CustomOp - create in-place ops and javascript snippets\r\n- new op: Ops.Trigger.TriggerReceiveFilter - receives all namedtriggers and allows for prefix filtering\r\n- op enhancement: Ops.Sequence - clean up button: disentangle ports with more then one connections\r\n\r\n#### Editor / UI\r\n\r\n- editor: rework of menubar and iconbar \r\n- editor: command palette: add zoom in/out commands\r\n- editor: patch is now marked as unsaved when changing content of an text editor tab\r\n- editor: saving a patch to the server is now compressed and much faster with bigger patches\r\n- editor: better saving animation\r\n- editor: fix cases where pressing shift+e to open first op text-editor did not work\r\n- editor: multiple text editors of same op/port is possible now. e.g. (1) is appended to title\r\n- editor: fix minimap positioning\r\n- editor: new patch navigation iconbar\r\n- editor: patch settings: toggle between automatic screenshots and manually saving screenshots\r\n- editor: icon bars show help in infoarea\r\n- editor: many ui improvements and optimizations\r\n- editor: drag dropping audio files now adds an AudioBuffer to the patch\r\n- editor: op param panel and meta panel are now merged into one tabbed panel, when there is not enough space for both\r\n- editor: pressing ctrl/cmd+enter now cycles canvas modes: normal, patch background and fullscreen\r\n- editor: exported patches are more mobile friendly / added css for disabling ontouch highlights/outlines and prevent default scrolling rubberband behaviour\r\n- editor: \"save as\" dialog now takes given name as opposed to \"copy of\" when saving\r\n- editor: invitation list is no longer shown when empty\r\n- editor: patch invite shows error message when invite fails (with unknown user)\r\n- editor: include echart library \r\n- editor: publishing of patches is now only allowed on cables.gl, not on dev\r\n- editor: keyboard shortcut tab now shows full content\r\n- editor: added p5.js to userlibraries\r\n- editor: fix bug where users where not able to view op attachments\r\n\r\n#### Website/misc\r\n\r\n- web: new patch invites are shown in mypatches dropdown and via red bubble\r\n- web: all screenshots get converted to webp and are much smaller now\r\n- web: admins and staff now also are able to accept invitations \r\n- web: fix link to newest/used op version on example patch page\r\n \r\n- discord bot: publishing a patch will now show a teaser image and author avatar\r\n- discord bot: will post when a public patch receives lots of likes and comments\r\n\r\n- backend: api reloads when changing handlebar templates\r\n- backend: change default permission for api endpoints to \"forbidden\"\r\n\r\n- wordpress plugin: fix warnings and notices with php 7.3\r\n",
            "date": 1613559428061,
            "youtubeid": ""
        },
        {
            "text": "#### Ops\r\n\r\n- new op: Ops.WebAudio.SamplePlayer - plays back one shot samples on trigger (useful for interaction sound)\r\n- new op: Ops.Html.ElementInteraction - Html element interaction events\r\n- new op: Ops.Gl.Meshes.QuadWarpTexture - Warp a texture mapped quad, useful for simple projection mapping\r\n- new op: Ops.Gl.Textures.Base64ToTexture - converts base64/data url to texture\r\n- new op: Ops.Gl.Textures.TextureToBase64 - converts texture to base64/data url\r\n- new op: Ops.Json.ArrayGetArrayByPath - returns the array at the position defined by a path\r\n- new op: Ops.Json.ArrayGetNumberByPath - finds a number at a position in an array defined by path\r\n- new op: Ops.Json.ArrayGetObjectByPath - returns the object at the position defined by a path\r\n- new op: Ops.Json.ArrayGetStringByPath - finds a string at a position in an array defined by path\r\n- new op: Ops.Json.ArrayGetArrayValuesByPath - outputs all the values of the properties of an array of objects given a path\r\n\r\n- op enhancement: Ops.WebAudio.AudioAnalyzer_v2 - add average volume back again\r\n- op enhancement: Ops.Gl.TextureEffects.Fog_v3 - remove fog modes, keep linear mode as default\r\n- op enhancement: Ops.WebAudio.AudioBuffer_v2 - set output to null when file URL is empty\r\n- op enhancement: Ops.WebAudio.Mixer - op would sometimes error when disconnecting an audio stream\r\n- op enhancement: Ops.WebAudio.Output_v2 - now shows a warning message when multiple inputs are connected\r\n- op enhancement: TypeOf now takes proper string input \r\n- op enhancement: LeftPad now takes proper string input \r\n- op enhancement: many sidebar ops now reset to default value on doubleklick \r\n- op enhancement: sidebar op now has a \"undo\" button to restore default values \r\n- op enhancement: Ops.Gl.ShaderEffects.VertexNumberLimit_v2 - add min parameter and invert toggle\r\n- op enhancement: renderGeometry - fix problem with vertex number indices not always updated\r\n- op enhancement: border - control individual sides\r\n- op enhancement: webcam fix bug where webcam is not updating when loading patch in a hidden tab\r\n\r\n\r\n- deprecated: Ops.Json.CsvJsonFile - please use CsvArray\r\n- deprecated: Ops.WebAudio.MediaPlayer - problems with some browsers, please use audiobufferplayer/sampleplayer\r\n- deprecated: Ops.Deprecated.WebAudio.AudioPlayer_v2 - problems with some browsers, please use audiobufferplayer/sampleplayer\r\n\r\n#### Editor / UI\r\n\r\n- editor: output hover graph fixed\r\n- editor: gradient editor colorpicker fixed\r\n- editor: pointCloudfromArray and Splinemesh: show warning when using an incompatible material\r\n- editor: filemanager: convert png/jpg to webp files\r\n- editor: filenames of converted files do not contain the old file extension anymore\r\n- editor: support for .avif file format images\r\n- editor: patchsettings load faster, lazyloading namespaces \r\n- editor: json structure viewer now works with arrays\r\n\r\n#### Web\r\n\r\n- web: cables editor can now be tried without being registered with limited functionality\r\n- web: mypatches menu reworked, switch between last patches and invited to patches\r\n- web: patch lists: hover patch title to see full length name\r\n- web: added more showcase projects to https://cables.gl/made-with-cables\r\n- web: faster \"my patches\" and \"create\" dropdowns\r\n- web: faster loading times using webp screenshots\r\n- web: database/file server upgraded to faster cpu and more ram\r\n- web: userops in account-settings are linked to documentation page\r\n- web: fix examples not being shown on documentation page\r\n- web: allow for comments on apikeys, show creation date\r\n- web: fix patch page opengraph thumbnail\r\n- web: op example patches are easier to spot by using an example badge\r\n- web: fix display of summary user-op page\r\n",
            "date": 1610524061868,
            "youtubeid": ""
        },
        {
            "text": "#### Ops\r\n\r\n- new op: Ops.WebAudio.AudioBufferToSplineArray - analyze audio buffer to extract peaks as an array of points for spline rendering\r\n- new op: Ops.WebAudio.CutFilter - DJ style cut filter, lowpass & highpass in one op (up to 48dB steepness)\r\n- new op: Ops.WebAudio.Mixer - 8 channel mixer with independent gain controls (to sum audio signals)\r\n- new op: Ops.WebAudio.ThreeBandEqualizer - 3 band equalizer for low - mid - high with different filter types for each band\r\n- new op: Ops.Color.RgbToHex - convert RGB float values to HEX color String\r\n- new op: Ops.Gl.OrTexture - outputs the first valid texture of the input ports\r\n- new op: Ops.Website.FilenameInfo - information about a filename, like url protocol, suffix etc\r\n- new op: Ops.Html.LoadingIndicator - show a typical web loading/progress indicator animation\r\n- new op: Ops.Gl.Shader.GetShader - get current set shader\r\n- new op: Ops.Physics.Body.PhysicsGeometryBody - create a physics body from any geometry\r\n- new op: Ops.Cables.ExitError - stop executing patch and show an error message\r\n\r\n- op enhancement: Audio ops: fix crashes when not connected properly\r\n- op enhancement: Ops.WebAudio.Gain - add UI hints, add mute button\r\n- op enhancement: Ops.WebAudio.AutoPanner - add UI hints\r\n- op enhancement: Ops.WebAudio.Convolver_v2 - add UI hints, add gain control for convolved signal, add file format hints\r\n- op enhancement: Ops.WebAudio.AudioAnalyzer_v2 - add parameters to be able to control analyzation more fine-grained\r\n- op enhancement: Ops.WebAudio.AudioAnalyzer_v2 - add both amplitude & frequency output arrays, correct average volume (RMS) calculation\r\n- op enhancement: Ops.WebAudio.AudioBuffer_v2 - add UI hints for file formats\r\n- op enhancement: Ops.WebAudio.BiquadFilter_v2 - add frequency array, input for filter response, add phase and magnitude filter response output\r\n- op enhancement: Ops.WebAudio.FFTAreaAverage_v2 - better description of input ports, choose texture size input added\r\n- op enhancement: Ops.WebAudio.Output_v2 - add mute when patch turns inactive, mute audio when patch is paused\r\n- op enhancement: Ops.WebAudio.Waveform - Add UI hints\r\n- op enhancement: Ops.WebAudio.MediaPlayer_v2 - updating to new ports, better UI\r\n- op enhancement: Ops.Gl.TextureEffect.Fog_v3 - correct density calculations, add different fog modes\r\n- op enhancement: Ops.WebAudio.WaveformMesh - creates a mesh from an audio buffer\r\n- op enhancement: Ops.WebAudio.AnalyzerTexture - creates a texture from an audio FFT array (merging of FftTexture and Analy**s**erTexture)\r\n- op enhancement: Ops.Gl.ShaderEffects.InstancedTextureColorize - added switch between add/mul blend modes\r\n- op enhancement: Ops.Devices.Mouse.MouseDrag - captures movement outside of element/window\r\n- op enhancement: Ops.Physics.World - added world solver iterations parameter\r\n- op enhancement: Ops.Physics.World - added simulate toggle to pause simulation\r\n- op enhancement: Ops.Gl.RenderAnim_v2 - create zip file for image sequences\r\n- op enhancement: Ops.Gl.Textures.TextureInfo - outputs if is hdr texture\r\n- op enhancement: Ops.Gl.Textures.TextureInfo - output identify  default textures\r\n- op enhancement: Ops.Gl.Render2Texture - show error when using mipmap and hdr at the same time\r\n- op enhancement: Ops.Gl.TextureEffects.DrawImage_v3 - fixed bug with transparent textures\r\n- op enhancement: WASD camera: can work without pointerlock now\r\n- op enhancement: Ops.Sidebar.Slider_v3 - takes real string as an input parameter\r\n\r\n- op deprecated: DocumentURL op - please use: Ops.Website.InfoURL\r\n- op renamed: RingBufferTextures to Ops.Array.TextureBufferArray\r\n- op deprecated: DynamicsCompressor\r\n\r\n#### Core\r\n\r\n- core: edit webaudio.js to not crash when not connecting an audio context\r\n- core: better patch crash error messages on screen, e.g. local file access warning / error in code \r\n- core: tweak rendering of cube bounding boxes\r\n- core: current shader source code contains info of order of active modifiers (visible in shaderInfo op e.g.)\r\n\r\n#### Editor / UI\r\n\r\n- editor: export: allow for loading of userops in iframe when on cables server\r\n- editor: export now has an option for iframe embed code\r\n- editor: export to github and build electron executables\r\n- editor: click on filename in asset details leads to page that shows patches with this asset\r\n- editor: do not show userops of other users that start with the same username-letters\r\n- editor: fix backend errormessage when cloning ops\r\n- editor: string output port preview now uses available width\r\n- editor: show error icon in menu bar when any op has an error\r\n- editor: fix crash where editor not loading correctly when switching tabs rapidly while loading a patch\r\n- editor: when cloning a patch title proposal is \"clone of xxx\"\r\n\r\n#### Web\r\n\r\n- web: new screenshots are now delivered as webp files which are way smaller\r\n- web: do not copy colloaborators on public7example patches \r\n- web: examples on documentation pages are not longer shown for ops that start with the same characters\r\n- web: everything now runs on ipv6 as well\r\n\r\n- docs: added page to explain how to report bugs in forum\r\n",
            "date": 1608540529041,
            "youtubeid": ""
        },
        {
            "text": "- op enhancement: fix ios/safari bug with instancing/phongmaterial etc.\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v3 - round points antialias option\r\n- op enhancement: Ops.Gl.ForceCanvasSize: added \"scale to fit\" option\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4: wheight input\r\n- op enhancement: Ops.Gl.Matrix.OrbitControls also captures mousemovement outside of canvas/window\r\n- op enhancement: Ops.Gl.TextureEffects.CircleTexture_v3 - better y coordinates\r\n- op enhancement: Ops.Array.ArrayMerge_v3 - allow more arrays to be merged\r\n- op enhancement: Ops.Gl.Shader.Shader2Texture - fix crash when no shader is connected\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v2 - added \"loaded\" output port\r\n- op enhancement: Ops.Gl.Phong.DirectionalLight_v5 - framebuffer only gets instantiated when cast shadow is active, code optimization\r\n- op enhancement: Ops.Gl.Phong.SpotLight_v5 - framebuffer only gets instantiated when cast shadow is active, code optimization\r\n- op enhancement: Ops.Gl.Phong.PointLight_v5 - framebuffer only gets instantiated when cast shadow is active, code optimization\r\n- op enhancement: Ops.Net.Mqtt.Mqtt_v2 - new string inputs, connection error handling, works with new shiftr.io #\r\n- op enhancement: Ops.Net.Mqtt.MqttReceive_v2 - removed message type, added typed out-ports, renamed out-object\r\n- op enhancement: Ops.Net.Mqtt.MqttSend_v2 - renamed out-object to not conflict with in-object\r\n- editor: fix annoying bug when changing a value looses input field focus when op shows error message\r\n- editor: renamed ops and adjusted naming\r\n- web: better lazy load of user icons\r\n- web: community dropdown / feature discord more prominent\r\n- web: better preview meta images when sharing URLs\r\n",
            "date": 1606810567371,
            "youtubeid": ""
        },
        {
            "text": "read our blog post about the november update: https://blog.cables.gl/2020/11/20/november-update-2/\r\n\r\n\r\n\r\n\r\n#### Editor / Ui\r\n\r\n- editor: op search: fixed lag and unexpected change of results... / grey out while searching/waiting\r\n- editor: op search: penalty points for old version of ops\r\n- editor: op search: when pressing enter while still searching wait for result to show up then add upmost op\r\n- editor: search: show extended title content in search results\r\n- editor: fix shift resizing (to keep aspect ratio) not working every time\r\n- editor: faster canvas resize\r\n- editor: preference to hide the icon sidebar\r\n- editor: fix infoarea resize/close problems\r\n- editor: helper meshes only drawing when op is really selected\r\n- editor: subpatch list highlights active subpatch\r\n- editor: subpatch list now also shows main subpatch  \r\n- editor: better handling of large strings in param panels\r\n- editor: fix boolean display, always true or false now (not 0)\r\n- editor: user preferences: choose background pattern for transparent canvas\r\n- editor: patch asset loading will now start only after the editor is fully initialized\r\n- editor: op selector fix: some information was hidden\r\n- editor: bright mode button color\r\n- editor: upgrade button works better with ports that changed capitalization\r\n- editor: texture preview is now sticky / must be closed via new close button\r\n- editor: keyboard shortcuts are now scrollable\r\n- editor: texture previewer now also shows cubemaps and depthmaps\r\n- editor: disabling ops now only disables selected ops, not childs / fix crash\r\n- editor: profiler: shows how many ops are active currently\r\n- editor: profiler: group by subpatches functionality\r\n- editor: profiler: group ops by name (e.g. see all time used by \"transform ops\")\r\n- editor: better warning when upgrading ops\r\n- editor: canvas magnifier lens and colorpicker helper \r\n- editor: file library: fbx and obj files are not automatically converted to glb/gltf files after upload\r\n- editor: file library: add GLTF/GLB versions of example 3d files\r\n- editor: file library - added new head gltf model\r\n- editor: file library: use newest version of AudioPlayer as default op for audio files\r\n- editor: find - search for ops with errors/warnings/hints\r\n- editor: pressing shift+e opens the 1st string port on an op\r\n- editor: timeline splitter element no longer renders over the editor tab\r\n- editor: patch settings now show legal information \r\n- editor: json-explorer on outObject and outArray \r\n- editor: attachments are now correctly loaded after edit and reload of editor \r\n- editor: on cloning an op markdown documentation and layout information is retained \r\n- editor: json is now being syntax-highlighted in ParseObject and StringEditor \r\n- editor: cloning an op copies libs and corelibs over to the new op \r\n- editor: \"you dont own this patch\" no longer shown for collaborators \r\n- editor: show which collaborators are being copied over on \"save as\" \r\n- editor: export now allows for not exporting backup files, default is to include them \r\n- editor: export of patches with url-reserved characters now possible \r\n- editor: saving patch when someone else makes changes works now (again) \r\n\r\n#### New Ops\r\n\r\n- new op: Ops.Gl.ShaderEffects.InstancedTextureColorize - colorize instanced meshes using a texture\r\n- new op: Ops.Gl.ShaderEffects.InstancedDisplacementMap - displace positions of instanced meshes using a texture\r\n- new op: Ops.Gl.TextureToPointArray3 - Generate an array3 of grid positions from a texture\r\n- new op: Ops.Gl.Identity.ResetTransform - reset current transforms to initial value (identity)\r\n- new op: Ops.String.UUID - outputs a unique identifier \r\n- new op: Ops.Array.Array3FlipAxis - flip xyz axis of an point array\r\n- new op: Ops.Gl.ShaderEffects.VertexColorAsAlpha - Use mesh vertexcolor as Alpha/Opacity\r\n- new op: Ops.Gl.TextureColorPick - get the color of a pixel in a texture\r\n- new op: Ops.Boolean.OrNumber - Output another number if input number is zero/false\r\n- new op: Ops.Gl.GLTF.GltfMeshSequence - Switch between meshes e.g. like a stop motion animation\r\n- new op: Ops.Gl.TextureEffects.SkewStretchImage -skew / stretch an image by rendering scaled sides\r\n- new op: Ops.Sidebar.LocalFileToDataUrl - load a local file and output as data url\r\n- new op: Ops.Vars.VariablesAsObject - outputs an object containing all variables\r\n- new op: Ops.Gl.TextureEffects.Alpha - Modify current alpha/opacity\r\n- new op: Ops.Date.DateFormatter - String representation of a date\r\n- new op: Ops.Date.DateCalc - Perform date calculations\r\n- new op: Ops.TimeLine.PreRender - Render the patch at certain times \r\n- new op: Ops.Array.ArrayPushString - Push/Append a string to the end of an array\r\n- new op: Ops.Array.CutArray - Cut an array from the beginning and/or the end\r\n- new op: Ops.Array.Array3AreaRemove - remove points from an array3 with different shapes\r\n- new op: Ops.WebAudio.AudioPanner - pan an audio signal from left to right\r\n- new op: Ops.Array.StringToCharArray - converts a string to an array of characters\r\n- new op: Ops.Points.PointsPlane_v2 - now has correct rows and columns. Can now have a row or column length of 1 \r\n- new op: Ops.Trigger.SwitchTrigger - route triggers in to a single output\r\n- new op: Ops.Gl.TextureEffects.RGBOffset - offsets xy components of an rgb texture \r\n- new op: Ops.Gl.ShaderEffects.AreaScaler_v3 - added clamp mode\r\n- new op: Ops.HTML.Notification - Simple pop up notification which fades in and out.\r\n- new op: Ops.Points.PointsHexagonGrid - generates a hexagonal grid of points\r\n- new op: Ops.Gl.TextureEffects.Noise.LayerNoise_v2 - exponent parameter now works.\r\n- new op: Ops.Json.ObjectGetArrayByPath gets an array at the \"path\" of a json object or array\r\n- new op: Ops.Json.ObjectGetNumberByPath gets a number at the \"path\" of a json object or array\r\n- new op: Ops.Json.ObjectGetObjectByPath gets an object at the \"path\" of a json object or array\r\n- new op: Ops.Json.ObjectGetStringByPath gets a string at the \"path\" of a json object or array\r\n- new op: Ops.Json.ObjectGetArrayValuesByPath gets the values of each element at a \"path\" in a json object or array\r\n- new op: Ops.Api.TeachableMachines.AudioClassifier - Use the Teachable Machines audio classifier for your microphone. Insert the uploaded model URL.\r\n- new op: Ops.Api.TeachableMachines.ImageClassifier - Use the Teachable Machines image classifier. Insert the uploaded model URL.\r\n- new op: Ops.Api.TeachableMachines.PoseDetection - Use the Teachable Machines pose detection with your webcam. Insert the uploaded model URL.\r\n\r\n#### Op enhancement and fixes\r\n\r\n- op enhancement: Ops.Html.FontFile_v2 - ops that use fonts will refresh after font has finished loading\r\n- op enhancement: Ops.Gl.Textures.WebcamTexture_v2 - fix problems on ios and firefox\r\n- op enhancement: Ops.Gl.Textures.WebcamTexture_v2 - can be used as html element (and styled)\r\n- op enhancement: Ops.Gl.Textures.WebcamTexture_v2 - now outputs html video element\r\n- op enhancement: Ops.Gl.FontMSDF_v2 better error handling when using invalid files\r\n- op enhancement: mesh3d output no geometry when no trigger connected, or invalid file\r\n- op enhancement: Ops.Patch.PlayButton - button style sheet can now be edited\r\n- op enhancement: Ops.Html.BackgroundImage_v2 - correctly reload updated files after uploading\r\n- op enhancement: Ops.Physics.CastRay - option to change cursor to pointer when hovering\r\n- op enhancement: Ops.Physics.CastRay - now also continues to work when changing the array constantly\r\n- op enhancement: Ops.Physics.CastRay world/raycast debug bounding box changes color on hover\r\n- op enhancement: Ops.Html.Cursor_v2 - cursor ops are more reliant to use and can be used in normal rendering flow\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v3 - colorize checkbox for texture\r\n- op enhancement: Ops.Gl.ShaderEffects.AreaTfirranslateMeshes_v2 - axis multiply\r\n- op enhancement: Ops.Gl.Meshes.TextMesh_v2 - fixed vertex order for face culling\r\n- op enhancement: Ops.Gl.Textures.VideoTexture_v2 - better error handling / string file input etc\r\n- op enhancement: Ops.Gl.ShaderEffects.ColorArea_v3 - opacity mode\r\n- op enhancement: Ops.Gl.Meshes.Cylinder_v2 - added flat shaded option\r\n- op enhancement: Ops.Gl.Matrix.ScreenCoordinates - fix to work with hdpi displays\r\n- op enhancement: Ops.Gl.Performance - do now show anything when not connected\r\n- op enhancement: Ops.Html.AppendChild_v2 / elementchilds ./ divelement: fixed buggy behaviour when changing parent of an element\r\n- op enhancement: Ops.Gl.Shader.Shader2Texture render to multiple textures with one shader\r\n- op enhancement: Ops.Gl.Texture_v2 / Ops.Gl.Textures.VideoTexture_v2 - filename port now also works with data urls/base64 encoded images (see Ops.Sidebar.LocalFileToDataUrl)\r\n- op enhancement: Ops.Gl.Textures.VideoTexture_v2 - better error handling\r\n- op enhancement: Ops.Gl.GradientTexture - now has radial mode\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v3 - texture input for pointsize\r\n- op enhancement: Ops.Html.TransformElement - optimized performance\r\n- op enhancement: Ops.Gl.Render2Texture - wrap mode select\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - fix: lineheight should not apply to first line\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - fix: better height vertical calculation\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - fix: lineheight directly bound to fontsize\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - fix: line offset : offset to adjust line size rendering problems with crazy fonts...\r\n- op enhancement: Ops.Html.VideoElement - finished trigger\r\n- op enhancement: Ops.Html.VideoElement - error message and bool output \r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v3 - fixed colorize option crashing\r\n- op enhancement: Ops.Gl.TextureEffects.Waveform_v2 - fix for webgl1\r\n- op enhancement: Ops.Gl.PixelProjection: fixed on hdpi displays\r\n- op enhancement: Ops.Gl.TextureEffects.ImageCompose_v2 - correct transparent background by default\r\n- op enhancement: Ops.Gl.TextureEffects.DrawImage_v3 - fixed bugs with transparent images\r\n- op enhancement: Ops.Gl.MeshMorph - fix shader compile problem / show warning when meshes dont have the same amount of vertices\r\n- op enhancement: Ops.Physics.PhysicsBodiesArray - basic physics simulation\r\n- op enhancement: Ops.Anim.InOutInAnim - now has a hold duration \r\n- op enhancement: Ops.Gl.Shader.Shader2Texture - displays a warning when Mipmap and HDR is enabled \r\n- op enhancement: Ops.Gl.Matrix.WASDCamera_v2 - pointerlock can now be enabled or disabled\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - fix: no longer crashes when creating vec4 uniforms\r\n- op enhancement: Ops.Gl.Textures.VideoTexture - fix: updates textures correctly when they change\r\n- op enhancement: Ops.Gl.Textures.VideoTexture - fix: no longer crashes when filter or wrap modes change\r\n- op enhancement: Ops.Gl.Meshes.Circle - fix: no longer crashes when percent is less than zero\r\n- op enhancement: Ops.Points.PointsPlane - fix: no longer divides by zero when rows or columns is set to 1\r\n- op enhancement: Ops.Gl.Meshes.Cube_v2 - fix: now outputs the geometry object again when trigger in is reconnected.\r\n- op enhancement: Ops.Array.ArrayMathArray - fix: now outputs null if only one array is connected\r\n- op enhancement: Ops.Gl.TextureEffects.Noise.LayerNoise - fix: scale, layers and factor parameters now work again\r\n- op enhancement: upgraded many ops to new URL input / String type ports\r\n- op enhancement: Ops.Array.ArrayUnique - add xy & xyz option to uniqability, add length output, optimized\r\n- op enhancement: Ops.Gl.Meshes.Cone - deactivating \"active\" now triggers next ops\r\n- op enhancement: Ops.Gl.ShaderEffects.Shadow_v2 - fix bug where op would start triggering when switching discard option, better warnings\r\n- op enhancement: Light Ops: add \"Cast Light\" option to disable light casting, \r\n- op enhancement: Light Ops: add \"Rendering Active\" input to be able to render shadow map only once, \r\n- op enhancement: Light Ops: change default parameters for shadows, \r\n- op enhancement: Light Ops: add world position XYZ out, \r\n- op enhancement: Light Ops: fix bug where clear color was not set with cast shadow option enabled\r\n- op enhancement: Ops.Html.BrowserSpecificFile_v2 - updated old ports, properly detecting browsers now using platform.js\r\n- op enhancement: Ops.Html.BrowserCheck_v3 - updated old ports, properly detecting browsers/os/platform now (with platform.js) on any OS\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - output texture now always updated when colors are changed, minor tweaks\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v4 - fix bug where output texture would not update colors\r\n- op enhancement: Ops.Gl.Phong.LambertMaterial_v2 - add \"Cast Light\" options to shader, minimize amount of uniforms, speedup \r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - you can now set an environment reflection map\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - fix WebGL1/iOS compatibility, minimized amount of uniforms, speedup\r\n- op enhancement: Ops.Gl.Shader.MatCapMaterialNew_v3 - rework material rendering, correct screen space normals & normal map\r\n- op enhancement: Ops.Gl.Shader.MatCapMaterialNew_v3 - add normal map intensity, works properly with mesh instancer now\r\n- op enhancement: Ops.Gl.Shader.MatCapMaterialNew_v3 - rename ports so its clearer what they do\r\n- op enhancement: Ops.Gl.CubeMap.CubeMapMaterial_v2 - add tex coords to vertex shader so displacement works\r\n- op enhancement: Ops.WebAudio.AudioBufferPlayer_v2 - better error handling, add restart button, added isPlaying output, removed hasFinished output\r\n- op enhancement: Ops.WebAudio.AudioBufferPlayer_v2 - now prevent clicks and pops when restarting\r\n- op enhancement: Ops.Gl.TextureEffects.DepthTextureFocus_v2 - use real distances instead of 0 - 1 range, better usability\r\n- op enhancement: Ops.Gl.TextureEffects.Fog_v3 - use real distances instead of 0 - 1 range, better usability\r\n\r\n#### Website\r\n\r\n- web: possiblity for user to delete own account \r\n- web: order by patchname on \"my patches\" page \r\n- web: namespaces of shared patches are now selectable in namespace dropdown on \"my patches\" \r\n- web: allow for admins to schedule release/maintenance and show to logged in users \r\n- web: bigger warning for users that are on the dev environment \r\n- web: landingpage is no longer shown on dev/nightly, redirect to /login \r\n- web: searchfield in top-nav now includes shared patches in extra tab \r\n- web: speedup of \"my patches\" dropdown and all pages showing lot's of screenshots \r\n- web: stop scrolling when using mousewheel on patch\r\n- web: fps not dropping to 30 when watching a patch fullscreen\r\n- web: docs: styling and formatting tweaks\r\n- web: docs: link to github page\r\n- documentation : Added section how to convert shadertoy patches into the cables equivalent. \r\n- documentation : Added guide on how to get started with VR inside of cables\r\n- documentation: add webgl1 & 2 differences section to docs\r\n\r\n#### Core\r\n\r\n- core: shaderEffects keeping gl primitive setting (e.g. pointmaterial did not work with certain shadereffects)\r\n- core: put under MIT licence \r\n- core: remove duplicate unused uniforms before compiling shader\r\n- core: copy extensions to new shader when copying a shader\r\n- core: corelibs - cubemapframebuffer - remove clear color at renderEnd() (for PointLight clear color fix)\r\n\r\n#### Export\r\n\r\n- exported patch: canvas now has tabindex property/ so that it can receive kreypresses\r\n- exported patch: fixed a bug when embedding and initializing non existing variables\r\n- exported patch: finishedLoading callbacks first parameter is now patch object \r\n- exported patch: now include legal.txt with licence information \r\n- cables-cli: command line export now allows for skipping of backup export using the `-b` switch \r\n\r\n",
            "date": 1605866377078,
            "youtubeid": ""
        },
        {
            "text": "#### New Ops\r\n\r\n- new op: Ops.Gl.Meshes.SplineMesh_v2 - draw splines/lines - new spline rendering system\r\n- new op: Ops.Gl.Meshes.SplineMeshMaterial_v2 - material for new spline meshes\r\n- new op: Ops.Gl.ShaderEffects.Shadow_v2 - new shadow rendering system - add shadow receiving capabilities to any material\r\n- new op: Ops.Gl.ShaderEffects.FresnelGlow - add fresnel glow to any material\r\n- new op: Ops.Gl.ShaderEffects.TextureProjection - texture projection on meshes\r\n- new op: Ops.Gl.GLTF.GltfTexture - load textures from inside a .glb file\r\n- new op: Ops.Gl.GLTF.GltfNodeTransform - get current transformation of a gltf node\r\n- new op: Ops.Gl.GLTF.GltfTransformNode - Set transformation of a gltf node\r\n- new op: Ops.Gl.GLTF.GltfPhysicBodies - create physics bodies/bounding boxes for gltf nodes\r\n- new op: Ops.Math.MathExpression - calculate a mathematical function with up to 4 values\r\n- new op: Ops.Gl.CubeMap.EquirectangularTextureToCubemap - convert equirectangular texture to cubemap\r\n- new op: Ops.Gl.CubeMap.CubemapToEquirectangularTexture - visualize cubemap (either as equirectangular or as folded cubemap)\r\n- new op: Ops.Gl.CubeMap.Skybox - add skybox to scene with equirectangular or cubemap texture\r\n- new op: Ops.Array.ArrayMathExpression - calculate a mathematical function with up to 3 arrays and 3 numbers\r\n- new op: Ops.String.ArrayContainsString - Check if an array contains a string\r\n- new op: Ops.Gl.Matrix.QuaternionCamera - Set up a camera, rotated by a quaternion\r\n- new op: Ops.Array.ArrayOfArrays - Create an array filled with other arrays\r\n- new op: Ops.Array.ArraySetString - set string in an array\r\n- new op: Ops.Array.ArrayGetString - get string from an array\r\n- new op: Ops.Gl.Geometry.GeometryBoundingBox - Calculate a bounding box from a geometry\r\n- new op: Ops.Gl.Geometry.BoundingBoxVisible - Test if a boundingbox could be visible in the current viewport\r\n- new op: Ops.Geometry.BoundingBox - create a simple bounding box from width,height,depth\r\n- new op: Ops.Physics.PhysicsBodiesArray - create an array of physics bodies and add them to current world\r\n- new op: Ops.Html.VideoElement - html video player element\r\n- new op: Ops.Array.ArrayGetTexture - get a texture from an array\r\n- new op: Ops.Gl.SurfaceScatter_v2 - outputs arrays to use with e.g. meshinstancer\r\n- new op: Ops.Gl.ValidTexture - output current input texture or if invalid an empty/default texture\r\n- new op: Ops.Geometry.GeometryToWireframeArray3 - generate an array of lines from a mesh to render a wireframe\r\n- new op: Ops.String.StripHtml - remove html tags from a string\r\n- new op: Ops.Gl.Geometry.GeometryMergeSimple - merge two geometries\r\n- new op: Ops.Values.SequenceObjects - control order and flow of objects\r\n- new op: Ops.Values.SequenceNumbers - control order and flow of numbers\r\n- new op: Ops.Values.SequenceStrings - control order and flow of strings\r\n- new op: Ops.Html.CSSPropertyString - Modify a CSS property with a string.\r\n- new op: Ops.Trigger.TriggerIfIncreased - Outputs a trigger if the value of a number increases.\r\n\r\n#### Op Enhancements and fixes\r\n\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - speedup (shader code generation on the fly)\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - default light at cam position, warning when default light is used, \r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - new falloff modes\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - add emissive color parameters\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - various fixes (new op version)\r\n- op enhancement: Ops.Gl.Phong.PhongMaterial_v5 - environment reflection maps\r\n- op enhancement: Ops.Gl.Phong.PointLight_v5 - add shadow casting capabilities\r\n- op enhancement: Ops.Gl.Phong.SpotLight_v5 - add shadow casting capabilities\r\n- op enhancement: Ops.Gl.Phong.DirectionalLight_v5 - add shadow casting capabilities\r\n- op enhancement: Ops.Sidebar.Sidebar is correctly positioned when choosing position \"right\"\r\n- op enhancement: Ops.Gl.TextureEffects.LumaKey_v2 - now has a high and low threshold to refine selection.\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v2 - expose whole a transformation hierarchie tree\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v2 - camera support\r\n- op enhancement: Ops.Gl.GLTF.GltfNode_v2 - fix bug with transformation being applied even when option is unchecked \r\n- op enhancement: Ops.Physics.World - world draws bodies\r\n- op enhancement: Ops.Physics.CastRay - fix various things for better raycasting/picking of objects\r\n- op enhancement: Ops.Physics.Body.PhysicsCube_v2 - name input for easier identification of picked objects\r\n- op enhancement: Ops.Html.IFrame_v3 - update to behave like other html element ops\r\n- op enhancement: Ops.Gl.Shader.ShaderInfo - more information about the current state (uniforms/defines/texturestack etc)\r\n- op enhancement: Ops.Gl.Shader.ShaderInfo - now can show information about uniforms \r\n- op enhancement: Ops.Gl.Textures.TextTexture_v3 - has gl filter selection / color\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v3 - added automatic line wrapping when maximize size is disabled\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v3 - added option to limit number of lines\r\n- op enhancement: Ops.Gl.Textures.TextTexture_v3 and textMesh - now have texture filter and anisotropy options \r\n- op enhancement: Ops.Gl.Performance - shows how long it took to compile all shaders\r\n- op enhancement: Ops.Gl.ShaderEffects.MeshPixelNoise_v2 - added blendmodes switch\r\n- op enhancement: Ops.Gl.Performance - shows total number of glPrimivites (triangles/points) currently rendered\r\n- op enhancement: Ops.Gl.Matrix.OrbitControls - reset moves to initial values, not to zero, also takes the shortest way to the goal\r\n- op enhancement: Ops.Gl.MainLoop - option to reduce FPS when window is not focussed to reduce load\r\n- op enhancement: Ops.Gl.Shader.CustomShader_v2 - not connected uniform texture ports now bind striped defaulttexture\r\n- op enhancement: Ops.Gl.TextureEffects.DrawImage_v2 - clip repeat is now transparent, not just black\r\n- op enhancement: Ops.Gl.GradientTexture - fix bug where colors in gradient did not change /  firefox compatibility\r\n- op enhancement: Ops.Html.FullscreenMode - switch between whole document or just canvas becoming fullscreen\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v3 - removed premultiplied alpha option - use blendmode op!\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v3 - select alpha method (R/A/Luminance)\r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v3 - added option to set the absolute pixel size of points\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v3 - \"calculate normals\" parameter for better lighting \r\n- op enhancement: Ops.Gl.MeshInstancer_v4 - can switch between euler/quaterion array input\r\n- op enhancement: Ops.Net.WebSocket.WebSocket - updated string type input\r\n- op enhancement: Ops.Value.DelayedValue - fixed memory leak, does not slow down after a while\r\n- op enhancement: Ops.Gl.Phong.LambertMaterial_v2 - add warning when default light is used\r\n- op enhancement: Ops.Midi.MidiNote - Add normalization of velocity values to array output\r\n- op enhancement: Ops.Gl.Debug - add boolean for shadowpass\r\n- op enhancement: Ops.Array.ShuffleArray3 - better random randomness\r\n- op enhancement: Ops.Html.DivElement_v2 - now updates to the CSS style in patch when css property ops are disconnected.\r\n- op enhancement: Ops.Html.DivElement_v2 - gives a warning if external CSS and inline CSS styles are used at the same time.\r\n- op enhancement: Ops.Sidebar.Toggle_v2 - now displays all text correctly\r\n- op enhancement: Ops.Trigger.TriggerString - fix: Will always output the string when triggered.\r\n- op enhancement: var getter/setter - fixed bug where var list was not up to date\r\n- op enhancement: var getter/setter - array,object,texture / better ui / rewrite internally\r\n- op enhancement: Ops.Html.CSSProperty_v2 - now shows the property next to the opname \r\n- op enhancement: Sidebar ops - many new versions with new string input port for text\r\n- op enhancement: Ops.String.StringEditor now has \"html\" and \"xml\" option for syntax checking/highlighting\r\n- op enhancement: Ops.Net.CorsProxy handles (multiple) redirects now\r\n- op enhancement: Ops.Gl.TextMeshMSDF now hints at the font data being created/provided by Ops.Gl.FontMSDF\r\n- op enhancement: Ops.Json.AjaxRequest_v2 - now is able to do more parameters for HTTP requests (method, contenttype, ...)\r\n- op enhancement: Ops.Json.AjaxRequest_v2 - can now be told to not parse the output as JSON and always gives a string\r\n\r\n#### User interface Editor\r\n\r\n- UI: upgrade button for outdated ops\r\n- UI: fix \"create variable\" button in op select dialog\r\n- UI: texture preview is now behind patchfield\r\n- UI: when leaving a port value input field with an invalid value, reset value to last valid\r\n- UI: pressing shift while resizing renderer will keep aspect ratio\r\n- UI: filemanager: better automatic file type to op assignment\r\n- UI: you can now upload and use webp files as textures\r\n- UI: inspect output objects: values are now syntax highlighted\r\n- UI: inspect output objects: now show unescaped html characters\r\n- UI: inspect output objects: can now be searched using browser search (ctrl/cmd+f)\r\n- UI: \"patch statistics\" command\r\n- UI: when copy pasting linked values, the current value of the link is copied (when output op is not selected)\r\n- UI: ops can now filter by file suffixes, not only by file type\r\n- UI: command palette: scrolling via cursor keys now also scrolls the whole list\r\n- UI: fixed problem where parameter panel was too large, when using the command \"scale renderer\" < 1\r\n- UI: fix: backups were not showing up anymore when patch gets bigger\r\n- UI: op attachment editor now can open multiple editor for attachments that have the same name\r\n- UI: fix a bug where it showed an nonsense exception when opening an op attachment editor\r\n- UI: fixed bug where changing the title did not work\r\n- UI: fix crash when clicking (+) button to add a texture op\r\n- UI: fix syntax highlighting/error checking for plain text editors\r\n- UI: fix FPS counter below renderer when limiting FPS\r\n- UI: port values in parameter panel are now always displayed without exponent notation\r\n- UI: object output parameter panel now indicates if a object is null\r\n- UI: file library: removed old files/nonsense files etc. / added glb example files\r\n- UI: editor: url parameters are copied to editor frame, so you can use UrlQueryParams ops to read parameters in the editor\r\n- UI: texteditor: core-ops now format code on save, userops present a \"format\" button on the editor\r\n- UI: when adding a lib or corelib to an op a modal suggests a reload of the page\r\n\r\n#### Serverside and Access Rights\r\n\r\n- server exporter: skip duplicate files in zip file \r\n- server exporter: exported patches show an error message when trying to load files without a webserver\r\n- server: \"make owner\" now works for non-admins, button is only being shown for owner\r\n- server: collaborators are now copied over to projects when using \"save as\"\r\n- server: userops are now \"shareable\" in public patches and between collaborators\r\n- server: corelibs and libs that are attached to userops are now being loaded for collaborators\r\n- server: userops are now available for collaborators on a project\r\n- server: userops are now shared between live/dev/nightly\r\n\r\n#### Core changes\r\n\r\n- core: shader respect the hierarchy and extend copies of current shader\r\n- core: patches with lots of ops load a lot faster now\r\n- core: fix bug with blendmode problems/premultiplied colors\r\n- core: fix rare bug producing corrupted textures when loading a new one while old url was still being loaded\r\n- core: fix problems with google swiftshader compatibility\r\n- core: new way of using internal core libs for ops\r\n- core: rewrite cubemap handling\r\n\r\n#### Website\r\n\r\n- web: udpated showcase page: https://cables.gl/made-with-cables\r\n- web: /browser rewrite / more params and linkable results\r\n- web: docs also show \"hidden\" ports \r\n- web: patch page: show edit button only if user has rights to edit (e.g. secret urls)\r\n\r\n#### Docs\r\n\r\n- docs: docs are now more integrated: https://cables.gl/docs/docs\r\n- docs: open sourced documentation: https://github.com/cables-gl/cables_docs\r\n- docs: added faq transparent patch https://dev.cables.gl/docs/faq/embedding/transparent_canvas/transpcanvas\r\n",
            "date": 1596120504745,
            "youtubeid": ""
        },
        {
            "text": "#### Editor user interface \r\n\r\n- UI: undo/redo - fix bugs/add many more actions\r\n- UI: undo/redo - grouping of multiple actions\r\n- UI: undo/redo - Visual undo history list in meta tabs\r\n- UI: preferences - new option for wheelmode - set this to mousewheel if your mousewheel is scrolling / not zooming\r\n- UI: preferences - switch between minimalistic or full op search dialog\r\n- UI: search results - highlight subpatch name when in current subpatch\r\n- UI: search for :outdated - show ops that could be replaced with a newer version or are deprecated\r\n- UI: patch-export - now shows patch variables and exports them to docs.md (again)\r\n- UI: patch-export - now shows callbacks provided by the patch and exports them to docs.md\r\n- UI: op params - show value for connected string input ports\r\n- UI: op params - download button next to file inputs\r\n- UI: subpatch navigation fix positioning\r\n- UI: canvas info area - show webgl version, if not default/v2\r\n- UI: subpatch list is now sorted by name\r\n- UI: fix bug where FPS was counted wrong and too big\r\n\r\n#### Website\r\n\r\n- Web: more projects were added to \"made with cables\" https://dev.cables.gl/made-with-cables\r\n- Web: better signup email confirmation workflow\r\n- Web: repository for docs: https://github.com/cables-gl/cables_docs\r\n- Web: fix: loggedin users can now see patches that they have a secret-url for\r\n\r\n#### Ops enhancements and fixes\r\n\r\n- op enhancement: Ops.Gl.GLTF.GltfScene_v2: hide nodes by names that are in input string array\r\n- op enhancement: Ops.Gl.TextureEffects.RectangleTexture_v3 - added centered mode for easier positioning\r\n- op enhancement: Ops.Gl.ShaderEffects.VertexDisplacementMap_v2 - colorize options fixed and better control via min/max parameters\r\n- op enhancement: Ops.Gl.Meshes.Cube_v2 - select which sides to show / texture mapping bias input / correct mapping of cubemaps\r\n- op enhancement: Ops.Devices.Mouse.Mouse_v2 - added parameter to en/disable touch support  \r\n- op enhancement: Ops.Gl.Shader.PointMaterial_v2 - new texture port for colorize \r\n- op enhancement: Ops.Array.Array_v2 - change order of ports, so length is first port\r\n- op enhancement: Ops.Gl.TextureEffects.FastBlur - clamp functionality to stop overbleeding\r\n- op enhancement: Ops.Gl.TextMeshMSDF_v2: - better converting\r\n- op enhancement: Ops.Gl.TextMeshMSDF_v2: - border around characters\r\n- op enhancement: Ops.Gl.FontMSDF_v2: - reload files when reuploaded\r\n- op enhancement: Ops.WebAudio.TextToSpeech.Say_v2 - has string type input for text\r\n- op enhancement: Ops.Value.TriggerOnChangeNumber outputs the current number, for convenience\r\n\r\n- op fix: Ops.Gl.GLTF.GltfScene_v2 - bug when centering was not working when loading the patch\r\n- op fix: Ops.Gl.GLTF.GltfScene_v2 - switch normals checkbox is respected by gltfnode child ops\r\n- op fix: Ops.Json.ObjectIsNull now updates nullcheck on change\r\n- op fix: Ops.Array.ReduceArray3_v2 - does not add null objects to array\r\n- op fix: Ops.Boolean.IfTrueThen_v2 - will no longer trigger output ports without input trigger connected\r\n- op fix: Ops.Gl.FontMSDF_v2 fix error when exporting patches using library fonts\r\n- op fix: Ops.Points.PointsSphereRandom - fix negative array length bug\r\n- op fix: Ops.Points.PointsSphereRandom - generate output array when creatign op\r\n- op fix: Ops.Gl.Textures.VideoTexture show error message if video is not loadable\r\n- op fix: Ops.Gl.CubeMap.CubeMapMaterial_v2: - works with WebGL1 now\r\n\r\n#### New ops\r\n\r\n- new op: Ops.Array.ArraySetNumber3 - set number values in an array3 \r\n- new op: Ops.String.OrString - outputs the first valid string\r\n- new op: Ops.Gl.Textures.TextTexture_v3 : can now render text directly / includes hard edges shader\r\n- new op: Ops.Gl.GLTF.GltfNodeTransforms - get transforms of multiple nodes as an array\r\n- new op: Ops.Array.RouteArray - Route an array to an output port\r\n- new op: Ops.Json.RouteObject - Route an object to an output port\r\n- new op: Ops.String.RouteString - Route a string to an output port\r\n- new op: Ops.Boolean.RouteBoolean - Route a boolean to an output port\r\n\r\n#### core\r\n\r\n- core: fix: it was possible to create textures bigger than allowed by webgl implementation\r\n- core: fix: cases when op libraries where not loaded\r\n- core: core is now able to load \"modules\" seperatly, export only consinsts of used modules\r\n- core: ability to load and export core libraries as they are used\r\n\r\n",
            "date": 1590134256917,
            "youtubeid": ""
        },
        {
            "text": "#### New ops\r\n\r\n- new op: Ops.Gl.TextMeshMSDF_v2 - Draw text using MSDF rendering\r\n- new op: Ops.Gl.FontMSDF - Define a MSDF font\r\n- new op: Ops.Gl.TextureEffects.Noise.HexagonNoise - Hexagonal Noise texture\r\n- new op: Ops.Lottie.LottieTexturePlayer - Play a Lottie animation in a texture\r\n- new op: Ops.Gl.Shader.BasicMaterial_v3 - Internal changes optimized shader/better texture handling \r\n- new op: Ops.Gl.Meshes.FloorGrid - draw a grid on the floor\r\n- new op: Ops.Html.YoutubePlayer - play a youtube video in a HTML element\r\n- new op: Ops.Html.ModalOverlay - create a modal HTML overlay with a darkened background\r\n- new op: Ops.Html.WindowClose - Close current window\r\n- new op: Ops.Website.ForceHttps - will redirect to same URL using https protocol\r\n- new op: Ops.String.LoremIpsum - Lorem ipsum dolor sit amet\r\n- new op: Ops.String.AddLineBreaks - Insert a linebreak after n characters\r\n- new op: Ops.String.LineBreaksHtml - Convert linebreaks to html breaks\r\n- new op: Ops.Array.ArraySetNumber - set a number at index in an array\r\n- new op: Ops.Trigger.IsTriggered - outputs true if was triggered last frame\r\n- new op: Ops.Trigger.TriggerString - trigger a string\r\n- new op: Ops.Debug.ConsoleLog - output values to the console\r\n- new op: Ops.Vars.VarSetTexture - Set a texture variable\r\n- new op: Ops.Vars.VarGetTexture - Get a texture variable\r\n- new op: Ops.String.FilterValidString - Filter valid strings (not null,undefined or empty)\r\n- new op: Ops.Value.FilterValidNumber - Filter valid numbers\r\n- new op: Ops.Array.FilterValidArray - Filter valid arrays\r\n- new op: Ops.Json.FilterValidObject - Filter valid objects\r\n- new op: Ops.Json.ObjectSetString - set string value in an object by key\r\n- new op: Ops.Boolean.BoolToString - convert boolean to string\r\n- new op: Ops.Gl.Textures.SwitchTextures_v2 - now only works when triggered\r\n- new op: Ops.Gl.TextureEffects.Stripes_v3 - draws on top of other textures without blend modes\r\n- new op: Ops.Gl.TextureEffects.Waveform_v2 - draws on top of other textures without blend modes\r\n- new op: Ops.Gl.TextureEffects.WaveformGradient_v2 - draws on top of other textures without blend modes\r\n- new op: Ops.Value.Integer - Stores an integer and allows it to be reused in other parts of the patch.\r\n- new op: Ops.Array.ArrayOfObjectsFilterByKeyValue: filter objects in array of objects by key & value\r\n- new op: Ops.Array.ArrayOfObjectsFilterKeys: remove keys from objects in array of objects\r\n- new op: Ops.Array.ArrayOfObjectsToString: turn an array of objects into a string\r\n- new op: Ops.Net.SocketCluster.SocketCluster - websocket functions\r\n- new op: Ops.Sidebar.Incrementor - Steps through numerical or array values one by one\r\n\r\n\r\n#### Editor user interface \r\n\r\n- UI: canvas menu for seting up which op transform gizmos and helper are shown\r\n- UI: canvas focus button to quickly change aspect ratio or resolution of renderer\r\n- UI: better support and automatic detection of touchpads and apple mouse\r\n- UI: file view: more file type icons / library files can now be downloaded/searched etc\r\n- UI: ops working with files now show filename in op extenede title\r\n- UI: search: pressing shift clicking bookmarks/search results will only show op parameters, without scrolling to op (or switching to subpatch)\r\n- UI: search: ctrl+f/cmd+f always shows search tab\r\n- UI: search: see all recently used ops\r\n- UI: better error display of ops\r\n- UI: fix: editor does not show save button when in read-only mode\r\n- UI: code tab edit op button reads \"edit\" when user has rights to edit the op\r\n- UI: op history: press j/k to cycle between last selected ops\r\n- UI: editor will pause rendering after 60 seconds of inactivity\r\n- UI: fixed bug when cursor keys did not work in parameter input fields\r\n- UI: op parameter header shows if there is a newer version of op available / better warning message and link on op doc page.\r\n- UI: export patch: option to include all files of the patch\r\n- UI: command palette: added timeline play/pause/rewind commands\r\n- UI: varGet/varSet ops filter variables only show by correct type\r\n- UI: better cache invalidating when uploading json or gltf files\r\n- UI: performance optimizations of animated op output parameters\r\n- UI: Mesh helpers now work in WebGL1 aswell\r\n- UI: cables code-editor now adheres to es2017 standards (async/await)\r\n- UI: fix bug with \"show/hide helpermeshes\" not being followed\r\n- UI: Comment op can no longer throw an error due to MathParser.eval()\r\n\r\n\r\n#### Op enhancements and fixes\r\n\r\n- new op version: Ops.Gl.ShaderEffects.ColorArea_v2 - internally copying the shader / fixing the shaderStack\r\n- new op version: Ops.Vars.VarSetNumber_v2 - added a button for creating new variables / removed invalid variables\r\n- new op version: Ops.Devices.Mouse.MouseWheel_v2 - new version / more compatible values between browsers and os's\r\n- new op version: Ops.Gl.Meshes.Rectangle_v2 - rebuild only when needed / needs trigger to build geometry\r\n\r\n- op enhancement: Ops.Gl.Phong.LambertMaterial_v2 - add diffuse texture, add lighting calculations for all lights, new falloff mode, works on iOS\r\n- op enhancement: Ops.Gl.TextureEffects.PseudoLensFlares - add iOS compatibility\r\n- op enhancement: Ops.Devices.Midi.MidiMonitor: add device name info\r\n- op enhancement: Ops.Net.CorsProxy_v2 now urlencodes given strings to always make them work with the actual proxy\r\n- op enhancement: Ops.Json.AjaxRequest_v2 now has a trigger to reload data\r\n- op enhancement: Ops.Gl.ShaderEffects.ColorArea_v2 - added box area shape\r\n- op enhancement: Ops.Gl.Textures.WebcamTexture - added parameters: resolution and facing direction(user/environment)\r\n- op enhancement: Ops.Gl.Performance - shows gpu performance when possible (chrome) / better colors / more options\r\n- op enhancement: Ops.Html.CSS_v2 - You can now use {{ASSETPATH}} to get a URL to file Assets\r\n- op enhancement: Ops.Gl.Shader.ShaderInfo - works now even if shader is not used\r\n- op enhancement: Ops.Json.ObjectSetObject - fix string input\r\n- op enhancement: Ops.Value.Preset - move preset up/down \r\n- op enhancement: Ops.Gl.Texture_v2 - op active boolean input, handy for loading textures later\r\n- op enhancement: Ops.Gl.Texture_v2 - new URL string input field \r\n- op enhancement: Ops.Gl.MeshInstancer_v3 - performance improvement / uploads only data that has changed\r\n- op enhancement: Ops.Devices.Mobile.MotionSensor_v2 - added rotation rate outputs\r\n- op enhancement: Ops.Html.TransformElement - new parameters: scale / rotate / alignment\r\n- op enhancement: Ops.Gl.RenderAnim_v2 - transparency checkbox\r\n- op enhancement: Ops.Gl.InteractiveRectangle - option to not render the rectangle, but still be interactive...\r\n- op enhancement: Ops.Sidebar.ColorPicker - now has hex out\r\n- op enhancement: Ops.Cables.FPS - get averaged fps over n seconds\r\n- op enhancement: Ops.Boolean.ParseBoolean_v2 - new string port type\r\n- op enhancement: Ops.Gl.MeshInstancer_v3 - added material blend modes - Multiply, add and Normal\r\n- op enhancement: Ops.Gl.Shader.Shader2Texture - Custom resolutions can now be used again\r\n- op enhancement: Ops.Devices.Mouse.Mouse_v2 - Keeps mouse on the last position when it leaves the canvas and smooth is enabled.\r\n- op enhancement: Ops.Html.IFrame_v2 - shows border correctly when \"show border\" option is enabled \r\n- op enhancement: Ops.Exp.Gl.DeviceOrientationCamera - works correctly on IOS and android\r\n- op enhancement: Ops.Gl.TextureEffects.Blur - Gives a warning if a full screen blur is used.\r\n- op enhancement: Ops.Gl.Meshes.RectangleFrame - Rendering can now be disabled\r\n- op enhancement: Ops.Points.PointsSphereRandom and Ops.Points.PointsCube now output total amount of points and array length\r\n- op enhancement: Ops.Array.SimplexArray now has an array input for time based values \r\n- op enhancement: Ops.Array.PerlinArray now has an array input for time based values \r\n- op enhancement: Ops.Array.ArrayGetNumber - now checks if the array value is a number\r\n- op enhancement: Ops.Gl.TextureEffects.WaveformGradient_v2 - now has a 'square' mode.\r\n- op enhancement: Ops.Gl.Meshes.Cone - Now has texture co-ordinates\r\n- op enhancement: array math, array logic , math and comparison ops are much faster now.\r\n- op enhancement: Ops.Array.InterpolateArrays - is much faster now\r\n- op enhancement: Ops.Gl.ShowNormals_v2 - rework op, add color & fix geometry input\r\n- op enhancement: multiple HTML and CSS ops now use the correct string input ports\r\n\r\n- op fix: Ops.Array.ArraySetArray no longer crashes if 2nd array is not connected\r\n- op fix: Ops.Array.ArrayLogicBetween_v2 - now checks the max value correctly\r\n- op fix: Ops.Math.Math - is much faster and no longer redraws UI elements every frame \r\n- op fix: Ops.Systems.Lsystem_v2 - now works again with string inputs for rule fields.\r\n- op fix: Ops.Sidebar.TextInput_v2 - displays default text when TextArea is selected.\r\n- op fix: Ops.Devices.Mobile.MotionSensor2 - now works with android and IOS. RENAME it to  Ops.Devices.Mobile.MotionSensor_v2 before the next update\r\n- op fix: Ops.Array.ArrayChunk - No longer crashes when chunk size is greater than the length of the incoming array\r\n- op fix: Ops.Gl.CubeMap.CubeMapFromTextures_v2: fix asynchronous loading bug, add Y-Up feature\r\n- op fix: Ops.Gl.CubeMap.CubeMapCamera_v2: fix wrong cubemap face renders\r\n- op fix: Ops.Devices.Midi.MidiInputDevice_v2: now only tracking input devices, not output devices anymore\r\n- op fix: Ops.Gl.MeshInstancer_v3 rendering problems cone and torus\r\n- op fix: Ops.Gl.ForceCanvasSize - fixed bug: not updating the first time changing to aspect ratio\r\n- op fix: Ops.Gl.ForceCanvasSize - fixes for retina/hdpi displays\r\n- op fix: Ops.Audio.SpeechRecognition - works continously now\r\n- op fix: Ops.Gl.Textures.WebcamTexture - now works on ios\r\n- op fix: Ops.Ui.Comment_v2 - fix bug when it was not showing correct text\r\n- op fix: Ops.Gl.MeshInstancer_v3 - removing color array resets color to material color, fix blend modes for alpha channel\r\n- op fix: Ops.Array.ParseArray_v2 op now updates error-state for \"numbers\" correctly on change\r\n- op fix: Ops.Gl.Phong.PhongMaterial_v4 - correct lighting with mesh instancer\r\n- op fix: Ops.Gl.Phong.LambertMaterial_v2 - correct lighting with mesh instancer\r\n- op fix: Ops.Gl.CubeMap.CubeMapMaterial_v2: render sides correctly for cubemap & equirectangular, inside or outside of a mesh, flip option for each axis\r\n\r\n#### Website\r\n\r\n\r\n- web: util page to debug browser events: https://dev.cables.gl/browserevents\r\n- web: tweak front page for mobile devices\r\n- web: my patches list: by default ordered by date of last change\r\n- web: my patches list: tabs for ordering by create/changed date\r\n- web: properly integrated \"top of the month\" to the search and linked to it from the dashboard (https://cables.gl/patches?w=topMonth)\r\n- web: likes no longer go off-screen when they are \"too many\" (https://cables.gl/p/iYdLVk)\r\n- web: images on search/overview now load for the first few patches\r\n- web: secret url now loads userlibs and userops\r\n- web: invite collaborator to patches sending mails, not only add them\r\n\r\n#### Core\r\n\r\n- core: vars: create variable helper functions also work for strings now\r\n- core: vars: getter ops: only show vars compatible to the selected type\r\n- core: vars: list always sorted by alphabet\r\n- core: performance optimizations\r\n\r\n#### Github\r\n\r\n- github: updated coding with cables repo with clear examples of creating port types which are now up to date\r\n\r\n#### Cables CLI\r\n\r\n- cables-cli: now supports -h switch to hide \"made with cables\" (https://github.com/cables-gl/cables-cli)\r\n- cables-cli: bugfix: make cables-api export return proper 404 and json on \"project not found\" error\r\n- cables-cli: now supports \"--assets\" to download all/auto/none assets in export\r\n\r\n#### Daplaya\r\n\r\n- daplaya: daplaya no longer displays \"made with cables\" (https://github.com/cables-gl/cables-daplaya)\r\n\r\n#### Discord\r\n\r\n- discord: forum/published patches/social media are posted on our new discord - https://discord.gg/AGTarWv\r\n",
            "date": 1587374208069,
            "youtubeid": ""
        },
        {
            "text": "- New op: Ops.Gl.GLTF.GltfScene - GLTF File Loader and renderer\r\n- New op: Ops.Gl.TextureEffects.ClampTexture - Clamp texture values with remap and smooth remap options\r\n- New op: Ops.Gl.TextureEffects.LensScratches - procedural lens scratches texture generator\r\n- New op: Ops.Gl.TextureEffects.LensDirt - procedural lens dirt texture generator\r\n- New op: Ops.Math.Crossfade - crossfade between 2 values\r\n- New op: Ops.Array.ArrayUnique - filters duplicate items form an array and returns unique values\r\n- New op: Ops.Array.ArrayUniqueItemInfo - gives information about the appearance of items in an array\r\n- New op: Ops.Devices.Mobile.MotionSensor2 - get motion sensors/ gyroscope etc. now works with ios 13 permission system\r\n- New op: Ops.Array.CopyArray - Copy an array with a trigger, reset to use a default array\r\n- New op: Ops.Array.HSBtoRGBArray - generates RGBA array from up to 4 arrays (HSBA)\r\n- New op: Ops.Array.RandomArrays - create 1-, 2-, 3- or 4-dimensional array\r\n- New op: Ops.Array.RandomNumbersArray4_v2 - create random array of 4-tuples\r\n- New op: Ops.Array.SplinesToLineStripArray - Convert an array of splines to one \"line stripped\" array\r\n- New op: Ops.Gl.ForceCanvasSize - Resize canvas element to a specific pixel size or aspect ratio\r\n- New op: Ops.Gl.Matrix.CameraInfo - get camera attributes\r\n- New op: Ops.Gl.ShaderEffects.AreaScaler_v2 - Scales the size of meshes within the area of influence\r\n- New op: Ops.Gl.ShaderEffects.AreaTranslateFBMNoise - Translate object positions by noise\r\n- New op: Ops.Gl.Array3ToTexture - Convert an array of RGB values to a texture\r\n- New op: Ops.Gl.ShaderEffects.AreaTranslateMeshes - Change the position of all meshes inside of the area of influence\r\n- New op: Ops.Html.ElementSize - Get size and position of a HTML element\r\n- New op: Ops.Math.Compare.CompareNumbers - Performs logical comparisons on numbers (compare, operators)\r\n- Editor: Ops.Sidebar.Sidebar - complete redesign, hopefully looking much better/modern now\r\n- Editor: Search dialog (cmd/ctrl+f) - reworked and put into tabs\r\n- Editor: Search dialog - quickfilter functionality by color/bookmarks/user ops etc.\r\n- Editor: all ops with an inSwitch and inValueSelect now expose an in-port that takes the position of the desired dropdown-value as an input\r\n- Editor: Click link circle to replace link with a new variable (make little VIDEO)\r\n- Editor: export now includes external libraries in single-file-export, some cleanup\r\n- Editor: external libraries can be added to user-ops again\r\n- Editor: FileManager: jpg/png files imagemin optimize button \r\n- Editor: Hold alt/meta and drag mouse/tablet pencil to zoom in/out\r\n- Editor: Mathparser - Number input fields now have a simple math expression parser - VIDEO\r\n- Editor: More accessible bookmark icon\r\n- Editor: New command \"create number variable\"\r\n- Editor: Open code editor from the op search dialog, handy when your op has code errors...\r\n- Editor: Ops.Value.Preset - many ui tweaks to make it easier to work with\r\n- Editor: Patch settings load and save faster\r\n- Op enhancement: Ops.Gl.FaceCulling_v2 - fix: behaves correctly when using stacked cull modes\r\n- Op enhancement: mouse/touchscreen ops: add element event switch \r\n- Op enhancement: Ops.Anim.Bang - output can be inverted to count from 0-1\r\n- Op enhancement: Ops.Anim.SineAnim - Added cosine mode\r\n- Op enhancement: Ops.Array.Array_v2 - Now has reversed normalized mode going from 1.-0.\r\n- Op enhancement: Ops.Array.CropArray - add startindex parameter\r\n- Op enhancement: Ops.Gl.GradientTexture now takes array as input and can work with alpha (if in array)\r\n- Op enhancement: Ops.Gl.Matrix.CircleTransform - added absolute number parameter\r\n- Op enhancement: Ops.Gl.Matrix.ScreenCoordinates - boolean output if visible in canvas\r\n- Op enhancement: Ops.Gl.Meshes.Cone - rendering can now be disabled.\r\n- Op enhancement: Ops.Gl.Meshes.Cube - switch mapping methods\r\n- Op enhancement: Ops.Gl.Meshes.SimpleSpline - added switch to generate texture coords\r\n- Op enhancement: Ops.Gl.Meshes.TextMesh_v2 - texture mask input\r\n- Op enhancement: Ops.Gl.Meshes.TextMesh_v2 - texture multiply input\r\n- Op enhancement: Ops.Gl.MeshInstancer_v3 - add color array input to MeshInstancer\r\n- Op enhancement: Ops.Gl.Shader.MatCapMaterialNew - tex offset params / tex lookup performance optimization\r\n- Op enhancement: Ops.Gl.ShaderEffects.AreaDiscardPixel - added box shape \r\n- Op enhancement: Ops.Gl.ShaderEffects.AreaDiscardPixel - scale area per axis\r\n- Op enhancement: Ops.Gl.ShaderEffects.MeshPixelNoise - noise has xyz parameters\r\n- Op enhancement: Ops.Gl.Texture - anisotropic texture filtering switch\r\n- Op enhancement: Ops.Gl.TextureEffects.BarrelDistortion_v2 doesn't distort the image when intensity is set to 0\r\n- Op enhancement: Ops.Gl.TextureEffects.CheckerBoard - Added scale from center mode\r\n- Op enhancement: Ops.Gl.TextureEffects.Noise.PixelNoise_v2 - Added scale from center mode\r\n- Op enhancement: Ops.Gl.TextureEffects.Rectangle_v3 - better color drawing / better coordinate system / aspect ratio \r\n- Op enhancement: Ops.Json.AjaxRequest now takes a key/value-object of additional headers (i.e. for authorization tokens)\r\n- Op enhancement: Ops.Json.ParseObject_v2 - better error handling\r\n- Op enhancement: Ops.Math.Sign - Now has a mode to not output zero.\r\n- Op enhancement: Ops.Net.CorsProxy_v2 - refactored to use new string instead of old\r\n- Op enhancement: Ops.Gl.Phong.AmbientLight_v4 - changed default color to\r\n- Op enhancement: Ops.Gl.Phong.PhongMaterial_v4 - works on iOS (light limit on iOS: 6), add more control to Fresnel (width, exponent)\r\n- Op enhancement: Ops.Sidebar.TextInput_v2 - toggle between single input line or multiline textarea- UI: Screenshot button can now produce transparent images\r\n- Op enhancement: Ops.String.LimitLineBreaks_v2 - force number of lines / amount of lines now shown is correct / fix crash \r\n- Op enhancement: Ops.Value.Preset - presets can now be renamed / deleting a preset op will delete internally used variable connections from ports\r\n- Op enhancement: RandomNumber Array Ops - now reaches max value when set to integer mode. Outputs null when array length is set to zero\r\n- Op enhancement: Sidebar input ops have greyout/visible toggles\r\n- Web: a core jsdoc page, this will be improved in the future - https://jsdoc.cables.gl/\r\n- cables-cli: new version allows for deployment to netlify\r\n- core: cables now fires `CABLES.jsLoaded` event when all javascript libraries are loaded to allow for async loading of the patch, updated export and docs accordingly\r\n- core: fix bug in some cases disconnected arrays were still acting as being connected\r\n",
            "date": 1580388102208,
            "youtubeid": ""
        },
        {
            "text": "- From now on, you can now read a full summary of our updates on our blog: https://blog.cables.gl\r\n- Web: Welcome page shows latest news from our blog.\r\n- Editor: Text editor colorcoded content type display in tab\r\n- Editor: fix open renderer in new window\r\n- Editor: new background color\r\n- Editor: Attach variables directly to ports without having to add extra ops\r\n- Editor: help nav - list of keyboard shortcuts\r\n- Editor: fix text-editor height bug\r\n- Editor: fix and tweak colorpicker hex input\r\n- Web: You can find cables updates in out blog from now on: https://blog.cables.gl\r\n- Web: Welcome page header is now connected to our new blog\r\n- new op: Ops.Gl.PixelProjection\r\n- new op: Ops.Math.MapGeoCoordsSpherical - Map geo locations (latitude - longitude) to spherical coordinates\r\n- new op: Ops.Gl.TextureEffects.GrowPixels - Make one pixel lines thicker via postprocessing\r\n- new op: Ops.Array.MapRangeArray - map numerical values in an array from one range to another\r\n- new op: Ops.Array.SortArrayObjectsByKey - sort objects in an array by value of key (also nested)\r\n- new op: Ops.Date.DateIsoToTimestamp - parse a iso formated date string to javascript timestamp\r\n- new op: Ops.Array.GetValuesFromArrayOfObjects - Get an array of values by key of objects in an \r\n- new op: Ops.Devices.Midi.MidiOutputDevice - Connect to MIDI device input port\r\n- new op: Ops.Devices.Midi.MidiCCOut - Send MIDI CC data to a midi output\r\n- new op: Ops.Devices.Midi.MidiNoteOut - Send midi note data to a midi output\r\n- new op: Ops.Devices.Midi.MidiNRPNOut - Send midi NRPN data to a midi output\r\n- new op: Ops.Gl.Phong.PhongMaterial_v4 - A shaded material for lighting objects\r\n- new op: Ops.Gl.Phong.PointLight_v4 - Point light for phong shading\r\n- new op: Ops.Gl.Phong.DirectionalLight_v4 - Directional light for phong shading\r\n- new op: Ops.Gl.Phong.SpotLight_v4 - Spot light for phong shading\r\n- new op: Ops.Gl.Phong.AmbientLight_v4 - Ambient light for phong material shading\r\narray\r\n- op enhancement: Ops.Gl.Orthogonal_v2 - added axis switch\r\n- op enhancement: Ops.Array.ParseArray_v2 - shows error indicator when invalid numeric values\r\n- op enhancement: Ops.Gl.TextureEffects.DrawImage_v2 - transforms also apply to alpha mask\r\n- op enhancement: Ops.Trigger.Repeat_v2 - now direction of index can be selected\r\n- op enhancement: Ops.Devices.TouchGesture - added active bool input\r\n- op enhancement: Ops.Gl.Meshes.SimpleSpline - performance improvement\r\n- op enhancement: Ops.Json3d.Mesh3d - can now load meshes with vertexColors\r\n- op enhancement: Ops.Gl.Meshes.PointCloudFromArray - performance improvement when updating coordinates regularly\r\n- op enhancement: Ops.Devices.TouchScreen has force output - tested with apple pencil pressure/ipad pro\r\n- op enhancement: Ops.Math.AddUp - reset trigger\r\n- op enhancement: Ops.Gl.Shader.MatCapMaterialNew - added opacity texture\r\n- op enhancement: Ops.Gl.TextureEffects.ScaleTexture - now has a mask input to control the scale with a texture\r\n- op enhancement: Ops.Devices.Midi.MidiNote - added array out option for multiple notes\r\n- op enhancement: Ops.Devices.Midi.MidiCC - added array out option for multiple cc values\r\n- Rename Ops.Gl.Matrix.ViewMatrixTranslation to Ops.Gl.Matrix.cameraPosition\r\n- Rename Ops.Gl.CanvasSize to Ops.Gl.CanvasInfo\r\n- Rename Ops.Value.ValueBoolean to Ops.Value.Boolean\r\n- Rename Ops.Gl.TextureEffects.Scroll to Ops.Gl.TextureEffects.ScrollTexture\r\n- Rename Ops.Gl.TextureEffects.Circle to Ops.Gl.TextureEffects.CircleTexture\r\n- Rename Ops.Value.ValueHub to Ops.Value.NumberSequence\r\n- Rename Ops.Gl.Textures.Text_v2 to Ops.Gl.Textures.TextTexture_v2\r\n- Rename Ops.Gl.Textures.Graph to Ops.Gl.Textures.GraphTexture\r\n- Rename Ops.Json3d.Json3dScene2 to Ops.Json3d.Scene3d_v2\r\n- Deprecated Ops.Devices.Midi.MidiKeyPressed\r\n- Deprecated Ops.Value.ValueChanged\r\n- Deprecated Ops.Value.ValueStringEditor\r\n- Deprecated Ops.Gl.Particles.PointCloudFile\r\n- Deprecated Ops.Devices.Midi.MidiSend\r\n- Deprecated Ops.Devices.Midi.LaunchPadScroller\r\n",
            "date": 1572953301314,
            "youtubeid": ""
        },
        {
            "text": "- Editor Preferences: added zoom speed option \r\n- Editor Op port output values: click to copy to clipboard\r\n- Editor: Timeline: easing selection works again\r\n- Editor: Filemanager filters correct files for current port\r\n- Editor: Export compatibility option: ES5 transpilation for older browsers\r\n- Editor: Middle click for quicker linking\r\n- Editor: Fixed text editor tabs height/cutoff problem\r\n- Editor: Op search dialog search algorithm improved, e.g. order of words does not really matter anymore\r\n- Editor: Hold shift key to add ops to selection\r\n- Editor: canvas resolution field now also shows browser zoom level\r\n- Web: user settings op page now is now ordered by date of creation\r\n- Web: Added Github/Coding with cables link to Learn section.\r\n- Cables-cli: updated https://github.com/cables-gl/cables-cli\r\n- Cables-cli: added \"combine-js\" and \"old-browsers\" options to cables-cli\r\n- Core: Fix webgl console warnings in firefox\r\n- new op: Ops.Value.Preset - State management of all parameters connected to it - Create presets of multiple ops\r\n- new op: Ops.Systems.ArraySpray - Particle Spray simulation\r\n- new op: Ops.Mesh.Triangulate2dPath - Triangulate a 2d path to a flat and filled 3d geometry\r\n- new op: Ops.Devices.OSC.OscNumber - Outputs a single number from a user defined OSC address\r\n- new op: Ops.Devices.OSC.OscNumbers - Outputs up to 4 numbers from a user defined OSC address\r\n- new op: Ops.Devices.OSC.OscArray - Outputs an array of data from a user defined OSC address\r\n- new op: Ops.Devices.OSC.OscMessage - Shows the current active address of an incoming OSC message\r\n- new op: Ops.Array.GetValuesFromArrayOfObjects - Get an array of values by key of objects in an array\r\n- new op: Ops.Math.MercatorCoordsArray - Mercator map and center an array of latitudes and longitudes to a local coordinate system\r\n- new op: Ops.Sidebar.LocalTextureFile - Let the user select a local file as a texture\r\n- new op: Ops.Array.ArrayPack - Packs multiple arrays into a new array\r\n- new op: Ops.Array.ShuffleArray3 - Shuffle an array of triplets\r\n- new op: Ops.Array.FlattenArray - Creates a new array with all sub-array selements concatenated into it\r\n- new op: Ops.String.CharacterRotate - String rotate characters like a split-flap display\r\n- new op: Ops.Array.InfoArray2 -  min,max and average values of an array3 \r\n- new op: Ops.String.NumTotalLineBreaks - Count number of line breaks in a string\r\n- Op Enhancement: TextureEffects.Circle - Circle fix position\r\n- Op Enhancement: Timer op can now be synched to timeline\r\n- Op Enhancement: pointcloudfromarray input for texture coordinates\r\n- Op Enhancement: pointmaterial - lookup texture now also affects mask texture\r\n- Op Enhancement: ObjectGetNumber_v2 - new string type \r\n- Op Enhancement: ObjectGetObject_v2 - new string type\r\n- Op Enhancement: ParseObject_v2 - new string type\r\n- Op Enhancement: SetObjectKeyValue - new string type\r\n- Op Enhancement: TextureEffects.Scroll - mask parameter\r\n- Op Enhancement: PointCloudFromArray - fix crash when switching scramble texcoords\r\n- Op Enhancement: MouseDrag - added input type selection\r\n- Op Enhancement: ShuffleArray rewrite - now works without any triggers\r\n- Op Enhancement: Customshader2 - fix bug where vec3 was not updated after saving shadercode\r\n- Op Enhancement: Array.ArrayLogic user can set value if condition evaluates to true\r\n- Op Enhancement: Array.ArrayLogic now shows selected mode in UI\r\n- Op Enhancement: Array.ArrayLogicArray user can set value if condition evaluates to true or false\r\n- Op Enhancement: Array.ArrayLogicBetween allows pass value when it evaluates to true\r\n- Op Enhancement: Math.RandomNumbers now generates random numbers when op is created and if seed,min and max. \"is changed\" Option to output floats or integers.\r\n- Op Enhancement: Array.ArrayPack2 - Speed optimization. \r\n- Op Enhancement: Array.ArrayPack3 - Speed optimization. \r\n- Op Enhancement: Array.ArrayPack4 - Speed optimization. \r\n- Op Enhancement: Array.TransformArray3- Speed optimization. \r\n- Op Enhancement: Multiple random number ops can now output floats or integers.\r\n- Op Enhancement: Array.Array3Average now outputs the correct average values of the array \r\n- Op Enhancement: Anim.Smooth doesn't break anymore when inc/dec factor is set to zero\r\n- Op Enhancement: TextureEffects.Shapes2d - now renders correctly on macos\r\n- Op Enhancement: Array.RandomNumbersArray_v2 - Doesn't output an array of 100 when numValues is set to zero.\r\n- Op Enhancement: Gl.MainLoop - Now shows in op title, if it's active or inactive\r\n- Op Enhancement: WebAudio.BiquadFilter - Frequency can now go higher than 1\r\n- Op Enhancement: Exp.Lsystem_v2 - Fixed bug in rule string creation.\r\n",
            "date": 1571128444969,
            "youtubeid": ""
        },
        {
            "text": "- Old Op Gl.ShaderEffects.Fog has been renamed to Ops.Gl.ShaderEffects.FogEffect\r\n- Old Op Gl.TextureEffects.Repeat has been renamed to Ops.Gl.TextureEffects.RepeatTexture\r\n- Old Op Array.Array3Transform has been renamed to Ops.Array.TransformArray3\r\n- Old Op Json3d.Json3dMesh has been deprecated. Please use Ops.Json3d.Mesh3d\r\n- Old Op Trigger.SwitchTrigger has been renamed to Ops.Trigger.RouteTrigger\r\n- Old Op Math.Array3x2dProjection has been renamed to Ops.Math.Array3To2dProjection\r\n- Old Op Array.ArrayPushValue3x has been renamed to Ops.Array.Array3PushNumbers\r\n- Old Op String.Join_v2 has been renamed to Ops.Array.ArrayToString_v3\r\n- Old Op Points.PointsField3d has been renamed to Ops.Points.PointsCube\r\n- Old Op Array.PointArray.Field has been renamed to Ops.Points.PointsPlane\r\n- Old Op Value.Value3 has been renamed to Ops.Value.Trigger3Numbers\r\n- Old Op Math.Random2 has been renamed to Ops.Math.TriggerRandomNumber\r\n- Old Op Array.ArrayRotate has been renamed to Ops.Array.RotateArray\r\n- Old Op Array.Array3Average has been renamed to Ops.Array.Array3GetAverage\r\n- Old Op Array.ArraySmooth has been renamed to Ops.Array.AverageArray\r\n- Old Op Gl.OnResize has been renamed to Ops.Gl.TriggerOnCanvasResize\r\n- Old Op Color.RGBtoHSV has been renamed to Ops.Color.RGBtoHSB\r\n- Old Op Json3d.Json3dMesh2 has been renamed to Ops.Json3d.Mesh3d\r\n- Old Op Json.ObjectGetValue has been renamed to Ops.Json.ObjectGetNumber\r\n- Old Op Array.AverageInterpolationArray has been renamed to Ops.Array.SmoothArray\r\n- Old Op Array.ContinuousNumberArray has been deprecated. Please use Ops.Array.Array_v2\r\n- Old Op Math.Array3xTransform has been renamed to Ops.Array.Array3Transform\r\n- Old Op Array.Array3xAverage has been renamed to Ops.Array.Array3Average\r\n- Old Op Value.Value has been renamed to Ops.Value.Number\r\n- Old Op Math.Array3xMultiplyMatrix has been renamed to Ops.Math.Array3MultiplyMatrix\r\n- Old Op Array.Array3xInterpolateDistributed has been renamed to Ops.Array.Array3InterpolateDistributed\r\n- Old Op Array.Array3xRandomSelection has been renamed to Ops.Array.Array3RandomSelection\r\n- Old Op Array.Array3xGetValues has been deprecated. Please use Ops.Array.Array3GetNumbers\r\n- Old Op Array.ArrayUnpack4x has been renamed to Ops.Array.ArrayUnpack4",
            "date": 1568021832577,
            "youtubeid": ""
        },
        {
            "text": "- Editor: User settings are now called preferences and have a completly new UI (cables->preferences)\r\n- Editor: You now have to select a license to publish your patch, this license will be shown on the patch page.\r\n- Editor: Show warning icon indicator, when network is disconnected\r\n- Editor: Straight lines mode: cables now have edges\r\n- Editor: Search: (cmd/ctrl+f) now shows where it found the query\r\n- Editor: Search shows you selected ops and last clicked entries\r\n- Editor: Search results can now be navigated using cursor keys\r\n- Editor: Filemanager can switch between icon or list display again\r\n- Editor: Filemanager list mode shows file size and date\r\n- Editor: Filemanager list can be sorted by name/size/date\r\n- Editor: Filemanager search/filter functionality\r\n- Editor: Filemanager shows size when selecting multiple files\r\n- Editor: Exported patch better minification\r\n- Editor: Added LUTmap example files\r\n- Editor: SVG path point converter: Now also parses polygons elements\r\n- Editor: Many tweaks\r\n- Web: browser info page now checks for WebGPU - https://cables.gl/browser\r\n- Web: Basic examples page has been cleaned up and has new sections and examples - https://cables.gl/examples\r\n- New op: Ops.Array.ArrayPack2 - Packs two individual arrays into a new array\r\n- New op: Ops.TimeLine.TimeLinePlayer - Bundled timeline controls and timeline information\r\n- New op: Ops.Gl.TextureEffects.Shapes2d - Generates lots of 2d shapes as a texture\r\n- New op: Ops.Array.ArrayClamp - Clamps array values to a min and max value\r\n- New op: Ops.Gl.TextureEffects.PaletteTexture - Generate a palette texture with an array input\r\n- New op: Ops.Array.PaletteLibrary - Huge palette library in array form. Use with Palette texture op.   \r\n- New op: Ops.Array.ArrayMerge_v2 - Only merges 2 arrays together when 2 are present.\r\n- New op: Ops.Array.ArraySqrt - Calculates the square root of an array\r\n- New op: Ops.String.LimitLineBreaks - Limit number of lines in a string\r\n- New op: Ops.Math.IndexFraction - Return fraction of value by index\r\n- New op: Ops.Gl.Matrix.RandomGridPlacementArrays - Generate recursive random grid positions for instancing\r\n- New op: Ops.Array.ArrayLogicBetween - outputs an array of 0 and 1 if array value is between of min and max or not\r\n- New op: Ops.Html.WindowInfo - size of browser window in pixels\r\n- Enhancement: Mesh Instancing now also works with non-indexed meshes\r\n- Enhancement: Ops.WebAudio.AudioAnalyzer - User can now pick FFT size\r\n- Enhancement: Ops.Gl.Meshes.TriangleArray_v2 - Now renders normals correctly with all materials.\r\n- Enhancement: Ops.Array.ArrayLogic - User can now define a default value when it evaluates to true\r\n- Enhancement: Ops.Gl.Matrix.WASDCamera_v2 - Added speed parameter\r\n- Enhancement: Ops.Gl.TextureEffects.Fog_v2 - Complete overhaul. Much easier to use now. Accepts color gradient texture to control fog color over distance. \r\n- Enhancement: Ops.Array.InterpolateNumbersArray3 - Doesn't output NaN when index is larger than array length\r\n- Op Enhancement: New string version: Ops.String.Join - Join array values to a string\r\n- Op Enhancement: New string version: Ops.Sidebar.SidebarText_v2\r\n- Op Enhancement: Ops.Gl.Meshes.Cylinder_v2 - option flip mapping to horizontal mode\r\n- Op Enhancement: Ops.Gl.TextureEffects.Stripes_v2 - added circular mode\r\n- Op Enhancement: Ops.Gl.TextureEffects.ColorChannel - new alpha masking option\r\n- Op Enhancement: Tweak scaling of Mesh and renamed JsonMesh3d to Ops.Json3d.Mesh3d\r\n",
            "date": 1567505456154,
            "youtubeid": ""
        },
        {
            "text": "- new op: Ops.Gl.Meshes.ParametricSurface - Creates a 3d mesh from Math expressions\r\n- new op: Ops.Array.InterpolateNumbersArray - interpolate between all values of an array\r\n- new op: Ops.Gl.Shader.Shader2Textures - Render a shader to multiple textures\r\n- UI: remove + button/add button / doubleclick on ops in opselect list\r\n- UI: subpatch ports can now be renamed\r\n- UI: fix connecting subpatch outputs in both directions\r\n- UI: fix copy/pasting of whole subpatches \r\n- UI: hovering ports now shows values of arrays/strings etc.\r\n- UI: new tab icons for meta area \r\n- Fix: mainloop active toggle\r\n- Fix: Ops.Math.Random2 - replaced rounding of number to floor for correct random distribution\r\n- API: ops can change title of ports via `render.setUiAttribs({title:\"do the rendering\"});`\r\n- Enhancement: Ops.Gl.Matrix.OrbitControls - reset trigger now also resets position from panning\r\n- Enhancement: customshader2 show uniform types as ports: int,vec2,vec3,vec4\r\n- Enhancement: customshader2 better parsing of uniforms\r\n- Enhancement: Ops.Gl.Phong.LambertMaterial - Added double-sided option\r\n- Enhancement: Ops.Gl.ShowNormals - Added show tangent & bitangent functionality\r\n- Rename: Ops.Json.ObjectGetValue renamed to Ops.Json.ObjectGetNumber\r\n",
            "date": 1563354540886,
            "youtubeid": ""
        },
        {
            "text": "- UI/Web: create patch: more and better patch templates to choose from\r\n- UI: fix bug when no ops are visible anymore, after pressing c\r\n- UI: fix/workaround on chrome mac - big value jumps when dragging parameter\r\n- new op: Ops.Array.SmoothArray - performs average interpolation on array with varying up and down speeds\r\n- new op: Ops.Array.PerlinArray - Creates an array filled with controllable Perlin noise\r\n- new op: Ops.Array.SimplexArray - Creates an array filled with controllable Simplex noise\r\n- new op: Ops.Array.SubdivideArray1 - Subdivides a single array\r\n- new op: Ops.Math.RoundEven - Round to the next even number\r\n- new op: Ops.String.StringEquals - check if content of two strings is the same\r\n- new op: Ops.Gl.ShaderEffects.VertexPositionFromTexture - Set vertex positions from texture color values\r\n- new op: Ops.Sidebar.SidebarVariables - show values of all variables in a sidebar\r\n- new op: Ops.String.RightPadNumber_v2 - Converts a number to a string with x decimal places\r\n- enhancement: Ops.Gl.TextureEffects.Interlace - added X or Y direction to scan lines\r\n- enhancement: Ops.Array.ShuffleArray - now has a shuffle trigger so user can define when shuffle occurs\r\n- enhancement: Ops.Array.Array_v2  - added extra mode for normalized values between 0-1\r\n- enhancement: Ops.Gl.TextureEffects.Noise.PixelNoise_v2 - now has a controllable seed parameter \r\n- enhancement: Ops.Gl.TextureEffects.RotateTexture - texture input for multiplier of the effect\r\n- enhancement: Ops.Gl.TextureEffects.Pixelate - texture input for multiplier of the effect\r\n- enhancement: Ops.Math.PerlinNoise - added seed parameter\r\n- enhancement: fix Ops.Gl.TextureEffects.Noise.PixelNoise_v2 - black and white mode seed now always works",
            "date": 1562585749124,
            "youtubeid": ""
        },
        {
            "text": "- many renamed ops to new naming guidelines, list of all changes: https://cables.gl/ops/changelog\r\n- Web: Filter Ops By Collections https://cables.gl/ops/\r\n- Web: Clean up Layout of op detail page\r\n- UI: show Op Modes in the title, e.g. Blendmodes of TexturEffects\r\n- UI: new inSwitch UI Element for faster switching instead of dropdown element\r\n- UI: Scroll in patch using mousewheel and alt/shift keys\r\n- UI: Coding Ops: checking syntax for errors when coding before saving \r\n- UI: code editor much better auto completion\r\n- UI: Fix more cases of overlapping ops\r\n- UI: newly created user ops should now show up in op search immediately\r\n- UI: create variable shortcut in op select now works for all types\r\n- UI: fixed browser crash/infinite loop when deleting parent op of a newly created port using subpatch \"create port\"\r\n- Core: cleaned up port create functions https://docs.cables.gl/dev_ops/dev_ops.html\r\n- new op: Ops.Gl.Meshes.RectangleRounded - Draws a rectangle with rounded corners\r\n- new op: Ops.Gl.TextureToPoints - Create points by sampling texture \r\n- new op: Ops.Array.ArrayLogic - Performs logical comparison operations on a single array of numbers\r\n- new op: Ops.Array.ArrayLogicArray - Performs logical comparison operations on two arrays\r\n- new op: Ops.String.ConcatMulti.js - Joins multiple strings together\r\n- new op: Ops.Array.SortArray - Sorts an array of numbers with one of two modes - ascending or descending\r\n- new op: Ops.Array.Array3VectorLength - Returns the length of a vector for every triplet in an array\r\n- new op: Ops.Devices.Midi.MidiTranspose - transposes midi notes by given number\r\n- new op: Ops.Array.Array4toArray3 - convert an array4 to array3 by dropping every 4th number\r\n- Enhancement: Ops.Gl.Meshes.PointCloudFromArray - Array Input for Vertex Colors / control color of every particle\r\n- Enhancement: Ops.Anim.SineAnim - now has trigger out\r\n- Enhancement: Ops.Array.ArrayPack3 - now has trigger out\r\n- Enhancement: Ops.Array.Array_v2 changed dropdown to switch\r\n- Enhancement: Ops.Array.Array_v2 - now shows selected mode in op view\r\n- Enhancement: Ops.Devices.Midi.* - add output port grouping to all Midi ops\r\n- Enhancement: Ops.Devices.MidiNote - add toggle functionality \r\n- Enhancement: Ops.Devices.Midi.MidiNRPN - add clear functionality\r\n- Enhancement: Ops.Gl.Meshes.SimpleWireframe - now also works with unindexed meshes\r\n- Fix: Ops.Html.FontFile - Fixed file loading problems when viewing outside of the editor \r\n- Fix: Ops.Gl.Shader.WireframeMaterial - fix bug when other Materials stop working after using WireframeMaterial\r\n- Lots of smaller tweaks and fixes",
            "date": 1561115405524,
            "youtubeid": ""
        },
        {
            "text": "- UI: user can change size of texture previewer\r\n- UI: tweaked high contrast mode for cabling outside in sunlight\r\n- new op: Ops.Array.ArrayPack4x - Pack 4 arrays into one array\r\n- new op: Ops.ArrayRandomSelection -  Extract a definable amount of values from an array\r\n- new op: Ops.Array.ArrayMath - mathematical modes can be applied to a single array\r\n- new op: Ops.Devices.Midi.MidiInputDevice_v2 - receives midi data from hardware or daw\r\n- new op: Ops.Devices.Midi.MidiCC - receives midi CC data\r\n- new op: Ops.Devices.Midi.MidiNote - receives midi note data\r\n- new op: Ops.Devices.Midi.MidiClock - receieves midi clock signal\r\n- new op: Ops.Devices.Midi.MidiChord3 - maps 3 midi notes to values\r\n- new op: Ops.Devices.Midi.MidiMonitor - detailed information about midi events coming into cables\r\n- new op: Ops.Devices.Midi.MidiNRPN - Read NRPN values from a controller\r\n- new op: Ops.Devices.Midi.MidiNoteFilter - Reads only a specific range of midi notes\r\n- new op: Ops.Array.GateArray - Only allows an array through if pass through is true\r\n- new op: Ops.Array.Array_v2 - combines the old array op and ContinuousNumberArray op into one\r\n- new op: Ops.Array.ArrayToByteBuffer - convert an array to a bye buffer (Uint8ClampedArray)\r\n- new op: Ops.Trigger.TriggerReceive - Send/receive wireles triggers, similar to variables\r\n- new op: Ops.Trigger.TriggerSend  - Send/receive wireles triggers, similar to variables\r\n- new op: Ops.Array.Array3 - create an array of num triplets set to default values xyz\r\n- new op: Ops.Json.ObjectSetNumber - set number at key in an object\r\n- new op: Ops.Array.Array4toArray3 - convert an array4 to array3 by dropping every 4th number\r\n- new op: Ops.Bodymovin.LottieSVGPlayer - play lottie/bodymovin animations as SVG in a HTML element\r\n- many new op versions with new string port type\r\n- UI: texture ports: shortcut for creating a texture op\r\n- UI: hide ui elements when maximize renderer\r\n- feature: simpleWireframe now has normals/texturecoordinates\r\n- feature: noise dithering and noise amount added to Ops.Gl.TextureEffects.SSAO2 \r\n- feature : Scale array now works with triplets on instanced meshes with Ops.Gl.MeshInstancer_v2\r\n- cleanup: deprecation of ops that are not needed any longer\r\n- cleanup: deprecation of tone.js ops\r\n- fixed safari render to hdr/floaring point textures\r\n- added tons of documentation/examples/etc.\r\n",
            "date": 1560330488066,
            "youtubeid": ""
        },
        {
            "text": "- UI: Only latest op version will be shown from now on \r\n- UI: Op version number hidden in op list/selector (e.g. Ops.Anim.Timer2 is now listed as Ops.Anim.Timer (v2))\r\n- UI: Exporting option to export a patch as a single js file including json data, for faster loading of exported patches\r\n- UI: op add dialog now also searches for multiple keywords, e.g. \"interpolate array\"\r\n- UI: -/+ keys zoom in/out patch\r\n- UI: touchpadmode tweaks / now in user settings menu\r\n- UI: use cursor keys to change selection of ops (experimental)\r\n- new op: Ops.Gl.Shader.IBLMaterial3 - v3 - Overall improvements and extra options\r\n- new op: Ops.Gl.ShaderEffects.PerlinAreaDeform3 - v3 - Calculate normals and more/better modes\r\n- new op: Ops.Exp.Gl.Physics.CastRay - Cast a ray and test intersection with physics bodies\r\n- new op: Ops.Points.PointsField3d - Create a 3d point field with a definable amount of xyz points\r\n- new op: Ops.Gl.Shader.CustomShader2 - Now parses uniforms from source code, uniforms don't disappear when not in use\r\n- new op: Ops.Gl.Geometry.AlignGeometry - Align a geometry / change pivot/center point of geometry\r\n- new op: Ops.Gl.SurfaceScatterInstanced3 - v3 - Scatter object on the surface of a mesh - more distribution modes / etc.\r\n- new op: Ops.Gl.Matrix.ScreenPosTo3d2 - v2 - Convert screen coordinates to 3d coordinates\r\n- new op: Ops.Gl.TextureFromColorArray - Create a texture from an array of numbers\r\n- new op: Ops.Gl.Vr.MainloopWebVr - Rewritten WebVR Mainloop works with or without vr / added vr start button / etc.\r\n- new op: Ops.Gl.TextureEffects.Wobble - Waving wobble motion effect\r\n- new op: Ops.Json.GetStringFromObject - Get string from object\r\n- new op: Ops.Value.SwitchFile - switch between files\r\n- new op: Ops.String.StringNew2Old - temporary string port converter\r\n- new op: Ops.String.StringOld2New - temporary string port converter\r\n- new op: Ops.String.SwitchStringBoolean - Switch between two strings with a boolean\r\n- new op: Ops.String.GateString - Output string if pass through is true\r\n- new op: Ops.Json.GateObject - Output object if pass through is true\r\n- new op: Ops.String.SwitchString - Switch between multiple strings with an index\r\n- new op: Ops.Website.InfoURL - Information about the current URL\r\n- new op: Ops.Cables.AssetPathURL - outputs the path to the assets\r\n- new op: Ops.Html.BackgroundImage - Set a background image of a HTML element\r\n- new op: Ops.Html.ToggleClass - Add or remove css class from a HTML element\r\n- new op: Ops.Html.ElementChilds - Set childs of a HTML Element\r\n- new op: Ops.Math.Compare.GreaterOrEquals - Result is true if number 2 is greater or equals number 1\r\n- new op: Ops.Gl.Shader.ShaderDefine - Set shader defines\r\n- new op: Ops.String.StringEditor - Editor op for large strings with syntax highlighting\r\n- new op: Ops.Trigger.SetNumberOnTrigger - Putput number when triggered\r\n- new op: Ops.Trigger.TriggerOnChangeArray - Triggers when array has changed\r\n- new op: Ops.Trigger.TriggerOnChangeString - Triggers when string has changed\r\n- new op: Ops.Array.ArrayCeil - Round numbers up\r\n- new op: Ops.Array.ArrayFloor - Round numbers down\r\n- new op: Ops.Array.ArrayFract - Each number in an array becomes the fractional remainder \r\n- tweak: Ops.Gl.Shader.CustomShader: now works with uniform float arrays as input\r\n- tweak: Ops.Gl.TextureEffects.DrawImageNew - added new aspect correct mode, also image scrolling\r\n- tweak: Ops.Gl.MorphGeometries - now also morphs normals and tangents\r\n- tweak: Ops.Gl.MainLoop: show transparent background checkerboard when clear checkbox is unchecked\r\n- tweak: Ops.Array.ParseArray - By default array content is parsed as numbers\r\n- tweak: Ops.Gl.ShaderEffects.AreaDiscardPixel - added repeat and diagonal modes\r\n- tweak: Ops.Gl.Meshes.Cylinder2 - toggle mesh top/bottom caps\r\n- tweak: Ops.Gl.TextureEffects.ScaleTexture - more parameters for positioning and origin of scaling\r\n- tweak: Ops.Exp.Gl.ShaderEffects.LimitMeshByTexCoord - added more axis options\r\n- fix: Ops.Gl.MeshMorph - Geometry parameter being below 0 or above 7 no longer throws an error \r\n- fix: Ops.Array.PointArray.Field - now updates the array correctly when columns and rows parameter is changed.   \r\n- fix: Ops.Gl.Meshes.Cylinder2 - now renders correctly with IBLMaterial\r\n- fix: Ops.Array.Array3xRandomSelection - doesn't output the same co-ordinates twice\r\n- fix: Ops.Array.RandomArray - can now have a length of 0\r\n- fix: Ops.Array.Array3xGetValues - now accepts floats as input for the index and makes it an integer\r\n- fix: Ops.WebAudio.MicrophoneIn - working again\r\n- UI: fix bug where new string type output preview was not updating\r\n- UI: fix comment collision positioning with other ops\r\n- UI: fixed bugs with HDPI displays\r\n- web: fix link to my likes in \"my\" menu\r\n- converted json3d files are smaller now, saving float arrays base64 encoded\r\n- Embedding: pre initializing variable values (https://docs.cables.gl/dev_embed_vars/dev_embed_vars.html)\r\n",
            "date": 1558006694633,
            "youtubeid": ""
        },
        {
            "text": "- New op: Ops.Array.ArrayRotate - Rotates the contents of an array\r\n- New op: Ops.Array.ArraySmoothStep - Applies a smoothstep function to the contents of an array\r\n- New op: Ops.Array.ArrayPow - Applies a pow function to the contents of an array\r\n- New op: Ops.Array.ArrayAbs - turns all array contents into positive numbers\r\n- New op: Ops.Array.FillArrayRandomDuplicates - fill up array to reach given size\r\n- New op: Ops.Array.PointArray.FillPointArrayDuplicates - fill up points array to reach given size\r\n- New op: Ops.Points.PointsSphereRandom - Creates random points mapped to a sphere\r\n- Fix: Ops.Gl.Shader.PointMaterial - now has correct sizes\r\n- Fix: customshader better uniform management\r\n- Fix: image compose bugs when using triggeronce\r\n- Fix: ios artifacts when patch is running in iframe\r\n- Feature: Ops.Gl.Textures.VideoTexture - output transparent texture while loading\r\n- Feature: BoolAnim animate only one direction\r\n- UI: add comments attached to any op in your patch\r\n- UI: texture preview button for incoming texture ports\r\n- UI: quick way of adding variables\r\n- UI: fix wrong unlinking of ops when inserting non fitting op into link center\r\n- UI: undo of deleting op restores old values\r\n- Web: patch page menu show qr code for faster mobile access\r\n- Web: fullscreen button resizes canvas, no fullscreen mode available on ios\r\n- Web: better navigation menus",
            "date": 1549535813560,
            "youtubeid": "hCVU35-SBok"
        },
        {
            "text": "- new op: Ops.Gl.Meshes.SimpleWireframe - very simple wireframe renderer\r\n- new op: Ops.Gl.TextureEffects.Emboss - emboss image effect\r\n- new op: Ops.Gl.Textures.NoiseTexture - simple noise texture generator\r\n- new op: Ops.Gl.AspectRatio - set aspect ration (replaces viewport/letterbox ops)\r\n- feature: Ops.Gl.Texture2ColorArray now has floating point output from 0. to 1. works with HDR textures\r\n- feature: Ops.Gl.TextureEffects.ChromaticAberration - added blendmodes\r\n- feature: Ops.Gl.TextureEffects.Kaleidoscope - added blendmodes\r\n- feature: Ops.Gl.TextureEffects.Vignette2 - added blendmodes\r\n- feature: Ops.Gl.TextureEffects.Posterize - added blendmodes\r\n- feature: Ops.Gl.TextureEffects.Rectangle2 - added blendmodes\r\n- feature: Ops.Gl.TextureEffects.Twirl3 - added blendmodes\r\n- web: ops can be assigned to collections - https://cables.gl/ops/\r\n- web: op page can now list related ops\r\n- web: op page list of latest changes to this op\r\n- web: op page can now list op issues, e.g. not working on mobile\r\n- web: fix order of op reference list\r\n- UI: undo/redo now also works for parameter inputs\r\n- UI: undo/redo tweaks/fixes\r\n",
            "date": 1548507935149
        },
        {
            "text": "- new op: Ops.Gl.TextureEffects.WaveformGradient - Generate different texture waveforms. Sine, sawtooth and triangle.\r\n- new op: Ops.Gl.TextureEffects.ScaleTexture - scale texture in an image compose\r\n- new op: Ops.Gl.TextureEffects.GammaCorrection - Allows for Gamma correction of a texture\r\n- new op: Ops.Gl.TextureEffects.Noise.PixelNoise2 - pixelated noise\r\n- new op: Ops.Array.ArrayPack3 - pack 3 arrays into one\r\n- new op: Ops.Array.ArrayUnpack3 - Splits a xyz array into 3 individual arrays\r\n- new op: Ops.Array.ArrayUnpack4 - Splits a xyzw array into 4 individual arrays\r\n- new op: Ops.Array.PointArray.Field - generate coordinates for a rectangular field of points\r\n- new op: Ops.Array.Spline.RedistributeSplinePoints - recalculate a spline / change number of points\r\n- new op: Ops.Math.PowerOfTwoSize - Return the value as next power of two\r\n- new op: Ops.Math.FlipSign - positive numbers become negative and vice versa\r\n- new op: lots of new ops with new string ports\r\n- feature: Ops.Gl.TesselateGeometry - also tesselates tangents/bitangents\r\n- feature: Ops.Gl.MeshInstancer - input for rotations / limiting etc\r\n- fix: Ops.Gl.Meshes.TextMesh3 - center align correct\r\n- fix: Ops.Gl.Textures.WebcamTexture - handle all new super awesome funny security restrictions of browsers\r\n- fix: Ops.Gl.Shader.CustomShader - hides default internal uniforms/matrices\r\n- UI: snappier UI - performance optimizations in big patches / less patch redraws\r\n- UI: ( X ) mark not working ops when minimum link requirements are not met\r\n- UI: Firefox UI Fixes/Tweaks, now should work 100%\r\n- UI: texture preview now visualizes transparency\r\n- UI: new texture previewer as overlay\r\n- UI: new upload dialog\r\n- UI: new UI tips & tricks dialog\r\n- UI: many performance optimizations\r\n- UI: mousewheel zooming viewbox rewrite / general patch tweaks and optimizations\r\n- UI: of small tweaks and fixes\r\n- WEB: shorter patch URL/id",
            "date": 1547462034763
        },
        {
            "text": "- new op: Ops.Math.Sign - get sign of value (-1 if negative or 1 if positive)\r\n- new op: Ops.Gl.TextureEffects.RotateTexture - rotate image in imagecompose\r\n- new op: Ops.Html.SetCssVariableColor - set CSS variable color value\r\n- new op: Ops.Html.SetCssVariableString - set CSS variable value\r\n- new op: Ops.Html.GetCssVariable - read value of CSS variables\r\n- new op: Ops.Array.SortArray3xByDistance - sort an array by distance to previous point\r\n- ui: new patch settings user interface\r\n- web: tweaked sections on home page, fixed \"top of the month\" and added \"all time top patches\"\r\n- better validity check for opname when creating an ops\r\n- high contrast theme better\r\n- deprecated ops and renamed newer version\r\n- lots of tweaks/changes/cleanups\r\n",
            "date": 1544259542184
        },
        {
            "text": "- new op: Ops.Gl.TextureEffects.Waveform - New op to create different waveform textures\r\n- new op: Ops.Patch.PlayButton - wait until user pressed the play button\r\n- new op: Ops.Gl.Orthogonal2 - easier isometric/orthogonal projection rendering\r\n- new op: Ops.Gl.DownloadTexture - download a texture as image file\r\n- new op: Ops.Gl.TextureEffects.RotateTexture - rotate current state of image compose\r\n- tweak op: Ops.Gl.TextureEffects.Repeat - blend modes added\r\n- tweak op: Ops.Gl.TextureEffects.Stripes2 - Color values now work with gradient enabled\r\n- tweak op: Ops.Gl.TextureEffects.Desaturate - added mask parameter\r\n- tweak op: Ops.Gl.TextureEffects.Color - new mask parameter\r\n- web: cables.gl homepage - display of latest videos/news/forum entries and user activity\r\n- web: updated made-with-cables https://cables.gl/made-with-cables\r\n- editor: clone op now also copies op attachments\r\n- core: new String port type - soon there will be an extra port type for strings\r\n- fix simplespline performance issue\r\n- fix webgl 1.0 compatibility issues\r\n- copy cat cables video: elite dangerous loading screen https://www.youtube.com/watch?v=lTqmBtL3w68\r\n- Render2Texture op tutorial https://www.youtube.com/watch?v=4mWkws5fn5w&index=6&t=12s&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5\r\n- Random Numbers op tutorial https://www.youtube.com/watch?v=ASp7LEqZUIE&index=7&t=17s&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5\r\n- Average Interpolation op tutorial https://www.youtube.com/watch?v=iM3BTNHwmsA&index=8&t=55s&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5\r\n- Basic material op tutorial https://www.youtube.com/watch?v=F-CUdHq40Pc&index=9&t=11s&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5 \r\n- Transform and Scale op tutorial https://www.youtube.com/watch?v=5pucC-GuDcs&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5&index=12&t=4s\r\n- How to add custom controls tutorial https://www.youtube.com/watch?v=cpRVswVdvI0&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5&index=13&t=0s\r\n- Switch trigger op tutorial https://www.youtube.com/watch?v=nCJO9yF7bnk&list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5&index=10&t=3s",
            "date": 1542819796133
        },
        {
            "text": "- new op: Ops.Gl.TextureEffects.GlitchNoise - creates glitched black and white textures\r\n- new op: Ops.Gl.TextureEffects.PseudoLensFlares - simulate lensflare effect\r\n- new op: Ops.Gl.TextureEffects.PixelDisplacement3 - mirror wrap mode and input modes selectable / added blendmodes\r\n- new op: Ops.Gl.Meshes.Cylinder2 - rewrite - inner radius parameter to make holes in cylinders\r\n- new op: Ops.Gl.Meshes.Sphere2 - rewrite - fixed some problems with duplicate faces\r\n- Ops.Gl.TextureEffects.Stripes2 - free rotation + added blendmodes\r\n- Ops.Gl.TextureEffects.Noise.Noise Ops.Gl.TextureEffects.Noise.PixelNoise - added new RGB color noise switch\r\n- added blending and blendmodes to existing ops: TriangleNoise CheckerBoard EdgeDetection2 SimplexNoise CellularNoise  Border Pixelate Vignette2 Depthtexture \r\n- mesh ops: fixing most primitives with correct tangents/bitangents \r\n- UI: snap to grid - snap ops to grid - usersettings and shortcuts https://docs.cables.gl/ui_walkthrough/video/snaptogrid.gif\r\n- UI: click in background to find ops by colors if you have colored ops\r\n- UI: comments can now be colored\r\n- UI: copy+pasted ops are selected and can be moved together\r\n- UI: click parameter name to create and link op https://docs.cables.gl/ui_walkthrough/video/linkparameter.gif\r\n- UI: texture previewer tweaks\r\n- VIDEO: https://www.youtube.com/watch?v=QXxgX2kS0TE - Depth Texture Focus tricks tutorial\r\n- VIDEO: our new channel \"Byte Size Tutorials\" https://www.youtube.com/playlist?list=PLYimpE2xWgBt8kR3H3Pk_U0PYqLrHNWf5\r\n",
            "date": 1541693144340
        },
        {
            "text": "- new op: Ops.Gl.Matrix.Billboard - Rotate an object to always face the camera\r\n- new op: Ops.Exp.Lsystem - An LSystem is a parallel string rewriting system see: https://youtu.be/UnnFrRX1QEc\r\n- new op: Ops.Trigger.Past - Triggers only once when threshold is crossed\r\n- new op: Ops.Json.ObjectSwitcher.js - Allows switching between objects\r\n- new op: Ops.Gl.Meshes.Cross - Draws a cross mesh with controllable thickness and length. \r\n- new op: Ops.Array.ArraySin - Performs a sin or cos operation on the contents of an array\r\n- new op: Ops.Array.ArraySum - Adds one number to all values in an array\r\n- new op: Ops.Array.ArraySubtract - Subtracts one number from all values in an array\r\n- new op: Ops.Array.ArrayDivide - Divides all values in an array by one number\r\n- new op: Ops.Array.ArrayModulo - Applies a modulo operation to all values in an array\r\n- new op: Ops.Array.ArrayMin - Applies a min operation to all values in an array\r\n- new op: Ops.Array.ArrayMax - Applies a max operation to all values in an array\r\n- new op: Ops.String.RightPadNumber - number to a string, adds zeroes to reach num decimal places\r\n- new op: Ops.Audio.MidiJsonNote - Filter midiJson for notes\r\n- rectangle can now have more than 64k vertices\r\n- web: \"my patches\"-page can now be filtered\r\n- web: menu nav now optimized for mobile devices\r\n- new command: \"find unconnected ops\"\r\n- new command: \"find user ops\"\r\n- fix: render2texture: check for max number of MSAA samples\r\n- UI: you can set color marker for ops manually https://docs.cables.gl/ui_walkthrough/video/colormarker.gif\r\n- UI: find better score for ops in current subpatch / show color marker in results\r\n- UI: fix bug (wrong axis) when pressing A to align ops\r\n- UI: show multiple lines when dragging multiple links at the same time\r\n- UI: reset op parameters to default values via op contextmenu\r\n- UI: added user ops namespace color for better visibility \r\n- UI: clone op dialog if you don't own the patch\r\n- UI: many little fixes and tweaks\r\n- javascript: op coding: better error handling\r\n- javascript: reduced global scope vars\r\n- updated made with cables https://cables.gl/made-with-cables\r\n- better browser info / responsive layout https://cables.gl/browser\r\n- new tutorial: how to use LSystem https://youtu.be/UnnFrRX1QEc\r\n- new tutorial: custom shader https://www.youtube.com/watch?v=Zfhn8xSM0SE\r\n- documentation: added \"Creating attachments\" section\r\n",
            "date": 1540483441794
        },
        {
            "text": "- see new features in our blog: https://blog.cables.gl\r\n- new op: Ops.Gl.Shader.IBLMaterial2\r\n- new op: Ops.Gl.TextureEffects.DepthTextureFocus\r\n- new op: Ops.Gl.DirectionalTranslate\r\n- new op: Ops.Array.ArraySmooth\r\n- new op: Ops.Gl.Render2Textures\r\n- new op: Ops.Gl.ShaderEffects.Render2TexturesSlots\r\n- new op: Ops.Html.CSSFilter\r\n- new op: Ops.Html.TransformElement\r\n- new op: Ops.Html.CSSProperty\r\n- new op: Ops.Html.CSS3DElement\r\n- new op: Ops.Value.PreviousValueStore\r\n- new op: Ops.Array.ArrayMath\r\n- new op: Ops.Website.LocalStorage\r\n- new op: Ops.Gl.Matrix.InterpolateMatrix\r\n- new op: Ops.Array.ArraySwitch\r\n- new op: Ops.Json.ObjectIsNull\r\n- new op: Ops.Value.FileInput\r\n- new op: Ops.Exp.Gl.Shader.SetMaterialParameters\r\n- feature: editor is now minimizable (via button or escape)\r\n- feature: better serverside file editor support\r\n- feature: ops using cubemaps now supports single texture equirectangular maps\r\n- feature: new file operation: resize image to next power of two width/height\r\n- feature: new file operation: resize image to 50% of original size\r\n- feature: new file operation: convert png to jpg\r\n- tweak: json3dscene - overwrite material\r\n- tweak: new multi texture preview\r\n- tweak: better preview image quality\r\n- tweak: executing crashed op code will show dialog to reload patch\r\n- tweak: file browser: show file suffix in icon view\r\n- tweak: better visual \"saving\" indicator\r\n- fix: multi level subpatch backbutton now switches to parent subpatch\r\n- fix: editor stays open after reload for all type of files\r\n- fix: \"stuck cursor image\" issue\r\n- fix: executing op code will reload multiple instances properly\r\n- doc: more in-depth op coding documentation at https://docs.cables.gl",
            "date": 1538473563926
        },
        {
            "text": "- new op: Ops.Gl.GlPrimitive - Force rendering of meshes using points,lines or triangles\r\n- new op: Ops.Gl.Texture2ColorArray - Extract colors from a texture [thanks @lj]\r\n- new op: Ops.Gl.Canvas2Texture - Convert a canvas to texture [thanks @lj]\r\n- new op: Ops.Math.Degrees , Ops.Math.Radians - convert radians to degrees and vice versa [thanks @action]\r\n- worley/cellular/fbm/layer-noise added switch to be tileable \r\n- patch embedding: new option `glCanvasResizeToParent:true`\r\n- fix: customshader bug: not able to save project after editing uniforms\r\n- fix: webgl 1.0 framebuffer forgetting selected filtering\r\n- loaded projects now contain all ops of all users of this patch\r\n- texteditor fix undo history/seperate editor instances for every tab\r\n- new commands `pause` / `resume execution`\r\n- fix cursor scrolling in op search dialog\r\n- show \"edit code\" button when selecting user owned op\r\n- edit string parameter button bigger\r\n- possibility to copy patch (and error message) when saving a patch, without having write access\r\n- many little tweaks and fixes",
            "date": 1534060026513
        },
        {
            "text": "- new op *Ops.Gl.Matrix.Camera* - easier camera op by @action\r\n- editor: use browser default antialias setting\r\n- web: layout op reference page\r\n- web: users will stay logged in, even when restarting the browser\r\n- embedding patches: quicker way to set variable values: `patch.setVariable(name,value)`\r\n- ui: linking an input port to Ops.Value.Value will adopt the previous value and set a title\r\n- ui: dragging the patch (right click or pressing space) will not loose selection anymore\r\n- ui: fix \"view op code\"",
            "date": 1527261506630
        },
        {
            "text": "- doc: added 9 tipps to UI walktghrough https://docs.cables.gl/ui_walkthrough/ui_walkthrough.html\r\n- new op: *Ops.Gl.TextureEffects.Noise.WorleyNoise*\r\n- new op: *Ops.Gl.Shader.CustomShader*\r\n- new op: *Ops.Gl.Shader.Shader2Texture*\r\n- web: you can now set your password in settings\r\n- UI: project settings: owner is able to change the patch owner\r\n- UI: new value dragging user interface / dragging values now works on whole field / from left to right\r\n- UI: op parameter: spacing between value groups\r\n- UI: text-editor: switch between files via dropdown menu\r\n- fixed: webgl warning *VertexAttribDivisor*\r\n- fixed op textmesh border (premultiplied blendmode)",
            "date": 1526552855316
        },
        {
            "text": "- new op: *Ops.WebAudio.WebAudioContextRunner* - Helper op for unmuting on iOS & Chrome\r\n- new op: *Ops.Sidebar.ColorPicker* - Lets you enter / pick a color in the sidebar\r\n- new op: *Ops.Sidebar.DropDown* - Drop-down for the sidebar\r\n- new op: *Ops.Sidebar.TextInput* - Enter text in the sidebar \r\n- fix: chrome 66 automatically muting audio playback (sigh)\r\n- web: improved search functionality https://cables.gl/search?s=wurst \r\n- web: added possibility to search for ops\r\n- ui: changed  default file list view to list\r\n- ui: changing file list view will be set after reload\r\n- ui: file view and timeline opened state will be set after reload\r\n- ui: new command: `create new file`\r\n- ui: it is now possible to edit files on the server (`.json`,`.csv`,`.frag`,`.vert`)\r\n",
            "date": 1525882934886
        },
        {
            "text": "- new op: *Ops.Gl.Textures.Histogram* - Graphical representation of distribution of color in a texture\r\n- new op: *Ops.Math.Phyllotaxis2* - Coordinate generation like arrangement of leaves in some plants\r\n- new op: *Ops.Anim.LFO* - Low-frequency oscillation for animations\r\n- example: *Ops.Array.ArrayInterpolate* - interpolate between two arrays\r\n- example: *Ops.Exp.Gl.VectorFieldArray*\r\n- mini howto: convert files, e.g. SVG to Mesh: https://www.youtube.com/watch?v=C8m5Yr-nKbg\r\n- web: better changelog / tweaked acces rights examples\r\n- ui: much better sidebar ui style / can be minimized ",
            "date": 1525173661314
        },
        {
            "text": "- new op: *Ops.Gl.ShaderEffects.SplineRepeatInstanced* - repeat a mesh along a spline using instancing\n- new op: *Ops.ShaderEffects.TransformInstanced* - transform instanced meshes\n- new op: *Ops.Gl.MorphGeometries* - morph between two geometries\n- new op: *Ops.Gl.TextureEffects.Noise.PixelNoise* - pixelated noise \n- new op: *Ops.Gl.TextureEffects.Noise.PolkaDotNoise* - noise circles\n- new op: *Ops.Trigger.SceneMixer* – enable / disable multiple triggers with a boolean\n- new op: *Ops.Value.ValueHub* – Sequence for values\n- new op: *Ops.Anim.AverageInterpolation* - replaces old approachInterpolation\n- op *Ops.Json3d.Json3dMesh* - new option to merge and draw all meshes at once\n- op *Ops.Gl.MainLoop* - fix HDPI support\n- new tutorial: How to use send data from an Arduino to cables: <https://docs.cables.gl/arduino_serial/arduino_serial.html>\n- ui: timeline `b`/`n` hotkeys to mark loop area begin and end\n- ui: new command: scale renderer canvas\n- web: you can update your email in settings-&gt;account\n- core: performance optimizations when drawing many objects\n- serverside: svg converter can now hndle multiple pathes \n- serverside: exports contain doc.txt with list of used variables\n- serverside: cables moved to a new server",
            "date": 1524485628401
        },
        {
            "text": "- secret url: share URL to patch viewer without publishing / needing a login\n- cli-update: Version 0.2.0 of the  cables command line tool (https://npmjs.com/@cables/cables) has been released with some new features\n- ui: search in patch : score system / ranking of renamed ops better\n- ui: show warning when patch was saved on server and your current version is out of date\n- file info: .3d.json files - see what uses how much space in 3d files\n- file converter: .3d.json files - remove unwanted content for size optimization (texcoord/tangents, etc...)\n- new op: *Ops.Gl.ShaderEffects.GrassWobble* - simulate grass motion in wind vertex shader\n- new experimental op: *Ops.Anim.Snap* - Snap at certain points (e.g. while scrolling)\n- new experimental op: *Ops.Exp.RenderAnim* - export an animation as webm video or png image sequence\n- new op: *Ops.Gl.Geometry.ScaleGeometry* - uniform scaling of geometry vertices \n- new op: *Ops.Boolean.TriggerBoolean* - trigger true or false values\n- new op: *Ops.Gl.TextureEffects.Twirl2* - better twirl texture effect \n- new op: *Ops.Gl.Geometry.SortGeometry* - sort geometry triangles by position \n- new op: *Ops.Trigger.IfEqualsThen* - trigger if values re equal\n- new op: *Ops.Gl.GlInfo* - information about webgl/canvas\n- new op: *Ops.Math.Speed* - Measure speed of how much a value changes\n- new op: *Ops.Vars.SetVariableByTrigger* - set variable only after being triggered\n- new op: *Ops.Json.ObjectRelay* - Let’s a object through only if control bool is true\n- new op: *Ops.Boolean.Not* - better op name / result is false if input is true and vice versa\n- tweak new op version - *Ops.Math.Max2* - Returns the biggest number\n- tweak new op version: *Ops.Gl.Shader.BasicMaterialNew* -  alpha mask channel method selection\n- tweak new op version: *Ops.Gl.ShaderEffects.PerlinAreaDeform2* - normals calculation (experimental) / different methods",
            "date": 1521891050456
        },
        {
            "text": "- Tweak: Ops.Exp.Gl.MatCapMaterialNew - simple default matcap texture\n- Op search: faster / score: additional score for shorter namespaces / better sorting\n- UI: safari fixes for search/op search and correct mousebuttons\n- UI: new basic gradient editor\n- UI: timeline mousewheel valuescale / several fixes/tweaks\n- Update Tone.js library to r11\n- new op: *Ops.Gl.TextureEffects.LUTMap* - Apply color filter/effects by using a lookup texture\n- new op: *Ops.Gl.GradientTexture* - gradient texture and new gradient ui editor\n- new op: *Ops.Gl.ShaderEffects.AreaDiscardPixel* - Do not draw pixels inside a 3d area\n- new op: *Ops.Array.Array3xSplinePositionAtDistance* - Get position in array3x/spline at distance from start\n- new op: *Ops.Value.ValueRelay* – Let’s a value through only if control bool is true\n- new op: *Ops.Array.ArrayBreakOut* – Breaks out the values of an array\n- new op: *Ops.Array.ExclusiveBoolStateArray* – Array filled with “0”, only one can be “1\"\n- new op: *Ops.Value.MinimumSafeInteger* – Returns the minimum safe integer\n- new op: *Ops.Value.MaximumSafeInteger* – Returns the maximum safe integer\n- new op: *Ops.Patch.LoadingStatusTask* - Creates custom loading tasks\n- new op: *Ops.Value.TriggerOnChange* - triggers next everytime the input value changed\n- new op: *Ops.Cables.PatchConfig* - Read patch config when embedding on another page\n- new op: *Ops.Json.ObjectTrigger* - set output object when triggered\n- new op: *Ops.Json.ObjectOr* - result is first connected valid object\n- new op: *Ops.Gl.ShaderEffects.InstancedPerlinPosition* - displace position of instanced object by perlin noise value\n- new op: *Ops.Html.ElementFadeInOut* - fade html elements in and out\n- new op: *Ops.Array.ArrayMergeSimple* - merge two arrays\n- new op: *Ops.Math.Random2* - generate random number between min and max\n- new op: *Ops.Anim.FrameRangeAnim* - Parses string containing ranges of frames and play as coherent animation",
            "date": 1520668917967
        },
        {
            "text": "- new op: *Ops.Gl.InteractiveRectangle* - simple interaction op without picker/pickingmaterial\n- new op: *Ops.Json3d.SceneInfo* - Information about the current 3d scene\n- new op: *Ops.Net.CorsProxy* - cables experimental cors proxy\n- new op: *Ops.Html.DivElement* - html div element\n- new op: *Ops.Array.ArrayInterpolateOffset* - Interpolate between two arrays, only a few numbers at the same time\n- new op: *Ops.Debug.GlDebug* - See current gl states and error message\n- new op: *Ops.Gl.Depth2* - set Depth testing parameters\n- new op: *Ops.Sidebar.Button* - display a button in the sidebar\n- new op: *Ops.Sidebar.DisplayValue* - display a value in the sidebar\n- new op: *Ops.TimeLine.TimelineValue* - Get timeline value at [time]\n- new op: *Ops.Math.Ease* - Map a value to an easing curve\n- new op: *Ops.Math.Pi* - pi number\n- new op: *Ops.Math.DeltaSum* - Add delta values to an clamped absolute value\n- new op: *Ops.Trigger.RandomTrigger* - Randomly trigger output ports\n- new op: *Ops.Array.RingBuffer* - Array of fixed size, index is automatically incremented and restarts after reaching the end\n- new op: *Ops.Gl.Textures.CopyTexture* - Copy a texture and optionally resize it\n- new op: *Ops.Array.Array3xGetValuesInterpolated* - Get interpolated values between the indices of an array3x\n- new op: *Ops.Value.ValueSwitchBoolean* - Switch between two values by a boolean\n- new op: *Ops.Json.ParseObject* - parse string into object\n- new op: *Ops.Array.Array3xSplineLength* - Sum of distances between points/items in an array3x\n- new op: *Ops.Array.Array1xTo3x* - Convert array to array3x\n- new op: *Ops.Array.Array3xGetValues* - Get 3 values from an array3x\n- new op: *Ops.Array.Array3xMultiply* - Multiply every XYZ member of array3x\n- new op: *Ops.Array.ArrayMerge* - Merge/concat two arrays\n- new op: *Ops.String.HashIdDecode* - read back integers from a hashid\n- new op: *Ops.String.HashIdEncode* - generate short unique ids from integers\n- new op: *Ops.String.Base64Decode* - decode base64 string\n- new op: *Ops.String.Base64Encode* - encode base64 string\n- change default depth test method to LESS OR EQUAL for easier 2d stuff\n- experimental open renderer in new window button \n- Editor user settings: hide minimap option\n- Editor user settings: straight lines option\n- File selector button much better and more readable",
            "date": 1520079971672
        },
        {
            "text": "- new op: *Ops.Array.ArraySum*\n- new op: *Ops.Gl.Meshes.Star*\n- new op: *Ops.Exp.Gl.ShaderEffects.Fur*\n- new op: *Ops.Math.MercatorCoord*\n- new op: *Ops.Gl.DrawTextureMapping*\n- new op: *Ops.Exp.Gl.ShaderEffects.LimitMeshByTexCoord*\n- new op: *Ops.Exp.Gl.Matrix.RandomInstancer*\n- new op: *Ops.Gl.MeshInstancer*\n- new op: *Ops.Exp.MatrixToCssTransform*\n- new op: *Ops.Html.IFrame*\n- new op: *Ops.Gl.ShaderEffects.Twist2*\n- new op: *Ops.Gl.TextureEffects.RoundCorners*\n- new op: *Ops.Gl.TextureEffects.Twirl*\n- new op: *Ops.Json.CsvColumnArray*\n- new op: *Ops.Json.CsvJsonFile*\n- new op: *Ops.Math.NumberDivisible*\n- json3dscene2: more options / better generated op order/structure\n- animation renderer can now render to .WEBM video files",
            "date": 1517958869869
        },
        {
            "text": "- UI: show error message when uploading unknown filetypes\n- UI: show upload progress bar\n- UI: show current file filter in file library header\n- new op: *Ops.Gl.Mesh.Polyhedron* - generate polyhedron meshes. example: <https://cables.gl/p/5a32cdca25b0ed9f0d4bccb4>\n- new op: *Ops.Gl.Geometry.DivideGeometry* - disconnect faces/polygons of a mesh\n- new op: *Ops.Gl.ShaderEffects.ExplodeDividedMesh* - explode a (divided) mesh in the direction of faces normals. example: <https://cables.gl/p/5a32d2a37e98c6b80d26b88c>\n- new op: *Ops.Gl.ShaderEffects.ScaleByNormal* - scale an object in the direction of face normals. example: <https://cables.gl/p/5a32d1f57e98c6b80d26b889>\n- new op: *Ops.Boolean.MonoFlop* - trigger switches bool to true, turns back to false automatically\n- new op: *Ops.String.StringIterator* - Iterate over every character of a string\n- new op: *Ops.Math.PointInRectangle2d* - test if a point is in or outside of a rectangle\n- new op: *Ops.Math.AddUp* - add up numbers\n- new op: *Ops.Math.CircleCoordinates* - calculates x,y coordinate of a circle\n- new op: *Ops.Math.OneMinus* - subtract a number from one\n- new op: *Ops.String.RandomString* - generate a random string of given characters\n- new op: *Ops.Timeline.GotoFrame* - jump to a key in the timeline\n- new op: *Ops.Debug.Console* - show console log output on the screen\n- new op: *Ops.Array.ArraySetObject* - put an object at index in an array\n- new op: *Ops.Array.Array3xAverage* - average x,y,z values of an array3d\n- new op: *Ops.Array.Array3xAnalyze* - min,max and average values of an array3x\n- new op: *Ops.Array.Array3xReverse* – Reverses an array with value triplets, e.g. `[1, 2, 3, 4, 5, 6] —&gt; [4, 5, 6, 1, 2, 3]`\n- new op: *Ops.Boolean.IfFalseThen* - trigger childs if value is false\n- new op: *Ops.Gl.OnResize* - trigger when canvas was resized\n- new op: *Ops.Gl.Geometry.GeometryInfo* - information about a geometry\n- new op: *Ops.Gl.Geometry.TransformGeometry* - transform vertices of geometry\n- new op: *Ops.Gl.Geometry.CenterGeometry* - center an object to the average x,y,z position of its vertices\n- new op: *Ops.Gl.Geometry.GeometryPoints* - get vertices of a geometry as array3x\n- new op: *Ops.Gl.Geometry.GeometryBounds* - boundings of a geometry / draw a bounding box\n- op-rename: *Ops.Math.Sinus* —&gt; *Ops.Math.Sine*\n- fix: *Ops.Array.ArrayReverse* – Does not reverse the input array, creates a copy\n- fix: *Ops.Gl.Matrix.ScreenCoordinates* - better accuracy",
            "date": 1513281068381
        },
        {
            "text": "- new op: *Ops.Gl.Screenshot* - download the current screen as .png file by triggering\n- new op: *Ops.Gl.QrCode* – generates a QR-Code, example: <https://cables.gl/p/5a1297e4f35c6e2914c8400c>\n- new op: *Ops.Devices.Mobile.LockOrientation* - force screen orientation\n- fix: *ArrayBuffer3x* - added reset button - does not start at 0,0,0, but on first value given\n- new command: *reset renderer size*\n- fix: animation renderer: speed + less problems when resizing canvas\n- fix: removed ipad “rubberbanding” when viewing patch in new window\n- fix: mousepicker compatibility with hires screens\n- fix: command: *set renderer size* can now set size bigger than browser window.",
            "date": 1511458118616
        },
        {
            "text": "- op: *TextureEffects.ChromaticAberration* - new parameters: smooth and masking \n- ui: Op Select - browse ops by namespace\n- fix: patch export now includes all (external) libraries",
            "date": 1511161055379
        },
        {
            "text": "- new op: *Waveform* – renders the waveform of an audio file, example: <https://cables.gl/p/59f9cf6019c23eb325245cf3>\n- new op: *Ops.Gl.TextureEffects.Noise.RectangularNoise* \n- new op: *Ops.Net.AjaxRequestString*\n- ui: [ALT]+[right mouse]+drag on existing link will copy link to another port\n- new command (CMD+P): *toggle window fullscreen* show editor in fullscreen\n- new command (CMD+P): *toggle editor* show/hide toggle editor\n- search now shows subpatch path of op\n- op fix: *Ops.Gl.TextureEffects.DepthTexture* - working as expected again\n- op tweak: *Ops.Gl.TextureEffects.Circle* - position and correct aspect ratio\n- ui fix: playing timeline does not stop when pressing any key / toggle play with space key\n- sandboxing security improvements",
            "date": 1510642390738
        },
        {
            "text": "- new op: *Ops.Gl.TextureEffects.ColorMap* - map colors to luminance\n- new op: *Ops.Gl.ShaderEffects.Bend* - bend objects along an axis (thanks kusma)\n- op fix: *Ops.Json.ObjectGetObject* – Key input works again\n- op fix: *Ops.Json.ObjectGetValue* – Key input works again\n- ui: faster startup/loading time of big patches\n- timeline: overview double click toggle area to whole project length\n- timeline: cursor position percentage display\n- patch page: tweaked info display / mobile optimized\n- tweaked/fixed animation renderer/exporter\n- new video tutorial: [embed a cables patch into your website](https://www.youtube.com/watch?v=YUAyS_NcwTA&t=62s)",
            "date": 1508859851042
        },
        {
            "text": "- performance tweaks: freeShape / Pointcollector\n- new op: *Ops.Gl.TextureArrayLoaderFromArray*\n- new op: *Ops.Array.ArrayReverse*\n- *Ops.Gl.Performance* - toggle visibility\n- profiler: Peak CPU Usage analysis\n- timeline: “Show all Values” fixed scaling problems and other small tweaks\n- timeline: metatab shows all keyframed op ports\n- timeline: resize visible area\n- responsive and nicer browser check <https://cables.gl/browser>\n- *Ops.Gl.Mainloop* - support for retina/high DPI screens\n- tweaked ios safari patch iframe/canvas\n- new op *Ops.SetVariableString*: Set a string variable from",
            "date": 1507303676932
        },
        {
            "text": "- web: you can now personalize your profile: <https://cables.gl/settings>",
            "date": 1505325935675
        },
        {
            "text": "- new op: *Ops.Gl.ShaderEffects.DeformArea* deform spherical area\n- new op: *Ops.Gl.ShaderEffects.PerlinAreaDeform* perlin noise vertex wobble\n- new op: *Ops.Gl.Meshes.TriangleArray* build a mesh out of an array of points\n- new op: *Ops.Gl.Meshes.Cube2* cube with correct size\n- new op: *Ops.WebAudio.TextToSpeech.Say* - text-to-speech, say things, Example: https://cables.gl/p/59b1356a12401c551fe7ebe6\n- new op: *Ops.Exp.Gl.ShadowSource*, *Ops.Exp.Gl.ShaderEffects.Shadow* very early, experimental shadowmapping\n- UI: transform gizmo for transform ops https://media.giphy.com/media/3ov9jIS9yM5T7rkZ2w/giphy.gif\n- misc: Many fixes and ui tweaks",
            "date": 1504815329871
        },
        {
            "text": "- new op: *Ops.Gl.TextureEffects.SSAO2* - new screen space ambient occlustion\n- new op: *Ops.Gl.TesselateGeometry*  - create more triangles in a geometry/mesh\n- new op: *Ops.String.SubString* - subset of a string between one index and another\n- new op: *Ops.String.StringLength* - number of characters in a string\n- new op: *Ops.String.StringTrim* - remove whitespace from start and end of string\n- new op: *Ops.String.Lowercase*\n- *Ops.Gl.TextureEffects.Color* - finally has blendmodes\n- *Ops.Gl.TextureEffects.Vignette* - better controls + color\n- *matcapMaterialNew* experimental screenSpace normal calculation in shader\n- UI: dragging values of parameters is much slower now / shift accelerates\n- UI: dragging integer port values now only results in integers\n- UI: fixed loading of old patch version\n- core: grey defaultshader now works with shaderEffects/shaderModules\n- core: better switching between glsl version 1 and 3 / compatibility defined\n- tweaked names for many ops\n- web: changed font for better readability and get rid of typekit once and for all\n- web: examples page revamped",
            "date": 1504082354595
        },
        {
            "text": "- new op: *Ops.Date.DateDifference* - get difference from two timestamps (countdown)\n- new op: *Ops.Date.DateTimestamp* - get Timestamp from a date\n- new op: *Ops.String.LeftPad* - create a fixed length string from a number 1 -&gt; 0001\n- new op: *Ops.Anim.InOutInAnim* - animates after a trigger from 1 to 0 to 1\n- new op: *Ops.String.StringBreak* - insert linebreaks into a string after [num] chars\n- fix: phongmaterial works now with shadereffects like pixelMeshNoise, fog, areaColor",
            "date": 1502721835524
        },
        {
            "text": "- new op: *Ops.Gl.ShaderEffects.Fog* - draw fog while rendering meshes, before postprocessing - example: <https://cables.gl/p/598d5238936e4d1b6a955d60>\n- new op: *Ops.Gl.ShaderEffects.ColorArea* - colorize pixels of meshes in an specific area - example: <https://cables.gl/p/598d5238936e4d1b6a955d60>\n- tweaks *Ops.Gl.Matrix.OrbitControls* - many tweaks and outputs degrees\n- CGL: auto shader module grouping for module prefixes",
            "date": 1502434318783
        },
        {
            "text": "- new op: *Ops.Gl.Phyllotaxis* calculate phyllotaxis pattern coordinates\n- ui: animation render as modal window / new command “animation renderer” +progressbar\n- new op: *Ops.Math.GaussianRandomArray* - random numbers fitting a Gaussian, or normal, distribution",
            "date": 1501926881602
        },
        {
            "text": "- new op: *Ops.Gl.ShaderEffects.MeshPixelNoise* simple 3d space color noise for meshes without needing textures or texture coordinates\n- new op: *Ops.Array.ArrayContains*, *Ops.String.StringContains* - check if an array contains a string or number\n- new op: *Ops.Boolean.TriggerChangedTrue* - trigger next only after value was changed to true\n- new op: *Ops.String.Join* - join array values to a string\n- ui: outdated ops warning: offer to create new version if exists / outdated op warning is now visible in patch\n- ui: better comments\n- ui: rewrite texture previewer - much better performance\n- ui: sidebar customize drag’n’drop interface",
            "date": 1501859341433
        },
        {
            "text": "- experimental data flow visualization of the patch : press ```cmd+p``` and then enter ```flow``` https://media.giphy.com/media/3o8dFnACzQ4eDeORy0/giphy.gif\n- new op: *Ops.Variable* / *Ops.SetVariable* for new patch variables system\n- new op: *Ops.Gl.TextureEffects.CheckerBoard*\n- new op: *Ops.Boolean.isZero*, *Ops.Boolean.isOne*\n- new op: *Ops.Gl.TextureEffects.PolarCoords*\n- new op: *Ops.Html.CSS* - style html elements\n- new op: *Ops.Devices.TouchScreen* - touch events and coordinates from multiple fingers\n- all mouse ops work with touch devices now and emulate a left mouse button",
            "date": 1500972980020
        },
        {
            "text": "- New Op: *Ops.Html.WindowHasFocus* - detect if the browser window/tab has focus\n- ui: SubPatch navigation breadcrumb\n- UI: preview image: background toggle by click to see transparency\n- ui: fix: copy and paste subpatches\n- ui: fix export finished window overflow \n- ui: fix bug where previewer made everyting really slow\n- ui: escape: much faster and reactive op add/search\n- ui: more commands",
            "date": 1500739755845
        },
        {
            "text": "- *Ops.Devices.Mouse.MouseDrag* - add option to not limit the value range\n- CMD: new command *show changelog*\n- UI: create project by choosing from predefined templates\n- UI: rework: bookmarks\n- UI: show changelog since last us",
            "date": 1500564248986
        },
        {
            "text": "- ui button to report errors\n- ops display red dot when has an error\n- ui: code editor does not rescale patch\n- ui: file library/editor do not overlap sidebar\n- ui: usersettings dialog\n- ui: more commandpalette commands\n- ui: fix hover info area\n- ui: added a (customisable) sidebar – to customise hit `cmd + shift + p`, enter a command and tick the pin icon (edited)\n- ui: CMD+ENTER - toggle maximize renderer\n- ui: command palette shows all commands\n- ui: new command open patch website",
            "date": 1500508800000
        },
        {
            "text": "- new ops: *cubemapCamera*, *cubeMapFromTextures*, *cubeMapMaterial*\n- fix *Ops.Gl.Meshes.Sphere* mesh glitches",
            "date": 1499990400000
        },
        {
            "text": "- right click drag multiple links at once\n- rework: search (CMD+F)\n- rework: add op UI\n- UI: add op search much faster\n- UI: rendering op layout as images/svg\n- UI: op highlight animation after creating/search+click\n- UI: copy/paste visual feedback\n- UI: rework icons/cursor when dragging links \n- UI: op namespace colors everywhere\n- UI: better Project settings Tag-UI\n- UI: new feature: command palette (CMD+P)\n- UI: theme: high contrast mode\n",
            "date": 1499904000000
        },
        {
            "text": "- feature: randomanim: pause between animations\n- new op: *Ops.Gl.GridTransform* - transform and arrange elements into a grid\n- fix: *basicMaterial* - fix bug, texture was showing correct only after reload\n- fix: *svgTexture* - fixed problem, project could not be saved\n- fix: *webCamTexture* - performance tweak / enabled/disabled switch (edited)\n- fix: *Ops.Gl.Texture* wasn’t setting filter correctly in some cases (edited)\n- published video tutorials at: https://www.youtube.com/watch?v=KPTGFM177HU&list=PLYimpE2xWgBveaPOiV_2_42kZEl_1ExB0",
            "date": 1499731200000
        }
    ]
}
